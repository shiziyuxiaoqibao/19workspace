gplink-2.0.0
Copyright (c) IDE Tool Project
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           	.radix dec
                                           	.include "KF8A100GQP.inc"
                                           func._Init_ADC2	.code
                                           _Init_ADC2	;Function start
                                           ;	.line	108; "../ADC.c"	void Init_ADC2(unsigned mode)
0005af   e100     MOVB	#0x00               	BANKSEL	r0x1000
0005b0   51b6     MOV	0xb6, R0             	MOV	r0x1000, R0
                                           	BANKSEL	STK00
0005b1   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1001
0005b2   51b7     MOV	0xb7, R0             	MOV	r0x1001, R0
                                           ;	.line	111; "../ADC.c"	TR66 =1;
0005b3   e101     MOVB	#0x01               	BANKSEL	_TR6_bits
0005b4   6e26     SET	0x26, 6              	SET	_TR6_bits, 6
                                           ;	.line	113; "../ADC.c"	ANS12 =1;//ADC采样引脚需要配置为模拟输入
0005b5   e100     MOVB	#0x00               	BANKSEL	_ANS1_bits
0005b6   6a4b     SET	0x4b, 2              	SET	_ANS1_bits, 2
                                           ;	.line	115; "../ADC.c"	switch(mode)
0005b7   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1000
0005b8   38b6     SUB	R0, 0xb6             	SUB	R0, r0x1000
0005b9   7a03     JB	0x3, 2                	JB	PSW, 2
0005ba   c5bd     JMP	#0x5bd               	JMP	_00046_DS_
0005bb   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	r0x1001
0005bc   38b7     SUB	R0, 0xb7             	SUB	R0, r0x1001
                                           _00046_DS_
0005bd   7803     JB	0x3, 0                	JB	PSW, 0
0005be   c5f6     JMP	#0x5f6               	JMP	_00042_DS_
0005bf   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1000
0005c0   38b6     SUB	R0, 0xb6             	SUB	R0, r0x1000
0005c1   7a03     JB	0x3, 2                	JB	PSW, 2
0005c2   c5c5     JMP	#0x5c5               	JMP	_00047_DS_
0005c3   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	r0x1001
0005c4   38b7     SUB	R0, 0xb7             	SUB	R0, r0x1001
                                           _00047_DS_
0005c5   7003     JNB	0x3, 0               	JNB	PSW, 0
0005c6   c5f6     JMP	#0x5f6               	JMP	_00042_DS_
                                           	BANKSEL	r0x1001
0005c7   06b7     DECR	0xb7                	DECR	r0x1001
                                           	BANKSEL	r0x1001
0005c8   51b7     MOV	0xb7, R0             	MOV	r0x1001, R0
0005c9   9905     MOV	R1, #0x5             	MOV	R1,#high _00048_DS_
0005ca   98d1     MOV	R0, #0xd1            	MOV	R0,#_00048_DS_
                                           	BANKSEL	r0x1001
0005cb   20b7     ADD	R0, 0xb7             	ADD	R0, r0x1001
0005cc   7003     JNB	0x3, 0               	JNB	PSW, 0
0005cd   ff11     INC	R1                   	INC	R1
0005ce   5373     MOV	0x73, R1             	TRAPPC3	$
0005cf   530a     MOV	0xa, R1              	MOV	PCH, R1
0005d0   5102     MOV	0x2, R0              	MOV	PCL, R0
                                           _00048_DS_
0005d1   c5d6     JMP	#0x5d6               	JMP	_00036_DS_
0005d2   c5db     JMP	#0x5db               	JMP	_00037_DS_
0005d3   c5e2     JMP	#0x5e2               	JMP	_00038_DS_
0005d4   c5e9     JMP	#0x5e9               	JMP	_00039_DS_
0005d5   c5f0     JMP	#0x5f0               	JMP	_00040_DS_
                                           _00036_DS_
                                           ;	.line	118; "../ADC.c"	ADCCTL0 =0x81;//采样结果右对齐，且使能ADC
0005d6   9881     MOV	R0, #0x81            	MOV	R0,# 0x81
                                           	BANKSEL	_ADCCTL0
0005d7   511f     MOV	0x1f, R0             	MOV	_ADCCTL0, R0
                                           ;	.line	119; "../ADC.c"	ADCCTL1 =0x54;//参考电压设置为VDD
0005d8   9854     MOV	R0, #0x54            	MOV	R0,# 0x54
                                           	BANKSEL	_ADCCTL1
0005d9   513f     MOV	0x3f, R0             	MOV	_ADCCTL1, R0
                                           ;	.line	121; "../ADC.c"	break;
0005da   c5f6     JMP	#0x5f6               	JMP	_00042_DS_
                                           _00037_DS_
                                           ;	.line	123; "../ADC.c"	ADCCTL0 =0x81;
0005db   9881     MOV	R0, #0x81            	MOV	R0,# 0x81
                                           	BANKSEL	_ADCCTL0
0005dc   511f     MOV	0x1f, R0             	MOV	_ADCCTL0, R0
                                           ;	.line	124; "../ADC.c"	ADCCTL1 =0x54;//参考电压设置为VDD
0005dd   9854     MOV	R0, #0x54            	MOV	R0,# 0x54
                                           	BANKSEL	_ADCCTL1
0005de   513f     MOV	0x3f, R0             	MOV	_ADCCTL1, R0
                                           ;	.line	125; "../ADC.c"	ADCCTL2 =0x26;//采样FVR
0005df   9826     MOV	R0, #0x26            	MOV	R0,# 0x26
                                           	BANKSEL	_ADCCTL2
0005e0   5150     MOV	0x50, R0             	MOV	_ADCCTL2, R0
                                           ;	.line	126; "../ADC.c"	break;
0005e1   c5f6     JMP	#0x5f6               	JMP	_00042_DS_
                                           _00038_DS_
                                           ;	.line	128; "../ADC.c"	ADCCTL0 =0x81;
0005e2   9881     MOV	R0, #0x81            	MOV	R0,# 0x81
                                           	BANKSEL	_ADCCTL0
0005e3   511f     MOV	0x1f, R0             	MOV	_ADCCTL0, R0
                                           ;	.line	129; "../ADC.c"	ADCCTL1 =0x54;//参考电压设置为VDD
0005e4   9854     MOV	R0, #0x54            	MOV	R0,# 0x54
                                           	BANKSEL	_ADCCTL1
0005e5   513f     MOV	0x3f, R0             	MOV	_ADCCTL1, R0
                                           ;	.line	130; "../ADC.c"	ADCCTL2 =0x27;//采样内置温度传感器
0005e6   9827     MOV	R0, #0x27            	MOV	R0,# 0x27
                                           	BANKSEL	_ADCCTL2
0005e7   5150     MOV	0x50, R0             	MOV	_ADCCTL2, R0
                                           ;	.line	131; "../ADC.c"	break;
0005e8   c5f6     JMP	#0x5f6               	JMP	_00042_DS_
                                           _00039_DS_
                                           ;	.line	133; "../ADC.c"	ADCCTL0 =0x81;
0005e9   9881     MOV	R0, #0x81            	MOV	R0,# 0x81
                                           	BANKSEL	_ADCCTL0
0005ea   511f     MOV	0x1f, R0             	MOV	_ADCCTL0, R0
                                           ;	.line	134; "../ADC.c"	ADCCTL1 =0x5C;//参考电压设置为FVR
0005eb   985c     MOV	R0, #0x5c            	MOV	R0,# 0x5c
                                           	BANKSEL	_ADCCTL1
0005ec   513f     MOV	0x3f, R0             	MOV	_ADCCTL1, R0
                                           ;	.line	135; "../ADC.c"	ADCCTL2 =0x05;//采样AD5通道
0005ed   9805     MOV	R0, #0x5             	MOV	R0,# 0x05
                                           	BANKSEL	_ADCCTL2
0005ee   5150     MOV	0x50, R0             	MOV	_ADCCTL2, R0
                                           ;	.line	136; "../ADC.c"	break;
0005ef   c5f6     JMP	#0x5f6               	JMP	_00042_DS_
                                           _00040_DS_
                                           ;	.line	138; "../ADC.c"	ADCCTL0 =0x81;
0005f0   9881     MOV	R0, #0x81            	MOV	R0,# 0x81
                                           	BANKSEL	_ADCCTL0
0005f1   511f     MOV	0x1f, R0             	MOV	_ADCCTL0, R0
                                           ;	.line	139; "../ADC.c"	ADCCTL1 =0x5C;//参考电压设置为FVR
0005f2   985c     MOV	R0, #0x5c            	MOV	R0,# 0x5c
                                           	BANKSEL	_ADCCTL1
0005f3   513f     MOV	0x3f, R0             	MOV	_ADCCTL1, R0
                                           ;	.line	140; "../ADC.c"	ADCCTL2 =0x24;//采样OPOUT
0005f4   9824     MOV	R0, #0x24            	MOV	R0,# 0x24
                                           	BANKSEL	_ADCCTL2
0005f5   5150     MOV	0x50, R0             	MOV	_ADCCTL2, R0
                                           _00042_DS_
                                           ;	.line	142; "../ADC.c"	}
0005f6   0008     CRET                     	CRET	
                                           func._Init_ADC	.code
                                           _Init_ADC	;Function start
                                           ;	.line	63; "../ADC.c"	void Init_ADC(unsigned mode)
0005f7   e100     MOVB	#0x00               	BANKSEL	r0x1002
0005f8   51b8     MOV	0xb8, R0             	MOV	r0x1002, R0
                                           	BANKSEL	STK00
0005f9   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1003
0005fa   51b9     MOV	0xb9, R0             	MOV	r0x1003, R0
                                           ;	.line	65; "../ADC.c"	TR04 =1;
                                           	BANKSEL	_TR0_bits
0005fb   6c25     SET	0x25, 4              	SET	_TR0_bits, 4
                                           ;	.line	67; "../ADC.c"	ANS37 =1;//ADC采样引脚需要配置为模拟输入
                                           	BANKSEL	_ANS3_bits
0005fc   6f4d     SET	0x4d, 7              	SET	_ANS3_bits, 7
                                           ;	.line	70; "../ADC.c"	switch(mode)
0005fd   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1002
0005fe   38b8     SUB	R0, 0xb8             	SUB	R0, r0x1002
0005ff   7a03     JB	0x3, 2                	JB	PSW, 2
000600   c603     JMP	#0x603               	JMP	_00033_DS_
000601   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	r0x1003
000602   38b9     SUB	R0, 0xb9             	SUB	R0, r0x1003
                                           _00033_DS_
000603   7803     JB	0x3, 0                	JB	PSW, 0
000604   c63c     JMP	#0x63c               	JMP	_00029_DS_
000605   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1002
000606   38b8     SUB	R0, 0xb8             	SUB	R0, r0x1002
000607   7a03     JB	0x3, 2                	JB	PSW, 2
000608   c60b     JMP	#0x60b               	JMP	_00034_DS_
000609   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	r0x1003
00060a   38b9     SUB	R0, 0xb9             	SUB	R0, r0x1003
                                           _00034_DS_
00060b   7003     JNB	0x3, 0               	JNB	PSW, 0
00060c   c63c     JMP	#0x63c               	JMP	_00029_DS_
                                           	BANKSEL	r0x1003
00060d   06b9     DECR	0xb9                	DECR	r0x1003
                                           	BANKSEL	r0x1003
00060e   51b9     MOV	0xb9, R0             	MOV	r0x1003, R0
00060f   9906     MOV	R1, #0x6             	MOV	R1,#high _00035_DS_
000610   9817     MOV	R0, #0x17            	MOV	R0,#_00035_DS_
                                           	BANKSEL	r0x1003
000611   20b9     ADD	R0, 0xb9             	ADD	R0, r0x1003
000612   7003     JNB	0x3, 0               	JNB	PSW, 0
000613   ff11     INC	R1                   	INC	R1
000614   5373     MOV	0x73, R1             	TRAPPC3	$
000615   530a     MOV	0xa, R1              	MOV	PCH, R1
000616   5102     MOV	0x2, R0              	MOV	PCL, R0
                                           _00035_DS_
000617   c61c     JMP	#0x61c               	JMP	_00023_DS_
000618   c621     JMP	#0x621               	JMP	_00024_DS_
000619   c628     JMP	#0x628               	JMP	_00025_DS_
00061a   c62f     JMP	#0x62f               	JMP	_00026_DS_
00061b   c636     JMP	#0x636               	JMP	_00027_DS_
                                           _00023_DS_
                                           ;	.line	73; "../ADC.c"	ADCCTL0 =0x81;//采样结果右对齐，且使能ADC
00061c   9881     MOV	R0, #0x81            	MOV	R0,# 0x81
                                           	BANKSEL	_ADCCTL0
00061d   511f     MOV	0x1f, R0             	MOV	_ADCCTL0, R0
                                           ;	.line	74; "../ADC.c"	ADCCTL1 =0x54;//参考电压设置为VDD
00061e   9854     MOV	R0, #0x54            	MOV	R0,# 0x54
                                           	BANKSEL	_ADCCTL1
00061f   513f     MOV	0x3f, R0             	MOV	_ADCCTL1, R0
                                           ;	.line	76; "../ADC.c"	break;
000620   c63c     JMP	#0x63c               	JMP	_00029_DS_
                                           _00024_DS_
                                           ;	.line	78; "../ADC.c"	ADCCTL0 =0x81;
000621   9881     MOV	R0, #0x81            	MOV	R0,# 0x81
                                           	BANKSEL	_ADCCTL0
000622   511f     MOV	0x1f, R0             	MOV	_ADCCTL0, R0
                                           ;	.line	79; "../ADC.c"	ADCCTL1 =0x54;//参考电压设置为VDD
000623   9854     MOV	R0, #0x54            	MOV	R0,# 0x54
                                           	BANKSEL	_ADCCTL1
000624   513f     MOV	0x3f, R0             	MOV	_ADCCTL1, R0
                                           ;	.line	80; "../ADC.c"	ADCCTL2 =0x26;//采样FVR
000625   9826     MOV	R0, #0x26            	MOV	R0,# 0x26
                                           	BANKSEL	_ADCCTL2
000626   5150     MOV	0x50, R0             	MOV	_ADCCTL2, R0
                                           ;	.line	81; "../ADC.c"	break;
000627   c63c     JMP	#0x63c               	JMP	_00029_DS_
                                           _00025_DS_
                                           ;	.line	83; "../ADC.c"	ADCCTL0 =0x81;
000628   9881     MOV	R0, #0x81            	MOV	R0,# 0x81
                                           	BANKSEL	_ADCCTL0
000629   511f     MOV	0x1f, R0             	MOV	_ADCCTL0, R0
                                           ;	.line	84; "../ADC.c"	ADCCTL1 =0x54;//参考电压设置为VDD
00062a   9854     MOV	R0, #0x54            	MOV	R0,# 0x54
                                           	BANKSEL	_ADCCTL1
00062b   513f     MOV	0x3f, R0             	MOV	_ADCCTL1, R0
                                           ;	.line	85; "../ADC.c"	ADCCTL2 =0x27;//采样内置温度传感器
00062c   9827     MOV	R0, #0x27            	MOV	R0,# 0x27
                                           	BANKSEL	_ADCCTL2
00062d   5150     MOV	0x50, R0             	MOV	_ADCCTL2, R0
                                           ;	.line	86; "../ADC.c"	break;
00062e   c63c     JMP	#0x63c               	JMP	_00029_DS_
                                           _00026_DS_
                                           ;	.line	88; "../ADC.c"	ADCCTL0 =0x81;
00062f   9881     MOV	R0, #0x81            	MOV	R0,# 0x81
                                           	BANKSEL	_ADCCTL0
000630   511f     MOV	0x1f, R0             	MOV	_ADCCTL0, R0
                                           ;	.line	89; "../ADC.c"	ADCCTL1 =0x5C;//参考电压设置为FVR
000631   985c     MOV	R0, #0x5c            	MOV	R0,# 0x5c
                                           	BANKSEL	_ADCCTL1
000632   513f     MOV	0x3f, R0             	MOV	_ADCCTL1, R0
                                           ;	.line	90; "../ADC.c"	ADCCTL2 =0x05;//采样AD5通道
000633   9805     MOV	R0, #0x5             	MOV	R0,# 0x05
                                           	BANKSEL	_ADCCTL2
000634   5150     MOV	0x50, R0             	MOV	_ADCCTL2, R0
                                           ;	.line	91; "../ADC.c"	break;
000635   c63c     JMP	#0x63c               	JMP	_00029_DS_
                                           _00027_DS_
                                           ;	.line	93; "../ADC.c"	ADCCTL0 =0x81;
000636   9881     MOV	R0, #0x81            	MOV	R0,# 0x81
                                           	BANKSEL	_ADCCTL0
000637   511f     MOV	0x1f, R0             	MOV	_ADCCTL0, R0
                                           ;	.line	94; "../ADC.c"	ADCCTL1 =0x5C;//参考电压设置为FVR
000638   985c     MOV	R0, #0x5c            	MOV	R0,# 0x5c
                                           	BANKSEL	_ADCCTL1
000639   513f     MOV	0x3f, R0             	MOV	_ADCCTL1, R0
                                           ;	.line	95; "../ADC.c"	ADCCTL2 =0x24;//采样OPOUT
00063a   9824     MOV	R0, #0x24            	MOV	R0,# 0x24
                                           	BANKSEL	_ADCCTL2
00063b   5150     MOV	0x50, R0             	MOV	_ADCCTL2, R0
                                           _00029_DS_
                                           ;	.line	97; "../ADC.c"	}
00063c   0008     CRET                     	CRET	
                                           func._Adc_read	.code
                                           _Adc_read	;Function start
                                           ;	.line	47; "../ADC.c"	unsigned int Adc_sum = 0 ; 		          //adc采样累加变量
000703   e100     MOVB	#0x00               	BANKSEL	r0x1009
000704   03be     CLR	0xbe                 	CLR	r0x1009
                                           	BANKSEL	r0x100A
000705   03bd     CLR	0xbd                 	CLR	r0x100A
                                           ;	.line	49; "../ADC.c"	for(i = 0; i < 8; i++)
000706   9808     MOV	R0, #0x8             	MOV	R0,# 0x08
                                           	BANKSEL	r0x100B
000707   51bc     MOV	0xbc, R0             	MOV	r0x100B, R0
                                           _00018_DS_
                                           ;	.line	51; "../ADC.c"	Adc_sum += Adc_fun();		  //累加八次采样值
000708   9f07     MOV	R7, #0x7             	TRAPPC1	_Adc_fun
000709   5f73     MOV	0x73, R7             	TRAPPC2	_Adc_fun
00070a   e007     MOVP	#0x07               	PAGESEL	_Adc_fun
00070b   d7c9     CALL	#0x7c9              	CALL	_Adc_fun
00070c   9f07     MOV	R7, #0x7             	TRAPPC1	$+2
00070d   5f73     MOV	0x73, R7             	TRAPPC2	$+1
00070e   e007     MOVP	#0x07               	PAGESEL	$
00070f   e100     MOVB	#0x00               	BANKSEL	r0x100C
000710   51ba     MOV	0xba, R0             	MOV	r0x100C, R0
                                           	BANKSEL	STK00
000711   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x100D
000712   51bb     MOV	0xbb, R0             	MOV	r0x100D, R0
                                           	BANKSEL	r0x100D
000713   50bb     MOV	R0, 0xbb             	MOV	R0, r0x100D
                                           	BANKSEL	r0x1009
000714   21be     ADD	0xbe, R0             	ADD	r0x1009, R0
                                           	BANKSEL	r0x100C
000715   0eba     MOVZ	R0, 0xba            	MOVZ	R0, r0x100C
000716   7003     JNB	0x3, 0               	JNB	PSW, 0
000717   ff10     INC	R0                   	INC	R0
000718   7203     JNB	0x3, 2               	JNB	PSW, 2
000719   c71b     JMP	#0x71b               	JMP	_00049_DS_
                                           	BANKSEL	r0x100A
00071a   21bd     ADD	0xbd, R0             	ADD	r0x100A, R0
                                           _00049_DS_
                                           	BANKSEL	r0x100B
00071b   0ebc     MOVZ	R0, 0xbc            	MOVZ	R0, r0x100B
                                           	BANKSEL	r0x100D
00071c   51bb     MOV	0xbb, R0             	MOV	r0x100D, R0
                                           	BANKSEL	r0x100D
00071d   07bb     DEC	0xbb                 	DEC	r0x100D
                                           	BANKSEL	r0x100D
00071e   0ebb     MOVZ	R0, 0xbb            	MOVZ	R0, r0x100D
                                           	BANKSEL	r0x100B
00071f   51bc     MOV	0xbc, R0             	MOV	r0x100B, R0
                                           ;	.line	49; "../ADC.c"	for(i = 0; i < 8; i++)
000720   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x100B
000721   30bc     ORL	R0, 0xbc             	ORL	R0, r0x100B
000722   7a03     JB	0x3, 2                	JB	PSW, 2
000723   c708     JMP	#0x708               	JMP	_00018_DS_
                                           ;	.line	53; "../ADC.c"	Adc_sum >>= 3;		              //右移动3位  除8求均值
000724   6003     CLR	0x3, 0               	CLR	PSW, 0
                                           	BANKSEL	r0x100A
000725   11bd     RRC	0xbd                 	RRC	r0x100A
                                           	BANKSEL	r0x1009
000726   11be     RRC	0xbe                 	RRC	r0x1009
000727   6003     CLR	0x3, 0               	CLR	PSW, 0
                                           	BANKSEL	r0x100A
000728   11bd     RRC	0xbd                 	RRC	r0x100A
                                           	BANKSEL	r0x1009
000729   11be     RRC	0xbe                 	RRC	r0x1009
00072a   6003     CLR	0x3, 0               	CLR	PSW, 0
                                           	BANKSEL	r0x100A
00072b   11bd     RRC	0xbd                 	RRC	r0x100A
                                           	BANKSEL	r0x1009
00072c   11be     RRC	0xbe                 	RRC	r0x1009
                                           ;	.line	54; "../ADC.c"	return Adc_sum;
                                           	BANKSEL	r0x1009
00072d   0ebe     MOVZ	R0, 0xbe            	MOVZ	R0, r0x1009
                                           	BANKSEL	STK00
00072e   517e     MOV	0x7e, R0             	MOV	STK00, R0
                                           	BANKSEL	r0x100A
00072f   0ebd     MOVZ	R0, 0xbd            	MOVZ	R0, r0x100A
000730   0008     CRET                     	CRET	
                                           func._Adc_fun	.code
                                           _Adc_fun	;Function start
                                           ;	.line	32; "../ADC.c"	START = 1;					  //启动ADC
0007c9   e100     MOVB	#0x00               	BANKSEL	_ADCCTL0_bits
0007ca   691f     SET	0x1f, 1              	SET	_ADCCTL0_bits, 1
                                           _00009_DS_
                                           ;	.line	33; "../ADC.c"	while(START);                 //等待转换结束
                                           	BANKSEL	_ADCCTL0_bits
0007cb   711f     JNB	0x1f, 1              	JNB	_ADCCTL0_bits, 1
0007cc   c7cb     JMP	#0x7cb               	JMP	_00009_DS_
                                           ;	.line	34; "../ADC.c"	Adc_num = ADCDATA0H;	  	  //将高位加进去
                                           	BANKSEL	_ADCDATA0H
0007cd   0e1e     MOVZ	R0, 0x1e            	MOVZ	R0, _ADCDATA0H
                                           	BANKSEL	r0x1004
0007ce   51c2     MOV	0xc2, R0             	MOV	r0x1004, R0
                                           	BANKSEL	r0x1005
0007cf   03c1     CLR	0xc1                 	CLR	r0x1005
                                           ;	.line	35; "../ADC.c"	Adc_num <<=8;
                                           	BANKSEL	r0x1004
0007d0   0ec2     MOVZ	R0, 0xc2            	MOVZ	R0, r0x1004
                                           	BANKSEL	r0x1005
0007d1   51c1     MOV	0xc1, R0             	MOV	r0x1005, R0
                                           	BANKSEL	r0x1004
0007d2   03c2     CLR	0xc2                 	CLR	r0x1004
                                           ;	.line	36; "../ADC.c"	Adc_num += ADCDATA0L;		  //将低位加进去
                                           	BANKSEL	_ADCDATA0L
0007d3   0e3e     MOVZ	R0, 0x3e            	MOVZ	R0, _ADCDATA0L
                                           	BANKSEL	r0x1006
0007d4   51c0     MOV	0xc0, R0             	MOV	r0x1006, R0
                                           	BANKSEL	r0x1006
0007d5   0ec0     MOVZ	R0, 0xc0            	MOVZ	R0, r0x1006
                                           	BANKSEL	r0x1007
0007d6   51bf     MOV	0xbf, R0             	MOV	r0x1007, R0
                                           	BANKSEL	r0x1007
0007d7   50bf     MOV	R0, 0xbf             	MOV	R0, r0x1007
                                           	BANKSEL	r0x1004
0007d8   21c2     ADD	0xc2, R0             	ADD	r0x1004, R0
0007d9   9800     MOV	R0, #0               	MOV	R0,# 0x00
0007da   7003     JNB	0x3, 0               	JNB	PSW, 0
0007db   ff10     INC	R0                   	INC	R0
0007dc   7203     JNB	0x3, 2               	JNB	PSW, 2
0007dd   c7df     JMP	#0x7df               	JMP	_00050_DS_
                                           	BANKSEL	r0x1005
0007de   21c1     ADD	0xc1, R0             	ADD	r0x1005, R0
                                           _00050_DS_
                                           ;	.line	37; "../ADC.c"	return Adc_num;			      //返回转换值
                                           	BANKSEL	r0x1004
0007df   0ec2     MOVZ	R0, 0xc2            	MOVZ	R0, r0x1004
                                           	BANKSEL	STK00
0007e0   517e     MOV	0x7e, R0             	MOV	STK00, R0
                                           	BANKSEL	r0x1005
0007e1   0ec1     MOVZ	R0, 0xc1            	MOVZ	R0, r0x1005
0007e2   0008     CRET                     	CRET	
                                           func._delay_5us	.code
                                           _delay_5us	;Function start
                                           ;	.line	12; "../ADC.c"	void delay_5us(unsigned int time)
                                           	BANKSEL	r0x100E
                                           	MOV	r0x100E, R0
                                           	BANKSEL	STK00
                                           	MOVZ	R0, STK00
                                           	BANKSEL	r0x100F
                                           	MOV	r0x100F, R0
                                           _00001_DS_
                                           ;	.line	14; "../ADC.c"	while( time--)
                                           	BANKSEL	r0x100F
                                           	MOVZ	R0, r0x100F
                                           	BANKSEL	r0x1010
                                           	MOV	r0x1010, R0
                                           	BANKSEL	r0x100E
                                           	MOVZ	R0, r0x100E
                                           	BANKSEL	r0x1011
                                           	MOV	r0x1011, R0
                                           	MOV	R0,# 0xff
                                           	BANKSEL	r0x100F
                                           	ADD	r0x100F, R0
                                           	JNB	PSW, 0
                                           	JMP	_00051_DS_
                                           	BANKSEL	r0x100E
                                           	DEC	r0x100E
                                           _00051_DS_
                                           	BANKSEL	r0x1010
                                           	MOVZ	R0, r0x1010
                                           	BANKSEL	r0x1011
                                           	ORL	R0, r0x1011
                                           	JNB	PSW, 2
                                           	JMP	_00004_DS_
                                           	NOP 
                                           	NOP 
                                           	NOP 
                                           	NOP 
                                           	JMP	_00001_DS_
                                           _00004_DS_
                                           	CRET	
                                           	.end
                                           	.radix dec
                                           	.include "KF8A100GQP.inc"
                                           func._CAN_UnsetITStatus	.code
                                           _CAN_UnsetITStatus	;Function start
                                           ;	.line	334; "../BSP_can.c"	void CAN_UnsetITStatus(unsigned char CAN_IT_bit)
                                           	BANKSEL	r0x101D
                                           	MOV	r0x101D, R0
                                           ;	.line	336; "../BSP_can.c"	CANIE &= (~CAN_IT_bit);
                                           	BANKSEL	r0x101D
                                           	CPL	r0x101D
                                           	BANKSEL	r0x101D
                                           	MOVZ	R0, r0x101D
                                           	BANKSEL	_CANIE
                                           	AND	_CANIE, R0
                                           	CRET	
                                           func._CAN_SetITStatus	.code
                                           _CAN_SetITStatus	;Function start
                                           ;	.line	322; "../BSP_can.c"	void CAN_SetITStatus(unsigned char CAN_IT_bit)
                                           	BANKSEL	r0x101E
                                           	MOV	r0x101E, R0
                                           ;	.line	324; "../BSP_can.c"	CANIF &= (~CAN_IT_bit);
                                           	BANKSEL	r0x101E
                                           	CPLR	r0x101E
                                           	BANKSEL	r0x101F
                                           	MOV	r0x101F, R0
                                           	BANKSEL	r0x101F
                                           	MOVZ	R0, r0x101F
                                           	BANKSEL	_CANIF
                                           	AND	_CANIF, R0
                                           ;	.line	325; "../BSP_can.c"	CANIE = CAN_IT_bit;
                                           	BANKSEL	r0x101E
                                           	MOVZ	R0, r0x101E
                                           	BANKSEL	_CANIE
                                           	MOV	_CANIE, R0
                                           	CRET	
                                           func._CAN_ClearITStatus	.code
                                           _CAN_ClearITStatus	;Function start
                                           ;	.line	311; "../BSP_can.c"	void CAN_ClearITStatus(unsigned char CAN_IT_bit)
                                           	BANKSEL	r0x1020
                                           	MOV	r0x1020, R0
                                           ;	.line	313; "../BSP_can.c"	CANIF &= (~CAN_IT_bit);
                                           	BANKSEL	r0x1020
                                           	CPL	r0x1020
                                           	BANKSEL	r0x1020
                                           	MOVZ	R0, r0x1020
                                           	BANKSEL	_CANIF
                                           	AND	_CANIF, R0
                                           	CRET	
                                           func._CAN_GetITStatus	.code
                                           _CAN_GetITStatus	;Function start
                                           ;	.line	297; "../BSP_can.c"	ITStatus CAN_GetITStatus(unsigned char CAN_IT_bit)
                                           	BANKSEL	r0x1021
                                           	MOV	r0x1021, R0
                                           ;	.line	299; "../BSP_can.c"	if(CANIF&CAN_IT_bit)
                                           	BANKSEL	_CANIF
                                           	MOVZ	R0, _CANIF
                                           	BANKSEL	r0x1021
                                           	AND	r0x1021, R0
                                           	MOV	R0,# 0x00
                                           	BANKSEL	r0x1021
                                           	ORL	R0, r0x1021
                                           	JNB	PSW, 2
                                           	JMP	_00146_DS_
                                           ;	.line	300; "../BSP_can.c"	return SET_STATE;
                                           	MOV	R0,# 0x01
                                           	JMP	_00148_DS_
                                           _00146_DS_
                                           ;	.line	302; "../BSP_can.c"	return RESET_STATE;
                                           	MOV	R0,# 0x00
                                           _00148_DS_
                                           	CRET	
                                           func._CAN_Receive_Message_Configuration	.code
                                           _CAN_Receive_Message_Configuration	;Function start
                                           ;	.line	216; "../BSP_can.c"	if(can_data_hand<8)
                                           	MOV	R0,# 0x08
                                           	BANKSEL	_can_data_hand
                                           	SUB	R0, _can_data_hand
                                           	JNB	PSW, 0
                                           	JMP	_00086_DS_
                                           ;	.line	218; "../BSP_can.c"	can_point =(0x1C80 + can_data_hand * 0x10);
                                           	MOV	R0,# 0x10
                                           	BANKSEL	STK02
                                           	MOV	STK02, R0
                                           	MOV	R0,# 0x00
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	_can_data_hand
                                           	MOVZ	R0, _can_data_hand
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	MOV	R0,# 0x00
                                           	TRAPPC1	__hmulint
                                           	TRAPPC2	__hmulint
                                           	PAGESEL	__hmulint
                                           	CALL	__hmulint
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	r0x1022
                                           	MOV	r0x1022, R0
                                           	BANKSEL	STK00
                                           	MOV	R0, STK00
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	MOV	R0,# 0x80
                                           	BANKSEL	r0x1023
                                           	ADD	r0x1023, R0
                                           	MOV	R0,# 0x1c
                                           	JNB	PSW, 0
                                           	MOV	R0,# 0x1d
                                           	BANKSEL	r0x1022
                                           	ADD	r0x1022, R0
                                           	BANKSEL	r0x1023
                                           	MOVZ	R0, r0x1023
                                           	BANKSEL	r0x1024
                                           	MOV	r0x1024, R0
                                           	BANKSEL	r0x1022
                                           	MOVZ	R0, r0x1022
                                           	BANKSEL	r0x1025
                                           	MOV	r0x1025, R0
                                           	JMP	_00121_DS_
                                           _00086_DS_
                                           ;	.line	222; "../BSP_can.c"	can_point =(0x1D80+(can_data_hand-8)*0x10);
                                           	BANKSEL	_can_data_hand
                                           	MOVZ	R0, _can_data_hand
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	BANKSEL	r0x1022
                                           	CLR	r0x1022
                                           	MOV	R0,# 0xf8
                                           	BANKSEL	r0x1023
                                           	ADD	r0x1023, R0
                                           	JNB	PSW, 0
                                           	JMP	_00157_DS_
                                           	BANKSEL	r0x1022
                                           	DEC	r0x1022
                                           _00157_DS_
                                           	BANKSEL	r0x1023
                                           	MOVZ	R0, r0x1023
                                           	BANKSEL	r0x1026
                                           	MOV	r0x1026, R0
                                           	BANKSEL	r0x1022
                                           	MOVZ	R0, r0x1022
                                           	BANKSEL	r0x1027
                                           	MOV	r0x1027, R0
                                           	MOV	R0,# 0x04
                                           	INC	R0
                                           	JMP	_00139_DS_
                                           _00138_DS_
                                           	CLR	PSW, 0
                                           	BANKSEL	r0x1026
                                           	RLC	r0x1026
                                           	BANKSEL	r0x1027
                                           	RLC	r0x1027
                                           _00139_DS_
                                           	DECJZ	R0
                                           	JMP	_00138_DS_
                                           	MOV	R0,# 0x80
                                           	BANKSEL	r0x1026
                                           	ADD	R0, r0x1026
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	MOV	R0,# 0x1d
                                           	BANKSEL	r0x1022
                                           	MOV	r0x1022, R0
                                           	BANKSEL	r0x1027
                                           	MOVZ	R0, r0x1027
                                           	JNB	PSW, 0
                                           	INC	R0
                                           	JNB	PSW, 2
                                           	JMP	_00158_DS_
                                           	BANKSEL	r0x1022
                                           	ADD	r0x1022, R0
                                           _00158_DS_
                                           	BANKSEL	r0x1023
                                           	MOVZ	R0, r0x1023
                                           	BANKSEL	r0x1024
                                           	MOV	r0x1024, R0
                                           	BANKSEL	r0x1022
                                           	MOVZ	R0, r0x1022
                                           	BANKSEL	r0x1025
                                           	MOV	r0x1025, R0
                                           _00121_DS_
                                           ;	.line	225; "../BSP_can.c"	for(i=0;i<13;i++)
                                           	BANKSEL	r0x1023
                                           	CLR	r0x1023
                                           _00105_DS_
                                           	MOV	R0,# 0x0d
                                           	BANKSEL	r0x1023
                                           	SUB	R0, r0x1023
                                           	JNB	PSW, 0
                                           	JMP	_00108_DS_
                                           ;	.line	227; "../BSP_can.c"	CAN_Rev_BUF[i]=*((unsigned char *)(can_point+i));
                                           	BANKSEL	r0x1023
                                           	MOV	R0, r0x1023
                                           	ADD	R0,# (_CAN_Rev_BUF + 0)
                                           	BANKSEL	r0x1022
                                           	MOV	r0x1022, R0
                                           	BANKSEL	r0x1023
                                           	MOVZ	R0, r0x1023
                                           	BANKSEL	r0x1027
                                           	MOV	r0x1027, R0
                                           	BANKSEL	r0x1028
                                           	CLR	r0x1028
                                           	BANKSEL	r0x1024
                                           	MOV	R0, r0x1024
                                           	BANKSEL	r0x1027
                                           	ADD	r0x1027, R0
                                           	BANKSEL	r0x1025
                                           	MOVZ	R0, r0x1025
                                           	JNB	PSW, 0
                                           	INC	R0
                                           	JNB	PSW, 2
                                           	JMP	_00159_DS_
                                           	BANKSEL	r0x1028
                                           	ADD	r0x1028, R0
                                           _00159_DS_
                                           	BANKSEL	r0x1027
                                           	MOVZ	R0, r0x1027
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1028
                                           	MOVZ	R0, r0x1028
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	MOV	R0,# 0x00
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	r0x1027
                                           	MOV	r0x1027, R0
                                           	BANKSEL	r0x1027
                                           	MOVZ	R0, r0x1027
                                           	BANKSEL	r0x1022
                                           	MOV	R1, r0x1022
                                           	BANKSEL	_CAN_Rev_BUF
                                           	ST	[R1], R0
                                           ;	.line	225; "../BSP_can.c"	for(i=0;i<13;i++)
                                           	BANKSEL	r0x1023
                                           	INC	r0x1023
                                           	JMP	_00105_DS_
                                           _00108_DS_
                                           ;	.line	230; "../BSP_can.c"	CAN_Rev_DATA.data_ide = CAN_Rev_BUF[0]>>7;
                                           	BANKSEL	_CAN_Rev_BUF
                                           	MOVZ	R0,  (_CAN_Rev_BUF + 0)
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	BANKSEL	r0x1023
                                           	RLCR	r0x1023
                                           	BANKSEL	r0x1022
                                           	CLR	r0x1022
                                           	BANKSEL	r0x1022
                                           	RLC	r0x1022
                                           	BANKSEL	r0x1022
                                           	MOVZ	R0, r0x1022
                                           	BANKSEL	_CAN_Rev_DATA
                                           	MOV	 (_CAN_Rev_DATA + 0), R0
                                           ;	.line	231; "../BSP_can.c"	CAN_Rev_DATA.data_rtr = (CAN_Rev_BUF[0]&0x40)>>6;
                                           	BANKSEL	_CAN_Rev_BUF
                                           	MOVZ	R0,  (_CAN_Rev_BUF + 0)
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	MOV	R0,# 0x40
                                           	BANKSEL	r0x1023
                                           	AND	r0x1023, R0
                                           	BANKSEL	r0x1023
                                           	SWAPR	R0, r0x1023
                                           	AND	R0,# 0x0f
                                           	BANKSEL	r0x1022
                                           	MOV	r0x1022, R0
                                           	CLR	PSW, 0
                                           	BANKSEL	r0x1022
                                           	RRC	r0x1022
                                           	CLR	PSW, 0
                                           	BANKSEL	r0x1022
                                           	RRC	r0x1022
                                           	BANKSEL	r0x1022
                                           	MOVZ	R0, r0x1022
                                           	BANKSEL	_CAN_Rev_DATA
                                           	MOV	 (_CAN_Rev_DATA + 1), R0
                                           ;	.line	232; "../BSP_can.c"	CAN_Rev_DATA.data_length = CAN_Rev_BUF[0]&0x0F;
                                           	BANKSEL	_CAN_Rev_BUF
                                           	MOVZ	R0,  (_CAN_Rev_BUF + 0)
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	MOV	R0,# 0x0f
                                           	BANKSEL	r0x1023
                                           	AND	r0x1023, R0
                                           	BANKSEL	r0x1023
                                           	MOVZ	R0, r0x1023
                                           	BANKSEL	_CAN_Rev_DATA
                                           	MOV	 (_CAN_Rev_DATA + 2), R0
                                           ;	.line	233; "../BSP_can.c"	if(CAN_Rev_DATA.data_ide)	  //扩展帧
                                           	BANKSEL	_CAN_Rev_DATA
                                           	MOVZ	R0,  (_CAN_Rev_DATA + 0)
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	MOV	R0,# 0x00
                                           	BANKSEL	r0x1023
                                           	ORL	R0, r0x1023
                                           	JNB	PSW, 2
                                           	JMP	_00101_DS_
                                           ;	.line	236; "../BSP_can.c"	CAN_Rev_DATA.data_id[0]=CAN_Rev_BUF[1];
                                           	BANKSEL	_CAN_Rev_BUF
                                           	MOVZ	R0,  (_CAN_Rev_BUF + 1)
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	BANKSEL	_CAN_Rev_DATA
                                           	MOV	 (_CAN_Rev_DATA + 3), R0
                                           ;	.line	237; "../BSP_can.c"	CAN_Rev_DATA.data_id[1]=CAN_Rev_BUF[2];
                                           	BANKSEL	_CAN_Rev_BUF
                                           	MOVZ	R0,  (_CAN_Rev_BUF + 2)
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	BANKSEL	_CAN_Rev_DATA
                                           	MOV	 (_CAN_Rev_DATA + 4), R0
                                           ;	.line	238; "../BSP_can.c"	CAN_Rev_DATA.data_id[2]=CAN_Rev_BUF[3];
                                           	BANKSEL	_CAN_Rev_BUF
                                           	MOVZ	R0,  (_CAN_Rev_BUF + 3)
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	BANKSEL	_CAN_Rev_DATA
                                           	MOV	 (_CAN_Rev_DATA + 5), R0
                                           ;	.line	239; "../BSP_can.c"	CAN_Rev_DATA.data_id[3]=CAN_Rev_BUF[4]&0xF8;
                                           	BANKSEL	_CAN_Rev_BUF
                                           	MOVZ	R0,  (_CAN_Rev_BUF + 4)
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	MOV	R0,# 0xf8
                                           	BANKSEL	r0x1023
                                           	AND	r0x1023, R0
                                           	BANKSEL	r0x1023
                                           	MOVZ	R0, r0x1023
                                           	BANKSEL	_CAN_Rev_DATA
                                           	MOV	 (_CAN_Rev_DATA + 6), R0
                                           ;	.line	241; "../BSP_can.c"	if(CAN_Rev_DATA.data_rtr)//远程帧
                                           	BANKSEL	_CAN_Rev_DATA
                                           	MOVZ	R0,  (_CAN_Rev_DATA + 1)
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	MOV	R0,# 0x00
                                           	BANKSEL	r0x1023
                                           	ORL	R0, r0x1023
                                           	JB	PSW, 2
                                           	JMP	_00102_DS_
                                           ;	.line	247; "../BSP_can.c"	if(CAN_Rev_DATA.data_length&&(CAN_Rev_DATA.data_length<=8))//判断数据长度
                                           	BANKSEL	_CAN_Rev_DATA
                                           	MOVZ	R0,  (_CAN_Rev_DATA + 2)
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	MOV	R0,# 0x00
                                           	BANKSEL	r0x1023
                                           	ORL	R0, r0x1023
                                           	JNB	PSW, 2
                                           	JMP	_00102_DS_
                                           	BANKSEL	_CAN_Rev_DATA
                                           	MOVZ	R0,  (_CAN_Rev_DATA + 2)
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	MOV	R0,# 0x09
                                           	BANKSEL	r0x1023
                                           	SUB	R0, r0x1023
                                           	JNB	PSW, 0
                                           	JMP	_00102_DS_
                                           ;	.line	250; "../BSP_can.c"	for(i=0;i<CAN_Rev_DATA.data_length;i++)
                                           	BANKSEL	r0x1023
                                           	CLR	r0x1023
                                           _00109_DS_
                                           	BANKSEL	_CAN_Rev_DATA
                                           	MOVZ	R0,  (_CAN_Rev_DATA + 2)
                                           	BANKSEL	r0x1022
                                           	MOV	r0x1022, R0
                                           	BANKSEL	r0x1022
                                           	MOVZ	R0, r0x1022
                                           	BANKSEL	r0x1023
                                           	SUB	R0, r0x1023
                                           	JNB	PSW, 0
                                           	JMP	_00102_DS_
                                           ;	.line	252; "../BSP_can.c"	CAN_Rev_DATA.raw_data[i]=CAN_Rev_BUF[5+i];
                                           	BANKSEL	r0x1023
                                           	MOV	R0, r0x1023
                                           	ADD	R0,# (_CAN_Rev_DATA + 7)
                                           	BANKSEL	r0x1022
                                           	MOV	r0x1022, R0
                                           	MOV	R0,# 0x05
                                           	BANKSEL	r0x1023
                                           	ADD	R0, r0x1023
                                           	BANKSEL	r0x1025
                                           	MOV	r0x1025, R0
                                           	MOV	R0,# (_CAN_Rev_BUF + 0)
                                           	BANKSEL	r0x1025
                                           	ADD	r0x1025, R0
                                           	BANKSEL	r0x1025
                                           	MOV	R1, r0x1025
                                           	BANKSEL	_CAN_Rev_BUF
                                           	LD	R0, [R1]
                                           	BANKSEL	r0x1027
                                           	MOV	r0x1027, R0
                                           	BANKSEL	r0x1027
                                           	MOVZ	R0, r0x1027
                                           	BANKSEL	r0x1022
                                           	MOV	R1, r0x1022
                                           	BANKSEL	_CAN_Rev_DATA
                                           	ST	[R1], R0
                                           ;	.line	250; "../BSP_can.c"	for(i=0;i<CAN_Rev_DATA.data_length;i++)
                                           	BANKSEL	r0x1023
                                           	INC	r0x1023
                                           	JMP	_00109_DS_
                                           _00101_DS_
                                           ;	.line	260; "../BSP_can.c"	CAN_Rev_DATA.data_id[0]=CAN_Rev_BUF[1];
                                           	BANKSEL	_CAN_Rev_BUF
                                           	MOVZ	R0,  (_CAN_Rev_BUF + 1)
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	BANKSEL	_CAN_Rev_DATA
                                           	MOV	 (_CAN_Rev_DATA + 3), R0
                                           ;	.line	261; "../BSP_can.c"	CAN_Rev_DATA.data_id[1]=CAN_Rev_BUF[2]&0xE0;
                                           	BANKSEL	_CAN_Rev_BUF
                                           	MOVZ	R0,  (_CAN_Rev_BUF + 2)
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	MOV	R0,# 0xe0
                                           	BANKSEL	r0x1023
                                           	AND	r0x1023, R0
                                           	BANKSEL	r0x1023
                                           	MOVZ	R0, r0x1023
                                           	BANKSEL	_CAN_Rev_DATA
                                           	MOV	 (_CAN_Rev_DATA + 4), R0
                                           ;	.line	263; "../BSP_can.c"	if(CAN_Rev_DATA.data_rtr)//远程帧
                                           	BANKSEL	_CAN_Rev_DATA
                                           	MOVZ	R0,  (_CAN_Rev_DATA + 1)
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	MOV	R0,# 0x00
                                           	BANKSEL	r0x1023
                                           	ORL	R0, r0x1023
                                           	JB	PSW, 2
                                           	JMP	_00102_DS_
                                           ;	.line	269; "../BSP_can.c"	if(CAN_Rev_DATA.data_length&&(CAN_Rev_DATA.data_length<=8))//判断数据长度
                                           	BANKSEL	_CAN_Rev_DATA
                                           	MOVZ	R0,  (_CAN_Rev_DATA + 2)
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	MOV	R0,# 0x00
                                           	BANKSEL	r0x1023
                                           	ORL	R0, r0x1023
                                           	JNB	PSW, 2
                                           	JMP	_00102_DS_
                                           	BANKSEL	_CAN_Rev_DATA
                                           	MOVZ	R0,  (_CAN_Rev_DATA + 2)
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	MOV	R0,# 0x09
                                           	BANKSEL	r0x1023
                                           	SUB	R0, r0x1023
                                           	JNB	PSW, 0
                                           	JMP	_00102_DS_
                                           ;	.line	272; "../BSP_can.c"	for(i=0;i<CAN_Rev_DATA.data_length;i++)
                                           	BANKSEL	r0x1023
                                           	CLR	r0x1023
                                           _00113_DS_
                                           	BANKSEL	_CAN_Rev_DATA
                                           	MOVZ	R0,  (_CAN_Rev_DATA + 2)
                                           	BANKSEL	r0x1022
                                           	MOV	r0x1022, R0
                                           	BANKSEL	r0x1022
                                           	MOVZ	R0, r0x1022
                                           	BANKSEL	r0x1023
                                           	SUB	R0, r0x1023
                                           	JNB	PSW, 0
                                           	JMP	_00102_DS_
                                           ;	.line	274; "../BSP_can.c"	CAN_Rev_DATA.raw_data[i]=CAN_Rev_BUF[3+i];
                                           	BANKSEL	r0x1023
                                           	MOV	R0, r0x1023
                                           	ADD	R0,# (_CAN_Rev_DATA + 7)
                                           	BANKSEL	r0x1022
                                           	MOV	r0x1022, R0
                                           	MOV	R0,# 0x03
                                           	BANKSEL	r0x1023
                                           	ADD	R0, r0x1023
                                           	BANKSEL	r0x1025
                                           	MOV	r0x1025, R0
                                           	MOV	R0,# (_CAN_Rev_BUF + 0)
                                           	BANKSEL	r0x1025
                                           	ADD	r0x1025, R0
                                           	BANKSEL	r0x1025
                                           	MOV	R1, r0x1025
                                           	BANKSEL	_CAN_Rev_BUF
                                           	LD	R0, [R1]
                                           	BANKSEL	r0x1027
                                           	MOV	r0x1027, R0
                                           	BANKSEL	r0x1027
                                           	MOVZ	R0, r0x1027
                                           	BANKSEL	r0x1022
                                           	MOV	R1, r0x1022
                                           	BANKSEL	_CAN_Rev_DATA
                                           	ST	[R1], R0
                                           ;	.line	272; "../BSP_can.c"	for(i=0;i<CAN_Rev_DATA.data_length;i++)
                                           	BANKSEL	r0x1023
                                           	INC	r0x1023
                                           	JMP	_00113_DS_
                                           _00102_DS_
                                           ;	.line	281; "../BSP_can.c"	CANCMR = 0x04;//释放缓冲器
                                           	MOV	R0,# 0x04
                                           	BANKSEL	_CANCMR
                                           	MOV	_CANCMR, R0
                                           ;	.line	283; "../BSP_can.c"	can_data_hand++;//指针+1
                                           	BANKSEL	_can_data_hand
                                           	INC	_can_data_hand
                                           ;	.line	284; "../BSP_can.c"	if(can_data_hand==16)//若指针指向15以上，返回0
                                           	BANKSEL	_can_data_hand
                                           	MOVZ	R0, _can_data_hand
                                           ;	.line	286; "../BSP_can.c"	can_data_hand=0;
                                           	XOR	R0,# 0x10
                                           	JB	PSW, 2
                                           	JMP	_00160_DS_
                                           	BANKSEL	_can_data_hand
                                           	CLR	_can_data_hand
                                           _00160_DS_
                                           	CRET	
                                           func._CAN_Transmit_Message	.code
                                           _CAN_Transmit_Message	;Function start
                                           ;	.line	129; "../BSP_can.c"	CAN_SendData_STATE CAN_Transmit_Message(CAN_DATA_INF* CAN_Send_DATA)
                                           	BANKSEL	r0x102C
                                           	MOV	r0x102C, R0
                                           	BANKSEL	STK00
                                           	MOVZ	R0, STK00
                                           	BANKSEL	r0x102D
                                           	MOV	r0x102D, R0
                                           	BANKSEL	STK01
                                           	MOVZ	R0, STK01
                                           	BANKSEL	r0x102E
                                           	MOV	r0x102E, R0
                                           ;	.line	135; "../BSP_can.c"	while(!TXBSTA)//等待CPU可以访问发送缓冲器
                                           	BANKSEL	r0x102F
                                           	CLR	r0x102F
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           _00055_DS_
                                           	BANKSEL	_CANSTA_bits
                                           	JNB	_CANSTA_bits, 2
                                           	JMP	_00057_DS_
                                           ;	.line	137; "../BSP_can.c"	if(++Delay_Count>0xFE0)
                                           	BANKSEL	r0x102F
                                           	INC	r0x102F
                                           	JB	PSW, 2
                                           	JMP	_00161_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00161_DS_
                                           	MOV	R0,# 0x0f
                                           	BANKSEL	r0x1030
                                           	SUB	R0, r0x1030
                                           	JB	PSW, 2
                                           	JMP	_00083_DS_
                                           	MOV	R0,# 0xe1
                                           	BANKSEL	r0x102F
                                           	SUB	R0, r0x102F
                                           _00083_DS_
                                           	JB	PSW, 0
                                           	JMP	_00055_DS_
                                           ;	.line	138; "../BSP_can.c"	return False;
                                           	MOV	R0,# 0x00
                                           	JMP	_00072_DS_
                                           _00057_DS_
                                           ;	.line	141; "../BSP_can.c"	temp = (CAN_Send_DATA->data_ide<<7)|(CAN_Send_DATA->data_rtr<<6|CAN_Send_DATA->data_length);
                                           	BANKSEL	r0x102E
                                           	MOVZ	R0, r0x102E
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x102F
                                           	RRCR	r0x102F
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RRC	r0x1030
                                           	MOV	R0,# 0x01
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1031
                                           	CLR	r0x1031
                                           	BANKSEL	r0x1031
                                           	RLC	r0x1031
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1031
                                           	ADD	r0x1031, R0
                                           	BANKSEL	r0x1032
                                           	CLR	r0x1032
                                           	BANKSEL	r0x1032
                                           	RLC	r0x1032
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1032
                                           	ADD	r0x1032, R0
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1031
                                           	MOVZ	R0, r0x1031
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1032
                                           	MOVZ	R0, r0x1032
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	r0x1033
                                           	MOV	r0x1033, R0
                                           	BANKSEL	r0x1033
                                           	SWAPR	R0, r0x1033
                                           	AND	R0,# 0xf0
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	CLR	PSW, 0
                                           	BANKSEL	r0x102F
                                           	RLC	r0x102F
                                           	CLR	PSW, 0
                                           	BANKSEL	r0x102F
                                           	RLC	r0x102F
                                           	MOV	R0,# 0x02
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x1033
                                           	MOV	r0x1033, R0
                                           	BANKSEL	r0x1034
                                           	CLR	r0x1034
                                           	BANKSEL	r0x1034
                                           	RLC	r0x1034
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1034
                                           	ADD	r0x1034, R0
                                           	BANKSEL	r0x1035
                                           	CLR	r0x1035
                                           	BANKSEL	r0x1035
                                           	RLC	r0x1035
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1035
                                           	ADD	r0x1035, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1034
                                           	MOVZ	R0, r0x1034
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1035
                                           	MOVZ	R0, r0x1035
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	r0x1036
                                           	MOV	r0x1036, R0
                                           	BANKSEL	r0x1036
                                           	MOVZ	R0, r0x1036
                                           	BANKSEL	r0x102F
                                           	ORL	r0x102F, R0
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	r0x1030
                                           	ORL	R0, r0x1030
                                           	BANKSEL	_CANTXINF
                                           	MOV	_CANTXINF, R0
                                           ;	.line	143; "../BSP_can.c"	if(CAN_Send_DATA->data_ide==0)//标准帧
                                           	BANKSEL	r0x102E
                                           	MOVZ	R0, r0x102E
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	MOV	R0,# 0x00
                                           	BANKSEL	r0x102F
                                           	ORL	R0, r0x102F
                                           	JB	PSW, 2
                                           	JMP	_00065_DS_
                                           ;	.line	145; "../BSP_can.c"	if(CAN_Send_DATA->data_rtr==0)//数据帧
                                           	MOV	R0,# 0x01
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	r0x1034
                                           	MOV	r0x1034, R0
                                           	MOV	R0,# 0x00
                                           	BANKSEL	r0x1034
                                           	ORL	R0, r0x1034
                                           	JB	PSW, 2
                                           	JMP	_00059_DS_
                                           ;	.line	147; "../BSP_can.c"	CANTXID0=CAN_Send_DATA->data_id[0];
                                           	MOV	R0,# 0x03
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXID0
                                           	MOV	_CANTXID0, R0
                                           ;	.line	148; "../BSP_can.c"	CANTXID1=CAN_Send_DATA->data_id[1];
                                           	MOV	R0,# 0x03
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	BANKSEL	r0x102F
                                           	INC	r0x102F
                                           	JB	PSW, 2
                                           	JMP	_00162_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00162_DS_
                                           	JB	PSW, 2
                                           	JMP	_00163_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00163_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXID1
                                           	MOV	_CANTXID1, R0
                                           ;	.line	149; "../BSP_can.c"	CANTXID2=CAN_Send_DATA->raw_data[0];
                                           	MOV	R0,# 0x07
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXID2
                                           	MOV	_CANTXID2, R0
                                           ;	.line	150; "../BSP_can.c"	CANTXID3=CAN_Send_DATA->raw_data[1];
                                           	MOV	R0,# 0x07
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	BANKSEL	r0x102F
                                           	INC	r0x102F
                                           	JB	PSW, 2
                                           	JMP	_00164_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00164_DS_
                                           	JB	PSW, 2
                                           	JMP	_00165_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00165_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXID3
                                           	MOV	_CANTXID3, R0
                                           ;	.line	151; "../BSP_can.c"	CANTXDT0=CAN_Send_DATA->raw_data[2];
                                           	MOV	R0,# 0x07
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	MOV	R0,# 0x02
                                           	BANKSEL	r0x102F
                                           	ADD	r0x102F, R0
                                           	JB	PSW, 0
                                           	JMP	_00166_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00166_DS_
                                           	JB	PSW, 2
                                           	JMP	_00167_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00167_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXDT0
                                           	MOV	_CANTXDT0, R0
                                           ;	.line	152; "../BSP_can.c"	CANTXDT1=CAN_Send_DATA->raw_data[3];
                                           	MOV	R0,# 0x07
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	MOV	R0,# 0x03
                                           	BANKSEL	r0x102F
                                           	ADD	r0x102F, R0
                                           	JB	PSW, 0
                                           	JMP	_00168_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00168_DS_
                                           	JB	PSW, 2
                                           	JMP	_00169_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00169_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXDT1
                                           	MOV	_CANTXDT1, R0
                                           ;	.line	153; "../BSP_can.c"	CANTXDT2=CAN_Send_DATA->raw_data[4];
                                           	MOV	R0,# 0x07
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	MOV	R0,# 0x04
                                           	BANKSEL	r0x102F
                                           	ADD	r0x102F, R0
                                           	JB	PSW, 0
                                           	JMP	_00170_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00170_DS_
                                           	JB	PSW, 2
                                           	JMP	_00171_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00171_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXDT2
                                           	MOV	_CANTXDT2, R0
                                           ;	.line	154; "../BSP_can.c"	CANTXDT3=CAN_Send_DATA->raw_data[5];
                                           	MOV	R0,# 0x07
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	MOV	R0,# 0x05
                                           	BANKSEL	r0x102F
                                           	ADD	r0x102F, R0
                                           	JB	PSW, 0
                                           	JMP	_00172_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00172_DS_
                                           	JB	PSW, 2
                                           	JMP	_00173_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00173_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXDT3
                                           	MOV	_CANTXDT3, R0
                                           ;	.line	155; "../BSP_can.c"	CANTXDT4=CAN_Send_DATA->raw_data[6];
                                           	MOV	R0,# 0x07
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	MOV	R0,# 0x06
                                           	BANKSEL	r0x102F
                                           	ADD	r0x102F, R0
                                           	JB	PSW, 0
                                           	JMP	_00174_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00174_DS_
                                           	JB	PSW, 2
                                           	JMP	_00175_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00175_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXDT4
                                           	MOV	_CANTXDT4, R0
                                           ;	.line	156; "../BSP_can.c"	CANTXDT5=CAN_Send_DATA->raw_data[7];
                                           	MOV	R0,# 0x07
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	MOV	R0,# 0x07
                                           	BANKSEL	r0x102F
                                           	ADD	r0x102F, R0
                                           	JB	PSW, 0
                                           	JMP	_00176_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00176_DS_
                                           	JB	PSW, 2
                                           	JMP	_00177_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00177_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXDT5
                                           	MOV	_CANTXDT5, R0
                                           	JMP	_00066_DS_
                                           _00059_DS_
                                           ;	.line	160; "../BSP_can.c"	CANTXID0=CAN_Send_DATA->data_id[0];
                                           	MOV	R0,# 0x03
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXID0
                                           	MOV	_CANTXID0, R0
                                           ;	.line	161; "../BSP_can.c"	CANTXID1=CAN_Send_DATA->data_id[1];
                                           	MOV	R0,# 0x03
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	BANKSEL	r0x102F
                                           	INC	r0x102F
                                           	JB	PSW, 2
                                           	JMP	_00178_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00178_DS_
                                           	JB	PSW, 2
                                           	JMP	_00179_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00179_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXID1
                                           	MOV	_CANTXID1, R0
                                           	JMP	_00066_DS_
                                           _00065_DS_
                                           ;	.line	166; "../BSP_can.c"	if(CAN_Send_DATA->data_rtr==0) //为数据帧
                                           	MOV	R0,# 0x01
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	r0x1034
                                           	MOV	r0x1034, R0
                                           	MOV	R0,# 0x00
                                           	BANKSEL	r0x1034
                                           	ORL	R0, r0x1034
                                           	JB	PSW, 2
                                           	JMP	_00062_DS_
                                           ;	.line	168; "../BSP_can.c"	CANTXID0=CAN_Send_DATA->data_id[0];
                                           	MOV	R0,# 0x03
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXID0
                                           	MOV	_CANTXID0, R0
                                           ;	.line	169; "../BSP_can.c"	CANTXID1=CAN_Send_DATA->data_id[1];
                                           	MOV	R0,# 0x03
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	BANKSEL	r0x102F
                                           	INC	r0x102F
                                           	JB	PSW, 2
                                           	JMP	_00180_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00180_DS_
                                           	JB	PSW, 2
                                           	JMP	_00181_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00181_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXID1
                                           	MOV	_CANTXID1, R0
                                           ;	.line	170; "../BSP_can.c"	CANTXID2=CAN_Send_DATA->data_id[2];
                                           	MOV	R0,# 0x03
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	MOV	R0,# 0x02
                                           	BANKSEL	r0x102F
                                           	ADD	r0x102F, R0
                                           	JB	PSW, 0
                                           	JMP	_00182_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00182_DS_
                                           	JB	PSW, 2
                                           	JMP	_00183_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00183_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXID2
                                           	MOV	_CANTXID2, R0
                                           ;	.line	171; "../BSP_can.c"	CANTXID3=CAN_Send_DATA->data_id[3];
                                           	MOV	R0,# 0x03
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	MOV	R0,# 0x03
                                           	BANKSEL	r0x102F
                                           	ADD	r0x102F, R0
                                           	JB	PSW, 0
                                           	JMP	_00184_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00184_DS_
                                           	JB	PSW, 2
                                           	JMP	_00185_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00185_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXID3
                                           	MOV	_CANTXID3, R0
                                           ;	.line	172; "../BSP_can.c"	CANTXDT0=CAN_Send_DATA->raw_data[0];
                                           	MOV	R0,# 0x07
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXDT0
                                           	MOV	_CANTXDT0, R0
                                           ;	.line	173; "../BSP_can.c"	CANTXDT1=CAN_Send_DATA->raw_data[1];
                                           	MOV	R0,# 0x07
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	BANKSEL	r0x102F
                                           	INC	r0x102F
                                           	JB	PSW, 2
                                           	JMP	_00186_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00186_DS_
                                           	JB	PSW, 2
                                           	JMP	_00187_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00187_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXDT1
                                           	MOV	_CANTXDT1, R0
                                           ;	.line	174; "../BSP_can.c"	CANTXDT2=CAN_Send_DATA->raw_data[2];
                                           	MOV	R0,# 0x07
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	MOV	R0,# 0x02
                                           	BANKSEL	r0x102F
                                           	ADD	r0x102F, R0
                                           	JB	PSW, 0
                                           	JMP	_00188_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00188_DS_
                                           	JB	PSW, 2
                                           	JMP	_00189_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00189_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXDT2
                                           	MOV	_CANTXDT2, R0
                                           ;	.line	175; "../BSP_can.c"	CANTXDT3=CAN_Send_DATA->raw_data[3];
                                           	MOV	R0,# 0x07
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	MOV	R0,# 0x03
                                           	BANKSEL	r0x102F
                                           	ADD	r0x102F, R0
                                           	JB	PSW, 0
                                           	JMP	_00190_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00190_DS_
                                           	JB	PSW, 2
                                           	JMP	_00191_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00191_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXDT3
                                           	MOV	_CANTXDT3, R0
                                           ;	.line	176; "../BSP_can.c"	CANTXDT4=CAN_Send_DATA->raw_data[4];
                                           	MOV	R0,# 0x07
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	MOV	R0,# 0x04
                                           	BANKSEL	r0x102F
                                           	ADD	r0x102F, R0
                                           	JB	PSW, 0
                                           	JMP	_00192_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00192_DS_
                                           	JB	PSW, 2
                                           	JMP	_00193_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00193_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXDT4
                                           	MOV	_CANTXDT4, R0
                                           ;	.line	177; "../BSP_can.c"	CANTXDT5=CAN_Send_DATA->raw_data[5];
                                           	MOV	R0,# 0x07
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	MOV	R0,# 0x05
                                           	BANKSEL	r0x102F
                                           	ADD	r0x102F, R0
                                           	JB	PSW, 0
                                           	JMP	_00194_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00194_DS_
                                           	JB	PSW, 2
                                           	JMP	_00195_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00195_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXDT5
                                           	MOV	_CANTXDT5, R0
                                           ;	.line	178; "../BSP_can.c"	CANTXDT6=CAN_Send_DATA->raw_data[6];
                                           	MOV	R0,# 0x07
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	MOV	R0,# 0x06
                                           	BANKSEL	r0x102F
                                           	ADD	r0x102F, R0
                                           	JB	PSW, 0
                                           	JMP	_00196_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00196_DS_
                                           	JB	PSW, 2
                                           	JMP	_00197_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00197_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXDT6
                                           	MOV	_CANTXDT6, R0
                                           ;	.line	179; "../BSP_can.c"	CANTXDT7=CAN_Send_DATA->raw_data[7];
                                           	MOV	R0,# 0x07
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	MOV	R0,# 0x07
                                           	BANKSEL	r0x102F
                                           	ADD	r0x102F, R0
                                           	JB	PSW, 0
                                           	JMP	_00198_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00198_DS_
                                           	JB	PSW, 2
                                           	JMP	_00199_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00199_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXDT7
                                           	MOV	_CANTXDT7, R0
                                           	JMP	_00066_DS_
                                           _00062_DS_
                                           ;	.line	183; "../BSP_can.c"	CANTXID0=CAN_Send_DATA->data_id[0];
                                           	MOV	R0,# 0x03
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXID0
                                           	MOV	_CANTXID0, R0
                                           ;	.line	184; "../BSP_can.c"	CANTXID1=CAN_Send_DATA->data_id[1];
                                           	MOV	R0,# 0x03
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	BANKSEL	r0x102F
                                           	INC	r0x102F
                                           	JB	PSW, 2
                                           	JMP	_00200_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00200_DS_
                                           	JB	PSW, 2
                                           	JMP	_00201_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00201_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXID1
                                           	MOV	_CANTXID1, R0
                                           ;	.line	185; "../BSP_can.c"	CANTXID2=CAN_Send_DATA->data_id[2];
                                           	MOV	R0,# 0x03
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	MOV	R0,# 0x02
                                           	BANKSEL	r0x102F
                                           	ADD	r0x102F, R0
                                           	JB	PSW, 0
                                           	JMP	_00202_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00202_DS_
                                           	JB	PSW, 2
                                           	JMP	_00203_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00203_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXID2
                                           	MOV	_CANTXID2, R0
                                           ;	.line	186; "../BSP_can.c"	CANTXID3=CAN_Send_DATA->data_id[3];
                                           	MOV	R0,# 0x03
                                           	BANKSEL	r0x102E
                                           	ADD	r0x102E, R0
                                           	JB	PSW, 0
                                           	JMP	_00204_DS_
                                           	BANKSEL	r0x102D
                                           	INC	r0x102D
                                           _00204_DS_
                                           	JB	PSW, 2
                                           	JMP	_00205_DS_
                                           	BANKSEL	r0x102C
                                           	INC	r0x102C
                                           _00205_DS_
                                           	MOV	R0,# 0x03
                                           	BANKSEL	r0x102E
                                           	ADD	r0x102E, R0
                                           	JB	PSW, 0
                                           	JMP	_00206_DS_
                                           	BANKSEL	r0x102D
                                           	INC	r0x102D
                                           _00206_DS_
                                           	JB	PSW, 2
                                           	JMP	_00207_DS_
                                           	BANKSEL	r0x102C
                                           	INC	r0x102C
                                           _00207_DS_
                                           	BANKSEL	r0x102E
                                           	MOVZ	R0, r0x102E
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXID3
                                           	MOV	_CANTXID3, R0
                                           _00066_DS_
                                           ;	.line	191; "../BSP_can.c"	CANCMR = 0x03;
                                           	MOV	R0,# 0x03
                                           	BANKSEL	_CANCMR
                                           	MOV	_CANCMR, R0
                                           ;	.line	194; "../BSP_can.c"	while(!TCSTA)
                                           	BANKSEL	r0x102E
                                           	CLR	r0x102E
                                           	BANKSEL	r0x102D
                                           	CLR	r0x102D
                                           _00069_DS_
                                           	BANKSEL	_CANSTA_bits
                                           	JNB	_CANSTA_bits, 3
                                           	JMP	_00071_DS_
                                           ;	.line	196; "../BSP_can.c"	if(++Delay_Count>0xFE0)
                                           	BANKSEL	r0x102E
                                           	INC	r0x102E
                                           	JB	PSW, 2
                                           	JMP	_00208_DS_
                                           	BANKSEL	r0x102D
                                           	INC	r0x102D
                                           _00208_DS_
                                           	MOV	R0,# 0x0f
                                           	BANKSEL	r0x102D
                                           	SUB	R0, r0x102D
                                           	JB	PSW, 2
                                           	JMP	_00084_DS_
                                           	MOV	R0,# 0xe1
                                           	BANKSEL	r0x102E
                                           	SUB	R0, r0x102E
                                           _00084_DS_
                                           	JB	PSW, 0
                                           	JMP	_00069_DS_
                                           ;	.line	197; "../BSP_can.c"	return False;
                                           	MOV	R0,# 0x00
                                           	JMP	_00072_DS_
                                           _00071_DS_
                                           ;	.line	200; "../BSP_can.c"	return OK;
                                           	MOV	R0,# 0x01
                                           _00072_DS_
                                           	CRET	
                                           func._CAN_Init	.code
                                           _CAN_Init	;Function start
                                           ;	.line	93; "../BSP_can.c"	void CAN_Init(uint8 CAN_SJW, uint8 CAN_BS1, uint8 CAN_BS2, uint8 CAN_MODE, uint8 CAN_pre)
0006c7   e100     MOVB	#0x00               	BANKSEL	r0x1037
0006c8   51a8     MOV	0xa8, R0             	MOV	r0x1037, R0
                                           	BANKSEL	STK00
0006c9   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1038
0006ca   51a7     MOV	0xa7, R0             	MOV	r0x1038, R0
                                           	BANKSEL	STK01
0006cb   0e7d     MOVZ	R0, 0x7d            	MOVZ	R0, STK01
                                           	BANKSEL	r0x1039
0006cc   51a6     MOV	0xa6, R0             	MOV	r0x1039, R0
                                           	BANKSEL	STK02
0006cd   0e7c     MOVZ	R0, 0x7c            	MOVZ	R0, STK02
                                           	BANKSEL	r0x103A
0006ce   51a5     MOV	0xa5, R0             	MOV	r0x103A, R0
                                           	BANKSEL	STK03
0006cf   0e7b     MOVZ	R0, 0x7b            	MOVZ	R0, STK03
                                           	BANKSEL	r0x103B
0006d0   51a4     MOV	0xa4, R0             	MOV	r0x103B, R0
                                           ;	.line	96; "../BSP_can.c"	ANS15 = 0;
                                           	BANKSEL	_ANS1_bits
0006d1   654b     CLR	0x4b, 5              	CLR	_ANS1_bits, 5
                                           ;	.line	97; "../BSP_can.c"	ANS14 = 0;
                                           	BANKSEL	_ANS1_bits
0006d2   644b     CLR	0x4b, 4              	CLR	_ANS1_bits, 4
                                           ;	.line	98; "../BSP_can.c"	TR15 = 0;
                                           	BANKSEL	_TR1_bits
0006d3   6527     CLR	0x27, 5              	CLR	_TR1_bits, 5
                                           ;	.line	99; "../BSP_can.c"	TR14 = 1;
                                           	BANKSEL	_TR1_bits
0006d4   6c27     SET	0x27, 4              	SET	_TR1_bits, 4
                                           ;	.line	101; "../BSP_can.c"	CANMOD |= CAN_reset;
0006d5   e105     MOVB	#0x05               	BANKSEL	_CANMOD
0006d6   683d     SET	0x3d, 0              	SET	_CANMOD, 0
                                           ;	.line	103; "../BSP_can.c"	if(CAN_MODE)
0006d7   9800     MOV	R0, #0               	MOV	R0,# 0x00
0006d8   e100     MOVB	#0x00               	BANKSEL	r0x103A
0006d9   30a5     ORL	R0, 0xa5             	ORL	R0, r0x103A
0006da   7203     JNB	0x3, 2               	JNB	PSW, 2
0006db   c6e0     JMP	#0x6e0               	JMP	_00048_DS_
                                           ;	.line	105; "../BSP_can.c"	CANMOD |= CAN_enable|CANCLK_SEL_HFCLK|CAN_LBACK_disable;
0006dc   98a0     MOV	R0, #0xa0            	MOV	R0,# 0xa0
0006dd   e105     MOVB	#0x05               	BANKSEL	_CANMOD
0006de   313d     ORL	0x3d, R0             	ORL	_CANMOD, R0
0006df   c6e3     JMP	#0x6e3               	JMP	_00049_DS_
                                           _00048_DS_
                                           ;	.line	109; "../BSP_can.c"	CANMOD |= CAN_enable|CANCLK_SEL_HFCLK;
0006e0   98a0     MOV	R0, #0xa0            	MOV	R0,# 0xa0
0006e1   e105     MOVB	#0x05               	BANKSEL	_CANMOD
0006e2   313d     ORL	0x3d, R0             	ORL	_CANMOD, R0
                                           _00049_DS_
                                           ;	.line	113; "../BSP_can.c"	CANBTR = (CAN_SJW-1)<<6|(CAN_pre-1);
0006e3   e100     MOVB	#0x00               	BANKSEL	r0x1037
0006e4   07a8     DEC	0xa8                 	DEC	r0x1037
                                           	BANKSEL	r0x1037
0006e5   40a8     SWAPR	R0, 0xa8           	SWAPR	R0, r0x1037
0006e6   88f0     AND	R0, #0xf0            	AND	R0,# 0xf0
                                           	BANKSEL	r0x103A
0006e7   51a5     MOV	0xa5, R0             	MOV	r0x103A, R0
0006e8   6003     CLR	0x3, 0               	CLR	PSW, 0
                                           	BANKSEL	r0x103A
0006e9   13a5     RLC	0xa5                 	RLC	r0x103A
0006ea   6003     CLR	0x3, 0               	CLR	PSW, 0
                                           	BANKSEL	r0x103A
0006eb   13a5     RLC	0xa5                 	RLC	r0x103A
                                           	BANKSEL	r0x103B
0006ec   07a4     DEC	0xa4                 	DEC	r0x103B
                                           	BANKSEL	r0x103B
0006ed   0ea4     MOVZ	R0, 0xa4            	MOVZ	R0, r0x103B
                                           	BANKSEL	r0x103A
0006ee   30a5     ORL	R0, 0xa5             	ORL	R0, r0x103A
0006ef   e105     MOVB	#0x05               	BANKSEL	_CANBTR
0006f0   5140     MOV	0x40, R0             	MOV	_CANBTR, R0
                                           ;	.line	114; "../BSP_can.c"	CANSEG = CAN_Sample_1|(CAN_BS1-1)|(CAN_BS2-1)<<4;
0006f1   e100     MOVB	#0x00               	BANKSEL	r0x1038
0006f2   07a7     DEC	0xa7                 	DEC	r0x1038
                                           	BANKSEL	r0x1039
0006f3   07a6     DEC	0xa6                 	DEC	r0x1039
                                           	BANKSEL	r0x1039
0006f4   40a6     SWAPR	R0, 0xa6           	SWAPR	R0, r0x1039
0006f5   88f0     AND	R0, #0xf0            	AND	R0,# 0xf0
                                           	BANKSEL	r0x1037
0006f6   51a8     MOV	0xa8, R0             	MOV	r0x1037, R0
                                           	BANKSEL	r0x1037
0006f7   0ea8     MOVZ	R0, 0xa8            	MOVZ	R0, r0x1037
                                           	BANKSEL	r0x1038
0006f8   30a7     ORL	R0, 0xa7             	ORL	R0, r0x1038
0006f9   e105     MOVB	#0x05               	BANKSEL	_CANSEG
0006fa   5141     MOV	0x41, R0             	MOV	_CANSEG, R0
                                           ;	.line	119; "../BSP_can.c"	CANMOD &= ~CAN_reset;
                                           	BANKSEL	_CANMOD
0006fb   0e3d     MOVZ	R0, 0x3d            	MOVZ	R0, _CANMOD
0006fc   e100     MOVB	#0x00               	BANKSEL	r0x1037
0006fd   51a8     MOV	0xa8, R0             	MOV	r0x1037, R0
                                           	BANKSEL	r0x1037
0006fe   60a8     CLR	0xa8, 0              	CLR	r0x1037, 0
                                           	BANKSEL	r0x1037
0006ff   0ea8     MOVZ	R0, 0xa8            	MOVZ	R0, r0x1037
000700   e105     MOVB	#0x05               	BANKSEL	_CANMOD
000701   513d     MOV	0x3d, R0             	MOV	_CANMOD, R0
000702   0008     CRET                     	CRET	
                                           func._CAN_IDFilterConfig	.code
                                           _CAN_IDFilterConfig	;Function start
                                           ;	.line	14; "../BSP_can.c"	FilterConfig_STATE CAN_IDFilterConfig(uint8 CAN_IDE, uint8 CANID_MODE, uint32 CAN_FilterID, uint32 CAN_MASKID)
0001cf   e100     MOVB	#0x00               	BANKSEL	r0x103C
0001d0   51b5     MOV	0xb5, R0             	MOV	r0x103C, R0
                                           	BANKSEL	STK00
0001d1   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x103D
0001d2   51b4     MOV	0xb4, R0             	MOV	r0x103D, R0
                                           	BANKSEL	STK01
0001d3   0e7d     MOVZ	R0, 0x7d            	MOVZ	R0, STK01
                                           	BANKSEL	r0x103E
0001d4   51b0     MOV	0xb0, R0             	MOV	r0x103E, R0
                                           	BANKSEL	STK02
0001d5   0e7c     MOVZ	R0, 0x7c            	MOVZ	R0, STK02
                                           	BANKSEL	r0x103F
0001d6   51b1     MOV	0xb1, R0             	MOV	r0x103F, R0
                                           	BANKSEL	STK03
0001d7   0e7b     MOVZ	R0, 0x7b            	MOVZ	R0, STK03
                                           	BANKSEL	r0x1040
0001d8   51b2     MOV	0xb2, R0             	MOV	r0x1040, R0
                                           	BANKSEL	STK04
0001d9   0e7a     MOVZ	R0, 0x7a            	MOVZ	R0, STK04
                                           	BANKSEL	r0x1041
0001da   51b3     MOV	0xb3, R0             	MOV	r0x1041, R0
                                           	BANKSEL	STK05
0001db   0e79     MOVZ	R0, 0x79            	MOVZ	R0, STK05
                                           	BANKSEL	r0x1042
0001dc   51ac     MOV	0xac, R0             	MOV	r0x1042, R0
                                           	BANKSEL	STK06
0001dd   0e78     MOVZ	R0, 0x78            	MOVZ	R0, STK06
                                           	BANKSEL	r0x1043
0001de   51ad     MOV	0xad, R0             	MOV	r0x1043, R0
                                           	BANKSEL	STK07
0001df   0edb     MOVZ	R0, 0xdb            	MOVZ	R0, STK07
                                           	BANKSEL	r0x1044
0001e0   51ae     MOV	0xae, R0             	MOV	r0x1044, R0
                                           	BANKSEL	STK08
0001e1   0eda     MOVZ	R0, 0xda            	MOVZ	R0, STK08
                                           	BANKSEL	r0x1045
0001e2   51af     MOV	0xaf, R0             	MOV	r0x1045, R0
                                           ;	.line	16; "../BSP_can.c"	if(CAN_IDE == 0) //标准模式
0001e3   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x103C
0001e4   30b5     ORL	R0, 0xb5             	ORL	R0, r0x103C
0001e5   7a03     JB	0x3, 2                	JB	PSW, 2
0001e6   c25f     JMP	#0x25f               	JMP	_00022_DS_
                                           ;	.line	19; "../BSP_can.c"	if(CANID_MODE == 0) //11位ID右对齐
0001e7   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x103D
0001e8   30b4     ORL	R0, 0xb4             	ORL	R0, r0x103D
0001e9   7a03     JB	0x3, 2                	JB	PSW, 2
0001ea   c20f     JMP	#0x20f               	JMP	_00007_DS_
                                           ;	.line	21; "../BSP_can.c"	if(CAN_FilterID>0x7FFF)
                                           	BANKSEL	r0x1040
0001eb   0eb2     MOVZ	R0, 0xb2            	MOVZ	R0, r0x1040
                                           	BANKSEL	r0x1040
0001ec   7fb2     JB	0xb2, 7               	JB	r0x1040, 7
0001ed   c1f8     JMP	#0x1f8               	JMP	_00002_DS_
                                           	BANKSEL	r0x103F
0001ee   0eb1     MOVZ	R0, 0xb1            	MOVZ	R0, r0x103F
0001ef   88ff     AND	R0, #0xff            	AND	R0,# 0xff
0001f0   7203     JNB	0x3, 2               	JNB	PSW, 2
0001f1   c1f8     JMP	#0x1f8               	JMP	_00002_DS_
                                           	BANKSEL	r0x103E
0001f2   0eb0     MOVZ	R0, 0xb0            	MOVZ	R0, r0x103E
0001f3   88ff     AND	R0, #0xff            	AND	R0,# 0xff
0001f4   7203     JNB	0x3, 2               	JNB	PSW, 2
0001f5   c1f8     JMP	#0x1f8               	JMP	_00002_DS_
                                           ;	.line	22; "../BSP_can.c"	return False;
0001f6   9800     MOV	R0, #0               	MOV	R0,# 0x00
0001f7   c2e8     JMP	#0x2e8               	JMP	_00024_DS_
                                           _00002_DS_
                                           ;	.line	25; "../BSP_can.c"	CAN_FilterID <<=5;
0001f8   9805     MOV	R0, #0x5             	MOV	R0,# 0x05
0001f9   ff10     INC	R0                   	INC	R0
0001fa   c201     JMP	#0x201               	JMP	_00037_DS_
                                           _00036_DS_
0001fb   6003     CLR	0x3, 0               	CLR	PSW, 0
0001fc   e100     MOVB	#0x00               	BANKSEL	r0x1041
0001fd   13b3     RLC	0xb3                 	RLC	r0x1041
                                           	BANKSEL	r0x1040
0001fe   13b2     RLC	0xb2                 	RLC	r0x1040
                                           	BANKSEL	r0x103F
0001ff   13b1     RLC	0xb1                 	RLC	r0x103F
                                           	BANKSEL	r0x103E
000200   13b0     RLC	0xb0                 	RLC	r0x103E
                                           _00037_DS_
000201   ff58     DECJZ	R0                 	DECJZ	R0
000202   c1fb     JMP	#0x1fb               	JMP	_00036_DS_
                                           ;	.line	26; "../BSP_can.c"	CAN_MASKID <<=5;
000203   9805     MOV	R0, #0x5             	MOV	R0,# 0x05
000204   ff10     INC	R0                   	INC	R0
000205   c20c     JMP	#0x20c               	JMP	_00039_DS_
                                           _00038_DS_
000206   6003     CLR	0x3, 0               	CLR	PSW, 0
000207   e100     MOVB	#0x00               	BANKSEL	r0x1045
000208   13af     RLC	0xaf                 	RLC	r0x1045
                                           	BANKSEL	r0x1044
000209   13ae     RLC	0xae                 	RLC	r0x1044
                                           	BANKSEL	r0x1043
00020a   13ad     RLC	0xad                 	RLC	r0x1043
                                           	BANKSEL	r0x1042
00020b   13ac     RLC	0xac                 	RLC	r0x1042
                                           _00039_DS_
00020c   ff58     DECJZ	R0                 	DECJZ	R0
00020d   c206     JMP	#0x206               	JMP	_00038_DS_
00020e   c221     JMP	#0x221               	JMP	_00008_DS_
                                           _00007_DS_
                                           ;	.line	31; "../BSP_can.c"	if(CAN_FilterID>0xFFE0) //11位ID左对齐，其值超过11位，则判断输入ID错误
00020f   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x103E
000210   38b0     SUB	R0, 0xb0             	SUB	R0, r0x103E
000211   7a03     JB	0x3, 2                	JB	PSW, 2
000212   c21d     JMP	#0x21d               	JMP	_00040_DS_
000213   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x103F
000214   38b1     SUB	R0, 0xb1             	SUB	R0, r0x103F
000215   7a03     JB	0x3, 2                	JB	PSW, 2
000216   c21d     JMP	#0x21d               	JMP	_00040_DS_
000217   98ff     MOV	R0, #0xff            	MOV	R0,# 0xff
                                           	BANKSEL	r0x1040
000218   38b2     SUB	R0, 0xb2             	SUB	R0, r0x1040
000219   7a03     JB	0x3, 2                	JB	PSW, 2
00021a   c21d     JMP	#0x21d               	JMP	_00040_DS_
00021b   98e1     MOV	R0, #0xe1            	MOV	R0,# 0xe1
                                           	BANKSEL	r0x1041
00021c   38b3     SUB	R0, 0xb3             	SUB	R0, r0x1041
                                           _00040_DS_
00021d   7803     JB	0x3, 0                	JB	PSW, 0
00021e   c221     JMP	#0x221               	JMP	_00008_DS_
                                           ;	.line	32; "../BSP_can.c"	return False;
00021f   9800     MOV	R0, #0               	MOV	R0,# 0x00
000220   c2e8     JMP	#0x2e8               	JMP	_00024_DS_
                                           _00008_DS_
                                           ;	.line	34; "../BSP_can.c"	if(CAN_FilterID&0xFE00 == 0xFE00) //11位ID左对齐，CAN协议要求，高7位不能全部是隐性位，即高7位全部为1是错误的ID。
                                           	BANKSEL	r0x1041
000221   78b3     JB	0xb3, 0               	JB	r0x1041, 0
000222   c225     JMP	#0x225               	JMP	_00010_DS_
                                           ;	.line	35; "../BSP_can.c"	return False;
000223   9800     MOV	R0, #0               	MOV	R0,# 0x00
000224   c2e8     JMP	#0x2e8               	JMP	_00024_DS_
                                           _00010_DS_
                                           ;	.line	37; "../BSP_can.c"	CANMOD |= CAN_reset; //CAN模块进入复位模式，开始配置其寄存器
000225   e105     MOVB	#0x05               	BANKSEL	_CANMOD
000226   683d     SET	0x3d, 0              	SET	_CANMOD, 0
                                           ;	.line	38; "../BSP_can.c"	CANACR0 = CAN_FilterID>>8;  //设置接收识别ID
000227   e100     MOVB	#0x00               	BANKSEL	r0x1040
000228   0eb2     MOVZ	R0, 0xb2            	MOVZ	R0, r0x1040
                                           	BANKSEL	r0x103C
000229   51b5     MOV	0xb5, R0             	MOV	r0x103C, R0
                                           	BANKSEL	r0x103F
00022a   0eb1     MOVZ	R0, 0xb1            	MOVZ	R0, r0x103F
                                           	BANKSEL	r0x1046
00022b   51ab     MOV	0xab, R0             	MOV	r0x1046, R0
                                           	BANKSEL	r0x103E
00022c   0eb0     MOVZ	R0, 0xb0            	MOVZ	R0, r0x103E
                                           	BANKSEL	r0x1047
00022d   51aa     MOV	0xaa, R0             	MOV	r0x1047, R0
                                           	BANKSEL	r0x1048
00022e   03a9     CLR	0xa9                 	CLR	r0x1048
                                           	BANKSEL	r0x103C
00022f   0eb5     MOVZ	R0, 0xb5            	MOVZ	R0, r0x103C
000230   e105     MOVB	#0x05               	BANKSEL	_CANACR0
000231   5148     MOV	0x48, R0             	MOV	_CANACR0, R0
                                           ;	.line	39; "../BSP_can.c"	CANACR1 = CAN_FilterID&0xE0;
000232   98e0     MOV	R0, #0xe0            	MOV	R0,# 0xe0
000233   e100     MOVB	#0x00               	BANKSEL	r0x1041
000234   28b3     AND	R0, 0xb3             	AND	R0, r0x1041
                                           	BANKSEL	r0x103C
000235   51b5     MOV	0xb5, R0             	MOV	r0x103C, R0
                                           	BANKSEL	r0x1046
000236   03ab     CLR	0xab                 	CLR	r0x1046
                                           	BANKSEL	r0x1047
000237   03aa     CLR	0xaa                 	CLR	r0x1047
                                           	BANKSEL	r0x1048
000238   03a9     CLR	0xa9                 	CLR	r0x1048
                                           	BANKSEL	r0x103C
000239   0eb5     MOVZ	R0, 0xb5            	MOVZ	R0, r0x103C
00023a   e105     MOVB	#0x05               	BANKSEL	_CANACR1
00023b   5149     MOV	0x49, R0             	MOV	_CANACR1, R0
                                           ;	.line	40; "../BSP_can.c"	CANACR2 = 0;
                                           	BANKSEL	_CANACR2
00023c   034a     CLR	0x4a                 	CLR	_CANACR2
                                           ;	.line	41; "../BSP_can.c"	CANACR3 = 0;
                                           	BANKSEL	_CANACR3
00023d   034b     CLR	0x4b                 	CLR	_CANACR3
                                           ;	.line	42; "../BSP_can.c"	CANMSK0 = CAN_MASKID>>8;  //设置识别ID掩码  CAN_MASKID>>8
00023e   e100     MOVB	#0x00               	BANKSEL	r0x1043
00023f   0ead     MOVZ	R0, 0xad            	MOVZ	R0, r0x1043
                                           	BANKSEL	r0x1046
000240   51ab     MOV	0xab, R0             	MOV	r0x1046, R0
                                           	BANKSEL	r0x1042
000241   0eac     MOVZ	R0, 0xac            	MOVZ	R0, r0x1042
                                           	BANKSEL	r0x1047
000242   51aa     MOV	0xaa, R0             	MOV	r0x1047, R0
                                           	BANKSEL	r0x1048
000243   03a9     CLR	0xa9                 	CLR	r0x1048
                                           	BANKSEL	r0x1044
000244   0eae     MOVZ	R0, 0xae            	MOVZ	R0, r0x1044
                                           	BANKSEL	r0x103C
000245   51b5     MOV	0xb5, R0             	MOV	r0x103C, R0
000246   e105     MOVB	#0x05               	BANKSEL	_CANMSK0
000247   514c     MOV	0x4c, R0             	MOV	_CANMSK0, R0
                                           ;	.line	43; "../BSP_can.c"	CANMSK1 = CAN_MASKID&0xE0;//CAN_MASKID&0xE0
000248   98e0     MOV	R0, #0xe0            	MOV	R0,# 0xe0
000249   e100     MOVB	#0x00               	BANKSEL	r0x1045
00024a   28af     AND	R0, 0xaf             	AND	R0, r0x1045
                                           	BANKSEL	r0x103C
00024b   51b5     MOV	0xb5, R0             	MOV	r0x103C, R0
                                           	BANKSEL	r0x1046
00024c   03ab     CLR	0xab                 	CLR	r0x1046
                                           	BANKSEL	r0x1047
00024d   03aa     CLR	0xaa                 	CLR	r0x1047
                                           	BANKSEL	r0x1048
00024e   03a9     CLR	0xa9                 	CLR	r0x1048
                                           	BANKSEL	r0x103C
00024f   0eb5     MOVZ	R0, 0xb5            	MOVZ	R0, r0x103C
000250   e105     MOVB	#0x05               	BANKSEL	_CANMSK1
000251   514d     MOV	0x4d, R0             	MOV	_CANMSK1, R0
                                           ;	.line	44; "../BSP_can.c"	CANMSK2 = 0xFF;
000252   98ff     MOV	R0, #0xff            	MOV	R0,# 0xff
                                           	BANKSEL	_CANMSK2
000253   514e     MOV	0x4e, R0             	MOV	_CANMSK2, R0
                                           ;	.line	45; "../BSP_can.c"	CANMSK3 = 0xFF;
000254   98ff     MOV	R0, #0xff            	MOV	R0,# 0xff
                                           	BANKSEL	_CANMSK3
000255   514f     MOV	0x4f, R0             	MOV	_CANMSK3, R0
                                           ;	.line	46; "../BSP_can.c"	CANMOD &= ~CAN_reset; //CAN模块退出复位模式，进入工作模式
                                           	BANKSEL	_CANMOD
000256   0e3d     MOVZ	R0, 0x3d            	MOVZ	R0, _CANMOD
000257   e100     MOVB	#0x00               	BANKSEL	r0x103C
000258   51b5     MOV	0xb5, R0             	MOV	r0x103C, R0
                                           	BANKSEL	r0x103C
000259   60b5     CLR	0xb5, 0              	CLR	r0x103C, 0
                                           	BANKSEL	r0x103C
00025a   0eb5     MOVZ	R0, 0xb5            	MOVZ	R0, r0x103C
00025b   e105     MOVB	#0x05               	BANKSEL	_CANMOD
00025c   513d     MOV	0x3d, R0             	MOV	_CANMOD, R0
                                           ;	.line	47; "../BSP_can.c"	return OK;
00025d   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
00025e   c2e8     JMP	#0x2e8               	JMP	_00024_DS_
                                           _00022_DS_
                                           ;	.line	51; "../BSP_can.c"	if(CANID_MODE == 0)
00025f   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x103D
000260   30b4     ORL	R0, 0xb4             	ORL	R0, r0x103D
000261   7a03     JB	0x3, 2                	JB	PSW, 2
000262   c280     JMP	#0x280               	JMP	_00017_DS_
                                           ;	.line	53; "../BSP_can.c"	if(CAN_FilterID>0x1FFFFFFF)
                                           	BANKSEL	r0x103E
000263   0eb0     MOVZ	R0, 0xb0            	MOVZ	R0, r0x103E
000264   88e0     AND	R0, #0xe0            	AND	R0,# 0xe0
000265   7203     JNB	0x3, 2               	JNB	PSW, 2
000266   c269     JMP	#0x269               	JMP	_00012_DS_
                                           ;	.line	54; "../BSP_can.c"	return False;
000267   9800     MOV	R0, #0               	MOV	R0,# 0x00
000268   c2e8     JMP	#0x2e8               	JMP	_00024_DS_
                                           _00012_DS_
                                           ;	.line	57; "../BSP_can.c"	CAN_FilterID <<=3;
000269   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
00026a   ff10     INC	R0                   	INC	R0
00026b   c272     JMP	#0x272               	JMP	_00043_DS_
                                           _00042_DS_
00026c   6003     CLR	0x3, 0               	CLR	PSW, 0
00026d   e100     MOVB	#0x00               	BANKSEL	r0x1041
00026e   13b3     RLC	0xb3                 	RLC	r0x1041
                                           	BANKSEL	r0x1040
00026f   13b2     RLC	0xb2                 	RLC	r0x1040
                                           	BANKSEL	r0x103F
000270   13b1     RLC	0xb1                 	RLC	r0x103F
                                           	BANKSEL	r0x103E
000271   13b0     RLC	0xb0                 	RLC	r0x103E
                                           _00043_DS_
000272   ff58     DECJZ	R0                 	DECJZ	R0
000273   c26c     JMP	#0x26c               	JMP	_00042_DS_
                                           ;	.line	58; "../BSP_can.c"	CAN_MASKID   <<=3;
000274   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
000275   ff10     INC	R0                   	INC	R0
000276   c27d     JMP	#0x27d               	JMP	_00045_DS_
                                           _00044_DS_
000277   6003     CLR	0x3, 0               	CLR	PSW, 0
000278   e100     MOVB	#0x00               	BANKSEL	r0x1045
000279   13af     RLC	0xaf                 	RLC	r0x1045
                                           	BANKSEL	r0x1044
00027a   13ae     RLC	0xae                 	RLC	r0x1044
                                           	BANKSEL	r0x1043
00027b   13ad     RLC	0xad                 	RLC	r0x1043
                                           	BANKSEL	r0x1042
00027c   13ac     RLC	0xac                 	RLC	r0x1042
                                           _00045_DS_
00027d   ff58     DECJZ	R0                 	DECJZ	R0
00027e   c277     JMP	#0x277               	JMP	_00044_DS_
00027f   c292     JMP	#0x292               	JMP	_00018_DS_
                                           _00017_DS_
                                           ;	.line	63; "../BSP_can.c"	if(CAN_FilterID>0xFFFFFFF8)
000280   98ff     MOV	R0, #0xff            	MOV	R0,# 0xff
                                           	BANKSEL	r0x103E
000281   38b0     SUB	R0, 0xb0             	SUB	R0, r0x103E
000282   7a03     JB	0x3, 2                	JB	PSW, 2
000283   c28e     JMP	#0x28e               	JMP	_00046_DS_
000284   98ff     MOV	R0, #0xff            	MOV	R0,# 0xff
                                           	BANKSEL	r0x103F
000285   38b1     SUB	R0, 0xb1             	SUB	R0, r0x103F
000286   7a03     JB	0x3, 2                	JB	PSW, 2
000287   c28e     JMP	#0x28e               	JMP	_00046_DS_
000288   98ff     MOV	R0, #0xff            	MOV	R0,# 0xff
                                           	BANKSEL	r0x1040
000289   38b2     SUB	R0, 0xb2             	SUB	R0, r0x1040
00028a   7a03     JB	0x3, 2                	JB	PSW, 2
00028b   c28e     JMP	#0x28e               	JMP	_00046_DS_
00028c   98f9     MOV	R0, #0xf9            	MOV	R0,# 0xf9
                                           	BANKSEL	r0x1041
00028d   38b3     SUB	R0, 0xb3             	SUB	R0, r0x1041
                                           _00046_DS_
00028e   7803     JB	0x3, 0                	JB	PSW, 0
00028f   c292     JMP	#0x292               	JMP	_00018_DS_
                                           ;	.line	64; "../BSP_can.c"	return False;
000290   9800     MOV	R0, #0               	MOV	R0,# 0x00
000291   c2e8     JMP	#0x2e8               	JMP	_00024_DS_
                                           _00018_DS_
                                           ;	.line	66; "../BSP_can.c"	if(CAN_FilterID&0xFE000000 == 0xFE000000)
                                           	BANKSEL	r0x1041
000292   78b3     JB	0xb3, 0               	JB	r0x1041, 0
000293   c296     JMP	#0x296               	JMP	_00020_DS_
                                           ;	.line	67; "../BSP_can.c"	return False;
000294   9800     MOV	R0, #0               	MOV	R0,# 0x00
000295   c2e8     JMP	#0x2e8               	JMP	_00024_DS_
                                           _00020_DS_
                                           ;	.line	68; "../BSP_can.c"	CANMOD |= CAN_reset;
000296   e105     MOVB	#0x05               	BANKSEL	_CANMOD
000297   683d     SET	0x3d, 0              	SET	_CANMOD, 0
                                           ;	.line	69; "../BSP_can.c"	CANACR0 = CAN_FilterID>>24;
000298   e100     MOVB	#0x00               	BANKSEL	r0x103D
000299   03b4     CLR	0xb4                 	CLR	r0x103D
                                           	BANKSEL	r0x1046
00029a   03ab     CLR	0xab                 	CLR	r0x1046
                                           	BANKSEL	r0x1047
00029b   03aa     CLR	0xaa                 	CLR	r0x1047
                                           	BANKSEL	r0x103E
00029c   0eb0     MOVZ	R0, 0xb0            	MOVZ	R0, r0x103E
                                           	BANKSEL	r0x103C
00029d   51b5     MOV	0xb5, R0             	MOV	r0x103C, R0
00029e   e105     MOVB	#0x05               	BANKSEL	_CANACR0
00029f   5148     MOV	0x48, R0             	MOV	_CANACR0, R0
                                           ;	.line	70; "../BSP_can.c"	CANACR1 = CAN_FilterID>>16;
0002a0   e100     MOVB	#0x00               	BANKSEL	r0x103E
0002a1   0eb0     MOVZ	R0, 0xb0            	MOVZ	R0, r0x103E
                                           	BANKSEL	r0x103D
0002a2   51b4     MOV	0xb4, R0             	MOV	r0x103D, R0
                                           	BANKSEL	r0x1046
0002a3   03ab     CLR	0xab                 	CLR	r0x1046
                                           	BANKSEL	r0x1047
0002a4   03aa     CLR	0xaa                 	CLR	r0x1047
                                           	BANKSEL	r0x103F
0002a5   0eb1     MOVZ	R0, 0xb1            	MOVZ	R0, r0x103F
                                           	BANKSEL	r0x103C
0002a6   51b5     MOV	0xb5, R0             	MOV	r0x103C, R0
0002a7   e105     MOVB	#0x05               	BANKSEL	_CANACR1
0002a8   5149     MOV	0x49, R0             	MOV	_CANACR1, R0
                                           ;	.line	71; "../BSP_can.c"	CANACR2 = CAN_FilterID>>8;
0002a9   e100     MOVB	#0x00               	BANKSEL	r0x103F
0002aa   0eb1     MOVZ	R0, 0xb1            	MOVZ	R0, r0x103F
                                           	BANKSEL	r0x103D
0002ab   51b4     MOV	0xb4, R0             	MOV	r0x103D, R0
                                           	BANKSEL	r0x103E
0002ac   0eb0     MOVZ	R0, 0xb0            	MOVZ	R0, r0x103E
                                           	BANKSEL	r0x1046
0002ad   51ab     MOV	0xab, R0             	MOV	r0x1046, R0
                                           	BANKSEL	r0x1047
0002ae   03aa     CLR	0xaa                 	CLR	r0x1047
                                           	BANKSEL	r0x1040
0002af   0eb2     MOVZ	R0, 0xb2            	MOVZ	R0, r0x1040
                                           	BANKSEL	r0x103C
0002b0   51b5     MOV	0xb5, R0             	MOV	r0x103C, R0
0002b1   e105     MOVB	#0x05               	BANKSEL	_CANACR2
0002b2   514a     MOV	0x4a, R0             	MOV	_CANACR2, R0
                                           ;	.line	72; "../BSP_can.c"	CANACR3 = CAN_FilterID&0xF8;
0002b3   98f8     MOV	R0, #0xf8            	MOV	R0,# 0xf8
0002b4   e100     MOVB	#0x00               	BANKSEL	r0x1041
0002b5   29b3     AND	0xb3, R0             	AND	r0x1041, R0
                                           	BANKSEL	r0x1040
0002b6   03b2     CLR	0xb2                 	CLR	r0x1040
                                           	BANKSEL	r0x103F
0002b7   03b1     CLR	0xb1                 	CLR	r0x103F
                                           	BANKSEL	r0x103E
0002b8   03b0     CLR	0xb0                 	CLR	r0x103E
                                           	BANKSEL	r0x1041
0002b9   0eb3     MOVZ	R0, 0xb3            	MOVZ	R0, r0x1041
0002ba   e105     MOVB	#0x05               	BANKSEL	_CANACR3
0002bb   514b     MOV	0x4b, R0             	MOV	_CANACR3, R0
                                           ;	.line	73; "../BSP_can.c"	CANMSK0 = CAN_MASKID>>24;
0002bc   e100     MOVB	#0x00               	BANKSEL	r0x1040
0002bd   03b2     CLR	0xb2                 	CLR	r0x1040
                                           	BANKSEL	r0x103F
0002be   03b1     CLR	0xb1                 	CLR	r0x103F
                                           	BANKSEL	r0x103E
0002bf   03b0     CLR	0xb0                 	CLR	r0x103E
                                           	BANKSEL	r0x1042
0002c0   0eac     MOVZ	R0, 0xac            	MOVZ	R0, r0x1042
                                           	BANKSEL	r0x1041
0002c1   51b3     MOV	0xb3, R0             	MOV	r0x1041, R0
0002c2   e105     MOVB	#0x05               	BANKSEL	_CANMSK0
0002c3   514c     MOV	0x4c, R0             	MOV	_CANMSK0, R0
                                           ;	.line	74; "../BSP_can.c"	CANMSK1 = CAN_MASKID>>16;
0002c4   e100     MOVB	#0x00               	BANKSEL	r0x1042
0002c5   0eac     MOVZ	R0, 0xac            	MOVZ	R0, r0x1042
                                           	BANKSEL	r0x1040
0002c6   51b2     MOV	0xb2, R0             	MOV	r0x1040, R0
                                           	BANKSEL	r0x103F
0002c7   03b1     CLR	0xb1                 	CLR	r0x103F
                                           	BANKSEL	r0x103E
0002c8   03b0     CLR	0xb0                 	CLR	r0x103E
                                           	BANKSEL	r0x1043
0002c9   0ead     MOVZ	R0, 0xad            	MOVZ	R0, r0x1043
                                           	BANKSEL	r0x1041
0002ca   51b3     MOV	0xb3, R0             	MOV	r0x1041, R0
0002cb   e105     MOVB	#0x05               	BANKSEL	_CANMSK1
0002cc   514d     MOV	0x4d, R0             	MOV	_CANMSK1, R0
                                           ;	.line	75; "../BSP_can.c"	CANMSK2 = CAN_MASKID>>8;
0002cd   e100     MOVB	#0x00               	BANKSEL	r0x1043
0002ce   0ead     MOVZ	R0, 0xad            	MOVZ	R0, r0x1043
                                           	BANKSEL	r0x1040
0002cf   51b2     MOV	0xb2, R0             	MOV	r0x1040, R0
                                           	BANKSEL	r0x1042
0002d0   0eac     MOVZ	R0, 0xac            	MOVZ	R0, r0x1042
                                           	BANKSEL	r0x103F
0002d1   51b1     MOV	0xb1, R0             	MOV	r0x103F, R0
                                           	BANKSEL	r0x103E
0002d2   03b0     CLR	0xb0                 	CLR	r0x103E
                                           	BANKSEL	r0x1044
0002d3   0eae     MOVZ	R0, 0xae            	MOVZ	R0, r0x1044
                                           	BANKSEL	r0x1041
0002d4   51b3     MOV	0xb3, R0             	MOV	r0x1041, R0
0002d5   e105     MOVB	#0x05               	BANKSEL	_CANMSK2
0002d6   514e     MOV	0x4e, R0             	MOV	_CANMSK2, R0
                                           ;	.line	76; "../BSP_can.c"	CANMSK3 = CAN_MASKID&0xF8;
0002d7   98f8     MOV	R0, #0xf8            	MOV	R0,# 0xf8
0002d8   e100     MOVB	#0x00               	BANKSEL	r0x1045
0002d9   29af     AND	0xaf, R0             	AND	r0x1045, R0
                                           	BANKSEL	r0x1044
0002da   03ae     CLR	0xae                 	CLR	r0x1044
                                           	BANKSEL	r0x1043
0002db   03ad     CLR	0xad                 	CLR	r0x1043
                                           	BANKSEL	r0x1042
0002dc   03ac     CLR	0xac                 	CLR	r0x1042
                                           	BANKSEL	r0x1045
0002dd   0eaf     MOVZ	R0, 0xaf            	MOVZ	R0, r0x1045
0002de   e105     MOVB	#0x05               	BANKSEL	_CANMSK3
0002df   514f     MOV	0x4f, R0             	MOV	_CANMSK3, R0
                                           ;	.line	77; "../BSP_can.c"	CANMOD &= ~CAN_reset;
                                           	BANKSEL	_CANMOD
0002e0   0e3d     MOVZ	R0, 0x3d            	MOVZ	R0, _CANMOD
0002e1   e100     MOVB	#0x00               	BANKSEL	r0x1045
0002e2   51af     MOV	0xaf, R0             	MOV	r0x1045, R0
                                           	BANKSEL	r0x1045
0002e3   60af     CLR	0xaf, 0              	CLR	r0x1045, 0
                                           	BANKSEL	r0x1045
0002e4   0eaf     MOVZ	R0, 0xaf            	MOVZ	R0, r0x1045
0002e5   e105     MOVB	#0x05               	BANKSEL	_CANMOD
0002e6   513d     MOV	0x3d, R0             	MOV	_CANMOD, R0
                                           ;	.line	78; "../BSP_can.c"	return OK;
0002e7   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           _00024_DS_
0002e8   0008     CRET                     	CRET	
                                           	.end
                                           	.radix dec
                                           	.include "KF8A100GQP.inc"
                                           func._PORT_Init	.code
                                           _PORT_Init	;Function start
                                           ;	.line	16; "../Clock.c"	P0LR = 0;	P1LR = 0;	P2LR = 0;	P3LR = 0;
000731   e100     MOVB	#0x00               	BANKSEL	_P0LR
000732   0345     CLR	0x45                 	CLR	_P0LR
                                           	BANKSEL	_P1LR
000733   0347     CLR	0x47                 	CLR	_P1LR
                                           	BANKSEL	_P2LR
000734   0346     CLR	0x46                 	CLR	_P2LR
                                           	BANKSEL	_P3LR
000735   0348     CLR	0x48                 	CLR	_P3LR
                                           ;	.line	17; "../Clock.c"	P4LR = 0;	P5LR = 0;	P6LR = 0;	P7LR = 0;
                                           	BANKSEL	_P4LR
000736   0349     CLR	0x49                 	CLR	_P4LR
000737   e101     MOVB	#0x01               	BANKSEL	_P5LR
000738   0345     CLR	0x45                 	CLR	_P5LR
                                           	BANKSEL	_P6LR
000739   0346     CLR	0x46                 	CLR	_P6LR
                                           	BANKSEL	_P7LR
00073a   0347     CLR	0x47                 	CLR	_P7LR
                                           ;	.line	18; "../Clock.c"	P9LR = 0;	PALR = 0;	PBLR = 0;
                                           	BANKSEL	_P9LR
00073b   0349     CLR	0x49                 	CLR	_P9LR
00073c   e104     MOVB	#0x04               	BANKSEL	_PALR
00073d   0325     CLR	0x25                 	CLR	_PALR
                                           	BANKSEL	_PBLR
00073e   032a     CLR	0x2a                 	CLR	_PBLR
                                           ;	.line	19; "../Clock.c"	ANS0 =0;
00073f   e100     MOVB	#0x00               	BANKSEL	_ANS0
000740   034a     CLR	0x4a                 	CLR	_ANS0
                                           ;	.line	20; "../Clock.c"	ANS06=1;
                                           	BANKSEL	_ANS0_bits
000741   6e4a     SET	0x4a, 6              	SET	_ANS0_bits, 6
                                           ;	.line	21; "../Clock.c"	ANS07=1;
                                           	BANKSEL	_ANS0_bits
000742   6f4a     SET	0x4a, 7              	SET	_ANS0_bits, 7
                                           ;	.line	22; "../Clock.c"	ANS1 =0;
                                           	BANKSEL	_ANS1
000743   034b     CLR	0x4b                 	CLR	_ANS1
                                           ;	.line	23; "../Clock.c"	ANS2 =0;
                                           	BANKSEL	_ANS2
000744   034c     CLR	0x4c                 	CLR	_ANS2
                                           ;	.line	24; "../Clock.c"	ANS3 =0;
                                           	BANKSEL	_ANS3
000745   034d     CLR	0x4d                 	CLR	_ANS3
                                           ;	.line	25; "../Clock.c"	ANS4 =0;
                                           	BANKSEL	_ANS4
000746   034e     CLR	0x4e                 	CLR	_ANS4
                                           ;	.line	26; "../Clock.c"	ANS5 =0;
000747   e101     MOVB	#0x01               	BANKSEL	_ANS5
000748   034a     CLR	0x4a                 	CLR	_ANS5
                                           ;	.line	27; "../Clock.c"	ANS6 =0;
                                           	BANKSEL	_ANS6
000749   034b     CLR	0x4b                 	CLR	_ANS6
                                           ;	.line	28; "../Clock.c"	ANS7 =0;
                                           	BANKSEL	_ANS7
00074a   034c     CLR	0x4c                 	CLR	_ANS7
                                           ;	.line	29; "../Clock.c"	ANS9 =0;
                                           	BANKSEL	_ANS9
00074b   034e     CLR	0x4e                 	CLR	_ANS9
                                           ;	.line	30; "../Clock.c"	ANSA =0;
00074c   e104     MOVB	#0x04               	BANKSEL	_ANSA
00074d   0328     CLR	0x28                 	CLR	_ANSA
                                           ;	.line	31; "../Clock.c"	ANSB =0;
                                           	BANKSEL	_ANSB
00074e   032d     CLR	0x2d                 	CLR	_ANSB
                                           ;	.line	32; "../Clock.c"	TR0 = 0xFF;	TR1	= 0;	TR2	= 0;	TR3 = 0;
00074f   98ff     MOV	R0, #0xff            	MOV	R0,# 0xff
000750   e100     MOVB	#0x00               	BANKSEL	_TR0
000751   5125     MOV	0x25, R0             	MOV	_TR0, R0
                                           	BANKSEL	_TR1
000752   0327     CLR	0x27                 	CLR	_TR1
                                           	BANKSEL	_TR2
000753   0326     CLR	0x26                 	CLR	_TR2
                                           	BANKSEL	_TR3
000754   0328     CLR	0x28                 	CLR	_TR3
                                           ;	.line	33; "../Clock.c"	TR4 = 0;	TR5 = 0;	TR6 = 0;	TR7 = 0;
                                           	BANKSEL	_TR4
000755   0329     CLR	0x29                 	CLR	_TR4
000756   e101     MOVB	#0x01               	BANKSEL	_TR5
000757   0325     CLR	0x25                 	CLR	_TR5
                                           	BANKSEL	_TR6
000758   0326     CLR	0x26                 	CLR	_TR6
                                           	BANKSEL	_TR7
000759   0327     CLR	0x27                 	CLR	_TR7
                                           ;	.line	34; "../Clock.c"	TR9 = 0;	TRA = 0;	TRB = 0;
                                           	BANKSEL	_TR9
00075a   0329     CLR	0x29                 	CLR	_TR9
00075b   e104     MOVB	#0x04               	BANKSEL	_TRA
00075c   0326     CLR	0x26                 	CLR	_TRA
                                           	BANKSEL	_TRB
00075d   032b     CLR	0x2b                 	CLR	_TRB
00075e   0008     CRET                     	CRET	
                                           func._delay_ms	.code
                                           _delay_ms	;Function start
                                           ;	.line	3; "../Clock.c"	void delay_ms(uint16 num)
00075f   e100     MOVB	#0x00               	BANKSEL	r0x1000
000760   51a2     MOV	0xa2, R0             	MOV	r0x1000, R0
                                           	BANKSEL	STK00
000761   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1001
000762   51a3     MOV	0xa3, R0             	MOV	r0x1001, R0
                                           ;	.line	6; "../Clock.c"	for(i=0;i<num;i++)
                                           	BANKSEL	r0x1002
000763   03a1     CLR	0xa1                 	CLR	r0x1002
                                           	BANKSEL	r0x1003
000764   03a0     CLR	0xa0                 	CLR	r0x1003
                                           _00004_DS_
                                           	BANKSEL	r0x1000
000765   0ea2     MOVZ	R0, 0xa2            	MOVZ	R0, r0x1000
                                           	BANKSEL	r0x1003
000766   38a0     SUB	R0, 0xa0             	SUB	R0, r0x1003
000767   7a03     JB	0x3, 2                	JB	PSW, 2
000768   c76b     JMP	#0x76b               	JMP	_00016_DS_
                                           	BANKSEL	r0x1001
000769   0ea3     MOVZ	R0, 0xa3            	MOVZ	R0, r0x1001
                                           	BANKSEL	r0x1002
00076a   38a1     SUB	R0, 0xa1             	SUB	R0, r0x1002
                                           _00016_DS_
00076b   7003     JNB	0x3, 0               	JNB	PSW, 0
00076c   c784     JMP	#0x784               	JMP	_00008_DS_
00076d   0064     CWDT                     	CWDT 
                                           ;	.line	10; "../Clock.c"	while(j--);
00076e   98e8     MOV	R0, #0xe8            	MOV	R0,# 0xe8
                                           	BANKSEL	r0x1004
00076f   519f     MOV	0x9f, R0             	MOV	r0x1004, R0
000770   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	r0x1005
000771   519e     MOV	0x9e, R0             	MOV	r0x1005, R0
                                           _00001_DS_
                                           	BANKSEL	r0x1004
000772   0e9f     MOVZ	R0, 0x9f            	MOVZ	R0, r0x1004
                                           	BANKSEL	r0x1006
000773   519d     MOV	0x9d, R0             	MOV	r0x1006, R0
                                           	BANKSEL	r0x1005
000774   0e9e     MOVZ	R0, 0x9e            	MOVZ	R0, r0x1005
                                           	BANKSEL	r0x1007
000775   519c     MOV	0x9c, R0             	MOV	r0x1007, R0
000776   98ff     MOV	R0, #0xff            	MOV	R0,# 0xff
                                           	BANKSEL	r0x1004
000777   219f     ADD	0x9f, R0             	ADD	r0x1004, R0
000778   7003     JNB	0x3, 0               	JNB	PSW, 0
000779   c77b     JMP	#0x77b               	JMP	_00019_DS_
                                           	BANKSEL	r0x1005
00077a   079e     DEC	0x9e                 	DEC	r0x1005
                                           _00019_DS_
                                           	BANKSEL	r0x1006
00077b   0e9d     MOVZ	R0, 0x9d            	MOVZ	R0, r0x1006
                                           	BANKSEL	r0x1007
00077c   309c     ORL	R0, 0x9c             	ORL	R0, r0x1007
00077d   7a03     JB	0x3, 2                	JB	PSW, 2
00077e   c772     JMP	#0x772               	JMP	_00001_DS_
                                           ;	.line	6; "../Clock.c"	for(i=0;i<num;i++)
                                           	BANKSEL	r0x1002
00077f   0ba1     INC	0xa1                 	INC	r0x1002
000780   7a03     JB	0x3, 2                	JB	PSW, 2
000781   c783     JMP	#0x783               	JMP	_00020_DS_
                                           	BANKSEL	r0x1003
000782   0ba0     INC	0xa0                 	INC	r0x1003
                                           _00020_DS_
000783   c765     JMP	#0x765               	JMP	_00004_DS_
                                           _00008_DS_
000784   0008     CRET                     	CRET	
                                           	.end
                                           	.radix dec
                                           	.include "KF8A100GQP.inc"
                                           ID_KEY_0	.code
                                           _dif
                                           	RRET R0, #0x01
                                           func._keyr_detection	.code
                                           _keyr_detection	;Function start
                                           ;	.line	263; "../KEY.c"	Right_Keyboader_value =currentkeyleft();
00063d   9f04     MOV	R7, #0x4             	TRAPPC1	_currentkeyleft
00063e   5f73     MOV	0x73, R7             	TRAPPC2	_currentkeyleft
00063f   e004     MOVP	#0x04               	PAGESEL	_currentkeyleft
000640   d4c3     CALL	#0x4c3              	CALL	_currentkeyleft
000641   9f06     MOV	R7, #0x6             	TRAPPC1	$+2
000642   5f73     MOV	0x73, R7             	TRAPPC2	$+1
000643   e006     MOVP	#0x06               	PAGESEL	$
                                           	BANKSEL	STK00
000644   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
000645   e100     MOVB	#0x00               	BANKSEL	_Right_Keyboader_value
000646   519a     MOV	0x9a, R0             	MOV	_Right_Keyboader_value, R0
                                           ;	.line	264; "../KEY.c"	if(Right_Keyboader_value != Right_Keyboader_value_o)
                                           	BANKSEL	_Right_Keyboader_value_o
000647   0e98     MOVZ	R0, 0x98            	MOVZ	R0, _Right_Keyboader_value_o
                                           ;	.line	265; "../KEY.c"	Right_key_count =0;
                                           	BANKSEL	_Right_Keyboader_value
000648   189a     XOR	R0, 0x9a             	XOR	R0, _Right_Keyboader_value
000649   7203     JNB	0x3, 2               	JNB	PSW, 2
00064a   c650     JMP	#0x650               	JMP	_00217_DS_
                                           	BANKSEL	_Right_key_count
00064b   03cf     CLR	0xcf                 	CLR	_Right_key_count
                                           	BANKSEL	_Right_key_count
00064c   03d0     CLR	0xd0                 	CLR	(_Right_key_count + 1)
                                           	BANKSEL	_Right_key_count
00064d   03d1     CLR	0xd1                 	CLR	(_Right_key_count + 2)
                                           	BANKSEL	_Right_key_count
00064e   03d2     CLR	0xd2                 	CLR	(_Right_key_count + 3)
00064f   c66a     JMP	#0x66a               	JMP	_00227_DS_
                                           _00217_DS_
                                           ;	.line	268; "../KEY.c"	if(Right_key_count <120000) //键值长期不变的情况下，阻止计数值溢出
000650   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	_Right_key_count
000651   38d2     SUB	R0, 0xd2             	SUB	R0, (_Right_key_count + 3)
000652   7a03     JB	0x3, 2                	JB	PSW, 2
000653   c65e     JMP	#0x65e               	JMP	_00224_DS_
000654   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	_Right_key_count
000655   38d1     SUB	R0, 0xd1             	SUB	R0, (_Right_key_count + 2)
000656   7a03     JB	0x3, 2                	JB	PSW, 2
000657   c65e     JMP	#0x65e               	JMP	_00224_DS_
000658   98d4     MOV	R0, #0xd4            	MOV	R0,# 0xd4
                                           	BANKSEL	_Right_key_count
000659   38d0     SUB	R0, 0xd0             	SUB	R0, (_Right_key_count + 1)
00065a   7a03     JB	0x3, 2                	JB	PSW, 2
00065b   c65e     JMP	#0x65e               	JMP	_00224_DS_
00065c   98c0     MOV	R0, #0xc0            	MOV	R0,# 0xc0
                                           	BANKSEL	_Right_key_count
00065d   38cf     SUB	R0, 0xcf             	SUB	R0, _Right_key_count
                                           _00224_DS_
00065e   7003     JNB	0x3, 0               	JNB	PSW, 0
00065f   c66a     JMP	#0x66a               	JMP	_00227_DS_
                                           ;	.line	270; "../KEY.c"	Right_key_count ++;
                                           	BANKSEL	_Right_key_count
000660   0bcf     INC	0xcf                 	INC	_Right_key_count
000661   7a03     JB	0x3, 2                	JB	PSW, 2
000662   c664     JMP	#0x664               	JMP	_00225_DS_
                                           	BANKSEL	_Right_key_count
000663   0bd0     INC	0xd0                 	INC	(_Right_key_count + 1)
                                           _00225_DS_
000664   7a03     JB	0x3, 2                	JB	PSW, 2
000665   c667     JMP	#0x667               	JMP	_00226_DS_
                                           	BANKSEL	_Right_key_count
000666   0bd1     INC	0xd1                 	INC	(_Right_key_count + 2)
                                           _00226_DS_
000667   7a03     JB	0x3, 2                	JB	PSW, 2
000668   c66a     JMP	#0x66a               	JMP	_00227_DS_
                                           	BANKSEL	_Right_key_count
000669   0bd2     INC	0xd2                 	INC	(_Right_key_count + 3)
                                           _00227_DS_
                                           ;	.line	272; "../KEY.c"	KeyToCanvalue1(Right_Keyboader_value,Right_key_count);
                                           	BANKSEL	_Right_key_count
00066a   0ecf     MOVZ	R0, 0xcf            	MOVZ	R0, _Right_key_count
                                           	BANKSEL	STK03
00066b   517b     MOV	0x7b, R0             	MOV	STK03, R0
                                           	BANKSEL	_Right_key_count
00066c   0ed0     MOVZ	R0, 0xd0            	MOVZ	R0, (_Right_key_count + 1)
                                           	BANKSEL	STK02
00066d   517c     MOV	0x7c, R0             	MOV	STK02, R0
                                           	BANKSEL	_Right_key_count
00066e   0ed1     MOVZ	R0, 0xd1            	MOVZ	R0, (_Right_key_count + 2)
                                           	BANKSEL	STK01
00066f   517d     MOV	0x7d, R0             	MOV	STK01, R0
                                           	BANKSEL	_Right_key_count
000670   0ed2     MOVZ	R0, 0xd2            	MOVZ	R0, (_Right_key_count + 3)
                                           	BANKSEL	STK00
000671   517e     MOV	0x7e, R0             	MOV	STK00, R0
                                           	BANKSEL	_Right_Keyboader_value
000672   0e9a     MOVZ	R0, 0x9a            	MOVZ	R0, _Right_Keyboader_value
000673   9f02     MOV	R7, #0x2             	TRAPPC1	_KeyToCanvalue1
000674   5f73     MOV	0x73, R7             	TRAPPC2	_KeyToCanvalue1
000675   e002     MOVP	#0x02               	PAGESEL	_KeyToCanvalue1
000676   d2e9     CALL	#0x2e9              	CALL	_KeyToCanvalue1
000677   9f06     MOV	R7, #0x6             	TRAPPC1	$+2
000678   5f73     MOV	0x73, R7             	TRAPPC2	$+1
000679   e006     MOVP	#0x06               	PAGESEL	$
                                           ;	.line	273; "../KEY.c"	Right_key_count_o =Right_key_count;
00067a   e100     MOVB	#0x00               	BANKSEL	_Right_key_count
00067b   0ecf     MOVZ	R0, 0xcf            	MOVZ	R0, _Right_key_count
                                           	BANKSEL	_Right_key_count_o
00067c   51cb     MOV	0xcb, R0             	MOV	_Right_key_count_o, R0
                                           	BANKSEL	_Right_key_count
00067d   0ed0     MOVZ	R0, 0xd0            	MOVZ	R0, (_Right_key_count + 1)
                                           	BANKSEL	_Right_key_count_o
00067e   51cc     MOV	0xcc, R0             	MOV	(_Right_key_count_o + 1), R0
                                           ;	.line	274; "../KEY.c"	Right_Keyboader_value_o =Right_Keyboader_value;;
                                           	BANKSEL	_Right_Keyboader_value
00067f   0e9a     MOVZ	R0, 0x9a            	MOVZ	R0, _Right_Keyboader_value
                                           	BANKSEL	_Right_Keyboader_value_o
000680   5198     MOV	0x98, R0             	MOV	_Right_Keyboader_value_o, R0
000681   0008     CRET                     	CRET	
                                           func._keyl_detection	.code
                                           _keyl_detection	;Function start
                                           ;	.line	247; "../KEY.c"	Left_Keyboader_value =currentkey();
000682   9f05     MOV	R7, #0x5             	TRAPPC1	_currentkey
000683   5f73     MOV	0x73, R7             	TRAPPC2	_currentkey
000684   e005     MOVP	#0x05               	PAGESEL	_currentkey
000685   d539     CALL	#0x539              	CALL	_currentkey
000686   9f06     MOV	R7, #0x6             	TRAPPC1	$+2
000687   5f73     MOV	0x73, R7             	TRAPPC2	$+1
000688   e006     MOVP	#0x06               	PAGESEL	$
                                           	BANKSEL	STK00
000689   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
00068a   e100     MOVB	#0x00               	BANKSEL	_Left_Keyboader_value
00068b   519b     MOV	0x9b, R0             	MOV	_Left_Keyboader_value, R0
                                           ;	.line	248; "../KEY.c"	if(Left_Keyboader_value != Left_Keyboader_value_o)
                                           	BANKSEL	_Left_Keyboader_value_o
00068c   0e99     MOVZ	R0, 0x99            	MOVZ	R0, _Left_Keyboader_value_o
                                           ;	.line	249; "../KEY.c"	Left_key_count =0;
                                           	BANKSEL	_Left_Keyboader_value
00068d   189b     XOR	R0, 0x9b             	XOR	R0, _Left_Keyboader_value
00068e   7203     JNB	0x3, 2               	JNB	PSW, 2
00068f   c695     JMP	#0x695               	JMP	_00206_DS_
                                           	BANKSEL	_Left_key_count
000690   03d3     CLR	0xd3                 	CLR	_Left_key_count
                                           	BANKSEL	_Left_key_count
000691   03d4     CLR	0xd4                 	CLR	(_Left_key_count + 1)
                                           	BANKSEL	_Left_key_count
000692   03d5     CLR	0xd5                 	CLR	(_Left_key_count + 2)
                                           	BANKSEL	_Left_key_count
000693   03d6     CLR	0xd6                 	CLR	(_Left_key_count + 3)
000694   c6af     JMP	#0x6af               	JMP	_00230_DS_
                                           _00206_DS_
                                           ;	.line	252; "../KEY.c"	if(Left_key_count <120000) //键值长期不变的情况下，阻止计数值溢出
000695   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	_Left_key_count
000696   38d6     SUB	R0, 0xd6             	SUB	R0, (_Left_key_count + 3)
000697   7a03     JB	0x3, 2                	JB	PSW, 2
000698   c6a3     JMP	#0x6a3               	JMP	_00213_DS_
000699   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	_Left_key_count
00069a   38d5     SUB	R0, 0xd5             	SUB	R0, (_Left_key_count + 2)
00069b   7a03     JB	0x3, 2                	JB	PSW, 2
00069c   c6a3     JMP	#0x6a3               	JMP	_00213_DS_
00069d   98d4     MOV	R0, #0xd4            	MOV	R0,# 0xd4
                                           	BANKSEL	_Left_key_count
00069e   38d4     SUB	R0, 0xd4             	SUB	R0, (_Left_key_count + 1)
00069f   7a03     JB	0x3, 2                	JB	PSW, 2
0006a0   c6a3     JMP	#0x6a3               	JMP	_00213_DS_
0006a1   98c0     MOV	R0, #0xc0            	MOV	R0,# 0xc0
                                           	BANKSEL	_Left_key_count
0006a2   38d3     SUB	R0, 0xd3             	SUB	R0, _Left_key_count
                                           _00213_DS_
0006a3   7003     JNB	0x3, 0               	JNB	PSW, 0
0006a4   c6af     JMP	#0x6af               	JMP	_00230_DS_
                                           ;	.line	253; "../KEY.c"	Left_key_count ++;
                                           	BANKSEL	_Left_key_count
0006a5   0bd3     INC	0xd3                 	INC	_Left_key_count
0006a6   7a03     JB	0x3, 2                	JB	PSW, 2
0006a7   c6a9     JMP	#0x6a9               	JMP	_00228_DS_
                                           	BANKSEL	_Left_key_count
0006a8   0bd4     INC	0xd4                 	INC	(_Left_key_count + 1)
                                           _00228_DS_
0006a9   7a03     JB	0x3, 2                	JB	PSW, 2
0006aa   c6ac     JMP	#0x6ac               	JMP	_00229_DS_
                                           	BANKSEL	_Left_key_count
0006ab   0bd5     INC	0xd5                 	INC	(_Left_key_count + 2)
                                           _00229_DS_
0006ac   7a03     JB	0x3, 2                	JB	PSW, 2
0006ad   c6af     JMP	#0x6af               	JMP	_00230_DS_
                                           	BANKSEL	_Left_key_count
0006ae   0bd6     INC	0xd6                 	INC	(_Left_key_count + 3)
                                           _00230_DS_
                                           ;	.line	255; "../KEY.c"	KeyToCanvalue(Left_Keyboader_value,Left_key_count);
                                           	BANKSEL	_Left_key_count
0006af   0ed3     MOVZ	R0, 0xd3            	MOVZ	R0, _Left_key_count
                                           	BANKSEL	STK03
0006b0   517b     MOV	0x7b, R0             	MOV	STK03, R0
                                           	BANKSEL	_Left_key_count
0006b1   0ed4     MOVZ	R0, 0xd4            	MOVZ	R0, (_Left_key_count + 1)
                                           	BANKSEL	STK02
0006b2   517c     MOV	0x7c, R0             	MOV	STK02, R0
                                           	BANKSEL	_Left_key_count
0006b3   0ed5     MOVZ	R0, 0xd5            	MOVZ	R0, (_Left_key_count + 2)
                                           	BANKSEL	STK01
0006b4   517d     MOV	0x7d, R0             	MOV	STK01, R0
                                           	BANKSEL	_Left_key_count
0006b5   0ed6     MOVZ	R0, 0xd6            	MOVZ	R0, (_Left_key_count + 3)
                                           	BANKSEL	STK00
0006b6   517e     MOV	0x7e, R0             	MOV	STK00, R0
                                           	BANKSEL	_Left_Keyboader_value
0006b7   0e9b     MOVZ	R0, 0x9b            	MOVZ	R0, _Left_Keyboader_value
0006b8   9f03     MOV	R7, #0x3             	TRAPPC1	_KeyToCanvalue
0006b9   5f73     MOV	0x73, R7             	TRAPPC2	_KeyToCanvalue
0006ba   e003     MOVP	#0x03               	PAGESEL	_KeyToCanvalue
0006bb   d3d6     CALL	#0x3d6              	CALL	_KeyToCanvalue
0006bc   9f06     MOV	R7, #0x6             	TRAPPC1	$+2
0006bd   5f73     MOV	0x73, R7             	TRAPPC2	$+1
0006be   e006     MOVP	#0x06               	PAGESEL	$
                                           ;	.line	256; "../KEY.c"	Left_key_count_o = Left_key_count;
0006bf   e100     MOVB	#0x00               	BANKSEL	_Left_key_count
0006c0   0ed3     MOVZ	R0, 0xd3            	MOVZ	R0, _Left_key_count
                                           	BANKSEL	_Left_key_count_o
0006c1   51cd     MOV	0xcd, R0             	MOV	_Left_key_count_o, R0
                                           	BANKSEL	_Left_key_count
0006c2   0ed4     MOVZ	R0, 0xd4            	MOVZ	R0, (_Left_key_count + 1)
                                           	BANKSEL	_Left_key_count_o
0006c3   51ce     MOV	0xce, R0             	MOV	(_Left_key_count_o + 1), R0
                                           ;	.line	257; "../KEY.c"	Left_Keyboader_value_o =Left_Keyboader_value;
                                           	BANKSEL	_Left_Keyboader_value
0006c4   0e9b     MOVZ	R0, 0x9b            	MOVZ	R0, _Left_Keyboader_value
                                           	BANKSEL	_Left_Keyboader_value_o
0006c5   5199     MOV	0x99, R0             	MOV	_Left_Keyboader_value_o, R0
0006c6   0008     CRET                     	CRET	
                                           func._KeyToCanvalue1	.code
                                           _KeyToCanvalue1	;Function start
                                           ;	.line	179; "../KEY.c"	void KeyToCanvalue1(unsigned char keyvalue1, unsigned long int keycnt1)
0002e9   e100     MOVB	#0x00               	BANKSEL	r0x1018
0002ea   5193     MOV	0x93, R0             	MOV	r0x1018, R0
                                           	BANKSEL	STK00
0002eb   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1019
0002ec   5194     MOV	0x94, R0             	MOV	r0x1019, R0
                                           	BANKSEL	STK01
0002ed   0e7d     MOVZ	R0, 0x7d            	MOVZ	R0, STK01
                                           	BANKSEL	r0x101A
0002ee   5192     MOV	0x92, R0             	MOV	r0x101A, R0
                                           	BANKSEL	STK02
0002ef   0e7c     MOVZ	R0, 0x7c            	MOVZ	R0, STK02
                                           	BANKSEL	r0x101B
0002f0   518d     MOV	0x8d, R0             	MOV	r0x101B, R0
                                           	BANKSEL	STK03
0002f1   0e7b     MOVZ	R0, 0x7b            	MOVZ	R0, STK03
                                           	BANKSEL	r0x101C
0002f2   518e     MOV	0x8e, R0             	MOV	r0x101C, R0
                                           ;	.line	181; "../KEY.c"	switch(keyvalue1)
0002f3   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	r0x1018
0002f4   3893     SUB	R0, 0x93             	SUB	R0, r0x1018
0002f5   7803     JB	0x3, 0                	JB	PSW, 0
0002f6   c3c2     JMP	#0x3c2               	JMP	_00171_DS_
0002f7   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	r0x1018
0002f8   3893     SUB	R0, 0x93             	SUB	R0, r0x1018
0002f9   7003     JNB	0x3, 0               	JNB	PSW, 0
0002fa   c3c2     JMP	#0x3c2               	JMP	_00171_DS_
                                           	BANKSEL	r0x1018
0002fb   0693     DECR	0x93                	DECR	r0x1018
                                           	BANKSEL	r0x101D
0002fc   518c     MOV	0x8c, R0             	MOV	r0x101D, R0
0002fd   9903     MOV	R1, #0x3             	MOV	R1,#high _00192_DS_
0002fe   9805     MOV	R0, #0x5             	MOV	R0,#_00192_DS_
                                           	BANKSEL	r0x101D
0002ff   208c     ADD	R0, 0x8c             	ADD	R0, r0x101D
000300   7003     JNB	0x3, 0               	JNB	PSW, 0
000301   ff11     INC	R1                   	INC	R1
000302   5373     MOV	0x73, R1             	TRAPPC3	$
000303   530a     MOV	0xa, R1              	MOV	PCH, R1
000304   5102     MOV	0x2, R0              	MOV	PCL, R0
                                           _00192_DS_
000305   c30a     JMP	#0x30a               	JMP	_00141_DS_
000306   c32f     JMP	#0x32f               	JMP	_00147_DS_
000307   c354     JMP	#0x354               	JMP	_00153_DS_
000308   c379     JMP	#0x379               	JMP	_00159_DS_
000309   c39e     JMP	#0x39e               	JMP	_00165_DS_
                                           _00141_DS_
                                           ;	.line	184; "../KEY.c"	if(keycnt1>100000)//连续5次检测结果保持同一键值，确认按键为短按
00030a   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1019
00030b   3894     SUB	R0, 0x94             	SUB	R0, r0x1019
00030c   7a03     JB	0x3, 2                	JB	PSW, 2
00030d   c318     JMP	#0x318               	JMP	_00193_DS_
00030e   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	r0x101A
00030f   3892     SUB	R0, 0x92             	SUB	R0, r0x101A
000310   7a03     JB	0x3, 2                	JB	PSW, 2
000311   c318     JMP	#0x318               	JMP	_00193_DS_
000312   9886     MOV	R0, #0x86            	MOV	R0,# 0x86
                                           	BANKSEL	r0x101B
000313   388d     SUB	R0, 0x8d             	SUB	R0, r0x101B
000314   7a03     JB	0x3, 2                	JB	PSW, 2
000315   c318     JMP	#0x318               	JMP	_00193_DS_
000316   98a1     MOV	R0, #0xa1            	MOV	R0,# 0xa1
                                           	BANKSEL	r0x101C
000317   388e     SUB	R0, 0x8e             	SUB	R0, r0x101C
                                           _00193_DS_
000318   7803     JB	0x3, 0                	JB	PSW, 0
000319   c31c     JMP	#0x31c               	JMP	_00145_DS_
                                           ;	.line	186; "../KEY.c"	TX_Data[0]=0x00;
                                           	BANKSEL	_TX_Data
00031a   03e4     CLR	0xe4                 	CLR	 (_TX_Data + 0)
00031b   c3c2     JMP	#0x3c2               	JMP	_00171_DS_
                                           _00145_DS_
                                           ;	.line	188; "../KEY.c"	else if(keycnt1>5)
00031c   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1019
00031d   3894     SUB	R0, 0x94             	SUB	R0, r0x1019
00031e   7a03     JB	0x3, 2                	JB	PSW, 2
00031f   c32a     JMP	#0x32a               	JMP	_00194_DS_
000320   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x101A
000321   3892     SUB	R0, 0x92             	SUB	R0, r0x101A
000322   7a03     JB	0x3, 2                	JB	PSW, 2
000323   c32a     JMP	#0x32a               	JMP	_00194_DS_
000324   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x101B
000325   388d     SUB	R0, 0x8d             	SUB	R0, r0x101B
000326   7a03     JB	0x3, 2                	JB	PSW, 2
000327   c32a     JMP	#0x32a               	JMP	_00194_DS_
000328   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	r0x101C
000329   388e     SUB	R0, 0x8e             	SUB	R0, r0x101C
                                           _00194_DS_
00032a   7803     JB	0x3, 0                	JB	PSW, 0
00032b   c3c2     JMP	#0x3c2               	JMP	_00171_DS_
                                           ;	.line	190; "../KEY.c"	TX_Data[0]=0x02;//挂断
00032c   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
                                           	BANKSEL	_TX_Data
00032d   51e4     MOV	0xe4, R0             	MOV	 (_TX_Data + 0), R0
                                           ;	.line	192; "../KEY.c"	break;
00032e   c3c2     JMP	#0x3c2               	JMP	_00171_DS_
                                           _00147_DS_
                                           ;	.line	194; "../KEY.c"	if(keycnt1>100000)
00032f   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1019
000330   3894     SUB	R0, 0x94             	SUB	R0, r0x1019
000331   7a03     JB	0x3, 2                	JB	PSW, 2
000332   c33d     JMP	#0x33d               	JMP	_00195_DS_
000333   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	r0x101A
000334   3892     SUB	R0, 0x92             	SUB	R0, r0x101A
000335   7a03     JB	0x3, 2                	JB	PSW, 2
000336   c33d     JMP	#0x33d               	JMP	_00195_DS_
000337   9886     MOV	R0, #0x86            	MOV	R0,# 0x86
                                           	BANKSEL	r0x101B
000338   388d     SUB	R0, 0x8d             	SUB	R0, r0x101B
000339   7a03     JB	0x3, 2                	JB	PSW, 2
00033a   c33d     JMP	#0x33d               	JMP	_00195_DS_
00033b   98a1     MOV	R0, #0xa1            	MOV	R0,# 0xa1
                                           	BANKSEL	r0x101C
00033c   388e     SUB	R0, 0x8e             	SUB	R0, r0x101C
                                           _00195_DS_
00033d   7803     JB	0x3, 0                	JB	PSW, 0
00033e   c341     JMP	#0x341               	JMP	_00151_DS_
                                           ;	.line	196; "../KEY.c"	TX_Data[0]=0x00;
                                           	BANKSEL	_TX_Data
00033f   03e4     CLR	0xe4                 	CLR	 (_TX_Data + 0)
000340   c3c2     JMP	#0x3c2               	JMP	_00171_DS_
                                           _00151_DS_
                                           ;	.line	198; "../KEY.c"	else if(keycnt1>5)
000341   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1019
000342   3894     SUB	R0, 0x94             	SUB	R0, r0x1019
000343   7a03     JB	0x3, 2                	JB	PSW, 2
000344   c34f     JMP	#0x34f               	JMP	_00196_DS_
000345   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x101A
000346   3892     SUB	R0, 0x92             	SUB	R0, r0x101A
000347   7a03     JB	0x3, 2                	JB	PSW, 2
000348   c34f     JMP	#0x34f               	JMP	_00196_DS_
000349   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x101B
00034a   388d     SUB	R0, 0x8d             	SUB	R0, r0x101B
00034b   7a03     JB	0x3, 2                	JB	PSW, 2
00034c   c34f     JMP	#0x34f               	JMP	_00196_DS_
00034d   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	r0x101C
00034e   388e     SUB	R0, 0x8e             	SUB	R0, r0x101C
                                           _00196_DS_
00034f   7803     JB	0x3, 0                	JB	PSW, 0
000350   c3c2     JMP	#0x3c2               	JMP	_00171_DS_
                                           ;	.line	200; "../KEY.c"	TX_Data[0]=0x10;//音量-
000351   9810     MOV	R0, #0x10            	MOV	R0,# 0x10
                                           	BANKSEL	_TX_Data
000352   51e4     MOV	0xe4, R0             	MOV	 (_TX_Data + 0), R0
                                           ;	.line	202; "../KEY.c"	break;
000353   c3c2     JMP	#0x3c2               	JMP	_00171_DS_
                                           _00153_DS_
                                           ;	.line	204; "../KEY.c"	if(keycnt1>100000)
000354   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1019
000355   3894     SUB	R0, 0x94             	SUB	R0, r0x1019
000356   7a03     JB	0x3, 2                	JB	PSW, 2
000357   c362     JMP	#0x362               	JMP	_00197_DS_
000358   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	r0x101A
000359   3892     SUB	R0, 0x92             	SUB	R0, r0x101A
00035a   7a03     JB	0x3, 2                	JB	PSW, 2
00035b   c362     JMP	#0x362               	JMP	_00197_DS_
00035c   9886     MOV	R0, #0x86            	MOV	R0,# 0x86
                                           	BANKSEL	r0x101B
00035d   388d     SUB	R0, 0x8d             	SUB	R0, r0x101B
00035e   7a03     JB	0x3, 2                	JB	PSW, 2
00035f   c362     JMP	#0x362               	JMP	_00197_DS_
000360   98a1     MOV	R0, #0xa1            	MOV	R0,# 0xa1
                                           	BANKSEL	r0x101C
000361   388e     SUB	R0, 0x8e             	SUB	R0, r0x101C
                                           _00197_DS_
000362   7803     JB	0x3, 0                	JB	PSW, 0
000363   c366     JMP	#0x366               	JMP	_00157_DS_
                                           ;	.line	206; "../KEY.c"	TX_Data[1]=0x00;
                                           	BANKSEL	_TX_Data
000364   03e5     CLR	0xe5                 	CLR	 (_TX_Data + 1)
000365   c3c2     JMP	#0x3c2               	JMP	_00171_DS_
                                           _00157_DS_
                                           ;	.line	208; "../KEY.c"	else if(keycnt1>5)
000366   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1019
000367   3894     SUB	R0, 0x94             	SUB	R0, r0x1019
000368   7a03     JB	0x3, 2                	JB	PSW, 2
000369   c374     JMP	#0x374               	JMP	_00198_DS_
00036a   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x101A
00036b   3892     SUB	R0, 0x92             	SUB	R0, r0x101A
00036c   7a03     JB	0x3, 2                	JB	PSW, 2
00036d   c374     JMP	#0x374               	JMP	_00198_DS_
00036e   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x101B
00036f   388d     SUB	R0, 0x8d             	SUB	R0, r0x101B
000370   7a03     JB	0x3, 2                	JB	PSW, 2
000371   c374     JMP	#0x374               	JMP	_00198_DS_
000372   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	r0x101C
000373   388e     SUB	R0, 0x8e             	SUB	R0, r0x101C
                                           _00198_DS_
000374   7803     JB	0x3, 0                	JB	PSW, 0
000375   c3c2     JMP	#0x3c2               	JMP	_00171_DS_
                                           ;	.line	210; "../KEY.c"	TX_Data[0]=0x08;//静音
000376   9808     MOV	R0, #0x8             	MOV	R0,# 0x08
                                           	BANKSEL	_TX_Data
000377   51e4     MOV	0xe4, R0             	MOV	 (_TX_Data + 0), R0
                                           ;	.line	212; "../KEY.c"	break;
000378   c3c2     JMP	#0x3c2               	JMP	_00171_DS_
                                           _00159_DS_
                                           ;	.line	214; "../KEY.c"	if(keycnt1>100000)
000379   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1019
00037a   3894     SUB	R0, 0x94             	SUB	R0, r0x1019
00037b   7a03     JB	0x3, 2                	JB	PSW, 2
00037c   c387     JMP	#0x387               	JMP	_00199_DS_
00037d   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	r0x101A
00037e   3892     SUB	R0, 0x92             	SUB	R0, r0x101A
00037f   7a03     JB	0x3, 2                	JB	PSW, 2
000380   c387     JMP	#0x387               	JMP	_00199_DS_
000381   9886     MOV	R0, #0x86            	MOV	R0,# 0x86
                                           	BANKSEL	r0x101B
000382   388d     SUB	R0, 0x8d             	SUB	R0, r0x101B
000383   7a03     JB	0x3, 2                	JB	PSW, 2
000384   c387     JMP	#0x387               	JMP	_00199_DS_
000385   98a1     MOV	R0, #0xa1            	MOV	R0,# 0xa1
                                           	BANKSEL	r0x101C
000386   388e     SUB	R0, 0x8e             	SUB	R0, r0x101C
                                           _00199_DS_
000387   7803     JB	0x3, 0                	JB	PSW, 0
000388   c38b     JMP	#0x38b               	JMP	_00163_DS_
                                           ;	.line	216; "../KEY.c"	TX_Data[0]=0x00;
                                           	BANKSEL	_TX_Data
000389   03e4     CLR	0xe4                 	CLR	 (_TX_Data + 0)
00038a   c3c2     JMP	#0x3c2               	JMP	_00171_DS_
                                           _00163_DS_
                                           ;	.line	218; "../KEY.c"	else if(keycnt1>5)
00038b   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1019
00038c   3894     SUB	R0, 0x94             	SUB	R0, r0x1019
00038d   7a03     JB	0x3, 2                	JB	PSW, 2
00038e   c399     JMP	#0x399               	JMP	_00200_DS_
00038f   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x101A
000390   3892     SUB	R0, 0x92             	SUB	R0, r0x101A
000391   7a03     JB	0x3, 2                	JB	PSW, 2
000392   c399     JMP	#0x399               	JMP	_00200_DS_
000393   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x101B
000394   388d     SUB	R0, 0x8d             	SUB	R0, r0x101B
000395   7a03     JB	0x3, 2                	JB	PSW, 2
000396   c399     JMP	#0x399               	JMP	_00200_DS_
000397   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	r0x101C
000398   388e     SUB	R0, 0x8e             	SUB	R0, r0x101C
                                           _00200_DS_
000399   7803     JB	0x3, 0                	JB	PSW, 0
00039a   c3c2     JMP	#0x3c2               	JMP	_00171_DS_
                                           ;	.line	220; "../KEY.c"	TX_Data[0]=0x04;   //音量+
00039b   9804     MOV	R0, #0x4             	MOV	R0,# 0x04
                                           	BANKSEL	_TX_Data
00039c   51e4     MOV	0xe4, R0             	MOV	 (_TX_Data + 0), R0
                                           ;	.line	222; "../KEY.c"	break;
00039d   c3c2     JMP	#0x3c2               	JMP	_00171_DS_
                                           _00165_DS_
                                           ;	.line	224; "../KEY.c"	if(keycnt1>100000)
00039e   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1019
00039f   3894     SUB	R0, 0x94             	SUB	R0, r0x1019
0003a0   7a03     JB	0x3, 2                	JB	PSW, 2
0003a1   c3ac     JMP	#0x3ac               	JMP	_00201_DS_
0003a2   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	r0x101A
0003a3   3892     SUB	R0, 0x92             	SUB	R0, r0x101A
0003a4   7a03     JB	0x3, 2                	JB	PSW, 2
0003a5   c3ac     JMP	#0x3ac               	JMP	_00201_DS_
0003a6   9886     MOV	R0, #0x86            	MOV	R0,# 0x86
                                           	BANKSEL	r0x101B
0003a7   388d     SUB	R0, 0x8d             	SUB	R0, r0x101B
0003a8   7a03     JB	0x3, 2                	JB	PSW, 2
0003a9   c3ac     JMP	#0x3ac               	JMP	_00201_DS_
0003aa   98a1     MOV	R0, #0xa1            	MOV	R0,# 0xa1
                                           	BANKSEL	r0x101C
0003ab   388e     SUB	R0, 0x8e             	SUB	R0, r0x101C
                                           _00201_DS_
0003ac   7803     JB	0x3, 0                	JB	PSW, 0
0003ad   c3b0     JMP	#0x3b0               	JMP	_00169_DS_
                                           ;	.line	226; "../KEY.c"	TX_Data[0]=0x00;
                                           	BANKSEL	_TX_Data
0003ae   03e4     CLR	0xe4                 	CLR	 (_TX_Data + 0)
0003af   c3c2     JMP	#0x3c2               	JMP	_00171_DS_
                                           _00169_DS_
                                           ;	.line	228; "../KEY.c"	else if(keycnt1>5)
0003b0   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1019
0003b1   3894     SUB	R0, 0x94             	SUB	R0, r0x1019
0003b2   7a03     JB	0x3, 2                	JB	PSW, 2
0003b3   c3be     JMP	#0x3be               	JMP	_00202_DS_
0003b4   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x101A
0003b5   3892     SUB	R0, 0x92             	SUB	R0, r0x101A
0003b6   7a03     JB	0x3, 2                	JB	PSW, 2
0003b7   c3be     JMP	#0x3be               	JMP	_00202_DS_
0003b8   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x101B
0003b9   388d     SUB	R0, 0x8d             	SUB	R0, r0x101B
0003ba   7a03     JB	0x3, 2                	JB	PSW, 2
0003bb   c3be     JMP	#0x3be               	JMP	_00202_DS_
0003bc   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	r0x101C
0003bd   388e     SUB	R0, 0x8e             	SUB	R0, r0x101C
                                           _00202_DS_
0003be   7803     JB	0x3, 0                	JB	PSW, 0
0003bf   c3c2     JMP	#0x3c2               	JMP	_00171_DS_
                                           ;	.line	230; "../KEY.c"	TX_Data[0]=0x01;   //接听
0003c0   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	_TX_Data
0003c1   51e4     MOV	0xe4, R0             	MOV	 (_TX_Data + 0), R0
                                           _00171_DS_
                                           ;	.line	234; "../KEY.c"	if (keyvalue1 == 0U)
0003c2   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1018
0003c3   3093     ORL	R0, 0x93             	ORL	R0, r0x1018
0003c4   7a03     JB	0x3, 2                	JB	PSW, 2
0003c5   c3ce     JMP	#0x3ce               	JMP	_00173_DS_
                                           ;	.line	236; "../KEY.c"	Main_DataClean();
0003c6   9f07     MOV	R7, #0x7             	TRAPPC1	_Main_DataClean
0003c7   5f73     MOV	0x73, R7             	TRAPPC2	_Main_DataClean
0003c8   e007     MOVP	#0x07               	PAGESEL	_Main_DataClean
0003c9   d7e3     CALL	#0x7e3              	CALL	_Main_DataClean
0003ca   9f03     MOV	R7, #0x3             	TRAPPC1	$+2
0003cb   5f73     MOV	0x73, R7             	TRAPPC2	$+1
0003cc   e003     MOVP	#0x03               	PAGESEL	$
0003cd   c3d5     JMP	#0x3d5               	JMP	_00175_DS_
                                           _00173_DS_
                                           ;	.line	240; "../KEY.c"	Main_CleanTimeSet();
0003ce   9f08     MOV	R7, #0x8             	TRAPPC1	_Main_CleanTimeSet
0003cf   5f73     MOV	0x73, R7             	TRAPPC2	_Main_CleanTimeSet
0003d0   e008     MOVP	#0x08               	PAGESEL	_Main_CleanTimeSet
0003d1   d865     CALL	#0x865              	CALL	_Main_CleanTimeSet
0003d2   9f03     MOV	R7, #0x3             	TRAPPC1	$+2
0003d3   5f73     MOV	0x73, R7             	TRAPPC2	$+1
0003d4   e003     MOVP	#0x03               	PAGESEL	$
                                           _00175_DS_
0003d5   0008     CRET                     	CRET	
                                           func._KeyToCanvalue	.code
                                           _KeyToCanvalue	;Function start
                                           ;	.line	113; "../KEY.c"	void KeyToCanvalue(unsigned char keyvalue, unsigned long int keycnt)
0003d6   e100     MOVB	#0x00               	BANKSEL	r0x1020
0003d7   5196     MOV	0x96, R0             	MOV	r0x1020, R0
                                           	BANKSEL	STK00
0003d8   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1021
0003d9   5197     MOV	0x97, R0             	MOV	r0x1021, R0
                                           	BANKSEL	STK01
0003da   0e7d     MOVZ	R0, 0x7d            	MOVZ	R0, STK01
                                           	BANKSEL	r0x1022
0003db   5195     MOV	0x95, R0             	MOV	r0x1022, R0
                                           	BANKSEL	STK02
0003dc   0e7c     MOVZ	R0, 0x7c            	MOVZ	R0, STK02
                                           	BANKSEL	r0x1023
0003dd   5190     MOV	0x90, R0             	MOV	r0x1023, R0
                                           	BANKSEL	STK03
0003de   0e7b     MOVZ	R0, 0x7b            	MOVZ	R0, STK03
                                           	BANKSEL	r0x1024
0003df   5191     MOV	0x91, R0             	MOV	r0x1024, R0
                                           ;	.line	115; "../KEY.c"	switch(keyvalue)
0003e0   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	r0x1020
0003e1   3896     SUB	R0, 0x96             	SUB	R0, r0x1020
0003e2   7803     JB	0x3, 0                	JB	PSW, 0
0003e3   c4af     JMP	#0x4af               	JMP	_00109_DS_
0003e4   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	r0x1020
0003e5   3896     SUB	R0, 0x96             	SUB	R0, r0x1020
0003e6   7003     JNB	0x3, 0               	JNB	PSW, 0
0003e7   c4af     JMP	#0x4af               	JMP	_00109_DS_
                                           	BANKSEL	r0x1020
0003e8   0696     DECR	0x96                	DECR	r0x1020
                                           	BANKSEL	r0x1025
0003e9   518f     MOV	0x8f, R0             	MOV	r0x1025, R0
0003ea   9903     MOV	R1, #0x3             	MOV	R1,#high _00130_DS_
0003eb   98f2     MOV	R0, #0xf2            	MOV	R0,#_00130_DS_
                                           	BANKSEL	r0x1025
0003ec   208f     ADD	R0, 0x8f             	ADD	R0, r0x1025
0003ed   7003     JNB	0x3, 0               	JNB	PSW, 0
0003ee   ff11     INC	R1                   	INC	R1
0003ef   5373     MOV	0x73, R1             	TRAPPC3	$
0003f0   530a     MOV	0xa, R1              	MOV	PCH, R1
0003f1   5102     MOV	0x2, R0              	MOV	PCL, R0
                                           _00130_DS_
0003f2   c3f7     JMP	#0x3f7               	JMP	_00079_DS_
0003f3   c41c     JMP	#0x41c               	JMP	_00085_DS_
0003f4   c441     JMP	#0x441               	JMP	_00091_DS_
0003f5   c466     JMP	#0x466               	JMP	_00097_DS_
0003f6   c48b     JMP	#0x48b               	JMP	_00103_DS_
                                           _00079_DS_
                                           ;	.line	118; "../KEY.c"	if(keycnt>100000)//连续5次检测结果保持同一键值，确认按键为短按
0003f7   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1021
0003f8   3897     SUB	R0, 0x97             	SUB	R0, r0x1021
0003f9   7a03     JB	0x3, 2                	JB	PSW, 2
0003fa   c405     JMP	#0x405               	JMP	_00131_DS_
0003fb   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	r0x1022
0003fc   3895     SUB	R0, 0x95             	SUB	R0, r0x1022
0003fd   7a03     JB	0x3, 2                	JB	PSW, 2
0003fe   c405     JMP	#0x405               	JMP	_00131_DS_
0003ff   9886     MOV	R0, #0x86            	MOV	R0,# 0x86
                                           	BANKSEL	r0x1023
000400   3890     SUB	R0, 0x90             	SUB	R0, r0x1023
000401   7a03     JB	0x3, 2                	JB	PSW, 2
000402   c405     JMP	#0x405               	JMP	_00131_DS_
000403   98a1     MOV	R0, #0xa1            	MOV	R0,# 0xa1
                                           	BANKSEL	r0x1024
000404   3891     SUB	R0, 0x91             	SUB	R0, r0x1024
                                           _00131_DS_
000405   7803     JB	0x3, 0                	JB	PSW, 0
000406   c409     JMP	#0x409               	JMP	_00083_DS_
                                           ;	.line	120; "../KEY.c"	TX_Data[0]=0x00;
                                           	BANKSEL	_TX_Data
000407   03e4     CLR	0xe4                 	CLR	 (_TX_Data + 0)
000408   c4af     JMP	#0x4af               	JMP	_00109_DS_
                                           _00083_DS_
                                           ;	.line	122; "../KEY.c"	else if(keycnt>5)
000409   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1021
00040a   3897     SUB	R0, 0x97             	SUB	R0, r0x1021
00040b   7a03     JB	0x3, 2                	JB	PSW, 2
00040c   c417     JMP	#0x417               	JMP	_00132_DS_
00040d   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1022
00040e   3895     SUB	R0, 0x95             	SUB	R0, r0x1022
00040f   7a03     JB	0x3, 2                	JB	PSW, 2
000410   c417     JMP	#0x417               	JMP	_00132_DS_
000411   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1023
000412   3890     SUB	R0, 0x90             	SUB	R0, r0x1023
000413   7a03     JB	0x3, 2                	JB	PSW, 2
000414   c417     JMP	#0x417               	JMP	_00132_DS_
000415   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	r0x1024
000416   3891     SUB	R0, 0x91             	SUB	R0, r0x1024
                                           _00132_DS_
000417   7803     JB	0x3, 0                	JB	PSW, 0
000418   c4af     JMP	#0x4af               	JMP	_00109_DS_
                                           ;	.line	124; "../KEY.c"	TX_Data[0]=0x20;	//返回
000419   9820     MOV	R0, #0x20            	MOV	R0,# 0x20
                                           	BANKSEL	_TX_Data
00041a   51e4     MOV	0xe4, R0             	MOV	 (_TX_Data + 0), R0
                                           ;	.line	126; "../KEY.c"	break;
00041b   c4af     JMP	#0x4af               	JMP	_00109_DS_
                                           _00085_DS_
                                           ;	.line	128; "../KEY.c"	if(keycnt >100000)
00041c   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1021
00041d   3897     SUB	R0, 0x97             	SUB	R0, r0x1021
00041e   7a03     JB	0x3, 2                	JB	PSW, 2
00041f   c42a     JMP	#0x42a               	JMP	_00133_DS_
000420   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	r0x1022
000421   3895     SUB	R0, 0x95             	SUB	R0, r0x1022
000422   7a03     JB	0x3, 2                	JB	PSW, 2
000423   c42a     JMP	#0x42a               	JMP	_00133_DS_
000424   9886     MOV	R0, #0x86            	MOV	R0,# 0x86
                                           	BANKSEL	r0x1023
000425   3890     SUB	R0, 0x90             	SUB	R0, r0x1023
000426   7a03     JB	0x3, 2                	JB	PSW, 2
000427   c42a     JMP	#0x42a               	JMP	_00133_DS_
000428   98a1     MOV	R0, #0xa1            	MOV	R0,# 0xa1
                                           	BANKSEL	r0x1024
000429   3891     SUB	R0, 0x91             	SUB	R0, r0x1024
                                           _00133_DS_
00042a   7803     JB	0x3, 0                	JB	PSW, 0
00042b   c42e     JMP	#0x42e               	JMP	_00089_DS_
                                           ;	.line	130; "../KEY.c"	TX_Data[0]=0x00;
                                           	BANKSEL	_TX_Data
00042c   03e4     CLR	0xe4                 	CLR	 (_TX_Data + 0)
00042d   c4af     JMP	#0x4af               	JMP	_00109_DS_
                                           _00089_DS_
                                           ;	.line	132; "../KEY.c"	else if(keycnt>5)
00042e   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1021
00042f   3897     SUB	R0, 0x97             	SUB	R0, r0x1021
000430   7a03     JB	0x3, 2                	JB	PSW, 2
000431   c43c     JMP	#0x43c               	JMP	_00134_DS_
000432   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1022
000433   3895     SUB	R0, 0x95             	SUB	R0, r0x1022
000434   7a03     JB	0x3, 2                	JB	PSW, 2
000435   c43c     JMP	#0x43c               	JMP	_00134_DS_
000436   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1023
000437   3890     SUB	R0, 0x90             	SUB	R0, r0x1023
000438   7a03     JB	0x3, 2                	JB	PSW, 2
000439   c43c     JMP	#0x43c               	JMP	_00134_DS_
00043a   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	r0x1024
00043b   3891     SUB	R0, 0x91             	SUB	R0, r0x1024
                                           _00134_DS_
00043c   7803     JB	0x3, 0                	JB	PSW, 0
00043d   c4af     JMP	#0x4af               	JMP	_00109_DS_
                                           ;	.line	134; "../KEY.c"	TX_Data[0]=0x40;	//上翻
00043e   9840     MOV	R0, #0x40            	MOV	R0,# 0x40
                                           	BANKSEL	_TX_Data
00043f   51e4     MOV	0xe4, R0             	MOV	 (_TX_Data + 0), R0
                                           ;	.line	136; "../KEY.c"	break;
000440   c4af     JMP	#0x4af               	JMP	_00109_DS_
                                           _00091_DS_
                                           ;	.line	138; "../KEY.c"	if(keycnt >100000)
000441   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1021
000442   3897     SUB	R0, 0x97             	SUB	R0, r0x1021
000443   7a03     JB	0x3, 2                	JB	PSW, 2
000444   c44f     JMP	#0x44f               	JMP	_00135_DS_
000445   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	r0x1022
000446   3895     SUB	R0, 0x95             	SUB	R0, r0x1022
000447   7a03     JB	0x3, 2                	JB	PSW, 2
000448   c44f     JMP	#0x44f               	JMP	_00135_DS_
000449   9886     MOV	R0, #0x86            	MOV	R0,# 0x86
                                           	BANKSEL	r0x1023
00044a   3890     SUB	R0, 0x90             	SUB	R0, r0x1023
00044b   7a03     JB	0x3, 2                	JB	PSW, 2
00044c   c44f     JMP	#0x44f               	JMP	_00135_DS_
00044d   98a1     MOV	R0, #0xa1            	MOV	R0,# 0xa1
                                           	BANKSEL	r0x1024
00044e   3891     SUB	R0, 0x91             	SUB	R0, r0x1024
                                           _00135_DS_
00044f   7803     JB	0x3, 0                	JB	PSW, 0
000450   c453     JMP	#0x453               	JMP	_00095_DS_
                                           ;	.line	140; "../KEY.c"	TX_Data[0]=0x00;
                                           	BANKSEL	_TX_Data
000451   03e4     CLR	0xe4                 	CLR	 (_TX_Data + 0)
000452   c4af     JMP	#0x4af               	JMP	_00109_DS_
                                           _00095_DS_
                                           ;	.line	142; "../KEY.c"	else if(keycnt>5)
000453   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1021
000454   3897     SUB	R0, 0x97             	SUB	R0, r0x1021
000455   7a03     JB	0x3, 2                	JB	PSW, 2
000456   c461     JMP	#0x461               	JMP	_00136_DS_
000457   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1022
000458   3895     SUB	R0, 0x95             	SUB	R0, r0x1022
000459   7a03     JB	0x3, 2                	JB	PSW, 2
00045a   c461     JMP	#0x461               	JMP	_00136_DS_
00045b   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1023
00045c   3890     SUB	R0, 0x90             	SUB	R0, r0x1023
00045d   7a03     JB	0x3, 2                	JB	PSW, 2
00045e   c461     JMP	#0x461               	JMP	_00136_DS_
00045f   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	r0x1024
000460   3891     SUB	R0, 0x91             	SUB	R0, r0x1024
                                           _00136_DS_
000461   7803     JB	0x3, 0                	JB	PSW, 0
000462   c4af     JMP	#0x4af               	JMP	_00109_DS_
                                           ;	.line	144; "../KEY.c"	TX_Data[0]=0x80;	//确认
000463   9880     MOV	R0, #0x80            	MOV	R0,# 0x80
                                           	BANKSEL	_TX_Data
000464   51e4     MOV	0xe4, R0             	MOV	 (_TX_Data + 0), R0
                                           ;	.line	146; "../KEY.c"	break;
000465   c4af     JMP	#0x4af               	JMP	_00109_DS_
                                           _00097_DS_
                                           ;	.line	148; "../KEY.c"	if(keycnt >100000)
000466   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1021
000467   3897     SUB	R0, 0x97             	SUB	R0, r0x1021
000468   7a03     JB	0x3, 2                	JB	PSW, 2
000469   c474     JMP	#0x474               	JMP	_00137_DS_
00046a   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	r0x1022
00046b   3895     SUB	R0, 0x95             	SUB	R0, r0x1022
00046c   7a03     JB	0x3, 2                	JB	PSW, 2
00046d   c474     JMP	#0x474               	JMP	_00137_DS_
00046e   9886     MOV	R0, #0x86            	MOV	R0,# 0x86
                                           	BANKSEL	r0x1023
00046f   3890     SUB	R0, 0x90             	SUB	R0, r0x1023
000470   7a03     JB	0x3, 2                	JB	PSW, 2
000471   c474     JMP	#0x474               	JMP	_00137_DS_
000472   98a1     MOV	R0, #0xa1            	MOV	R0,# 0xa1
                                           	BANKSEL	r0x1024
000473   3891     SUB	R0, 0x91             	SUB	R0, r0x1024
                                           _00137_DS_
000474   7803     JB	0x3, 0                	JB	PSW, 0
000475   c478     JMP	#0x478               	JMP	_00101_DS_
                                           ;	.line	150; "../KEY.c"	TX_Data[1]=0x00;
                                           	BANKSEL	_TX_Data
000476   03e5     CLR	0xe5                 	CLR	 (_TX_Data + 1)
000477   c4af     JMP	#0x4af               	JMP	_00109_DS_
                                           _00101_DS_
                                           ;	.line	152; "../KEY.c"	else if(keycnt>5)
000478   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1021
000479   3897     SUB	R0, 0x97             	SUB	R0, r0x1021
00047a   7a03     JB	0x3, 2                	JB	PSW, 2
00047b   c486     JMP	#0x486               	JMP	_00138_DS_
00047c   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1022
00047d   3895     SUB	R0, 0x95             	SUB	R0, r0x1022
00047e   7a03     JB	0x3, 2                	JB	PSW, 2
00047f   c486     JMP	#0x486               	JMP	_00138_DS_
000480   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1023
000481   3890     SUB	R0, 0x90             	SUB	R0, r0x1023
000482   7a03     JB	0x3, 2                	JB	PSW, 2
000483   c486     JMP	#0x486               	JMP	_00138_DS_
000484   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	r0x1024
000485   3891     SUB	R0, 0x91             	SUB	R0, r0x1024
                                           _00138_DS_
000486   7803     JB	0x3, 0                	JB	PSW, 0
000487   c4af     JMP	#0x4af               	JMP	_00109_DS_
                                           ;	.line	154; "../KEY.c"	TX_Data[1]=0x01;   //下翻
000488   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	_TX_Data
000489   51e5     MOV	0xe5, R0             	MOV	 (_TX_Data + 1), R0
                                           ;	.line	156; "../KEY.c"	break;
00048a   c4af     JMP	#0x4af               	JMP	_00109_DS_
                                           _00103_DS_
                                           ;	.line	158; "../KEY.c"	if(keycnt >100000)
00048b   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1021
00048c   3897     SUB	R0, 0x97             	SUB	R0, r0x1021
00048d   7a03     JB	0x3, 2                	JB	PSW, 2
00048e   c499     JMP	#0x499               	JMP	_00139_DS_
00048f   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	r0x1022
000490   3895     SUB	R0, 0x95             	SUB	R0, r0x1022
000491   7a03     JB	0x3, 2                	JB	PSW, 2
000492   c499     JMP	#0x499               	JMP	_00139_DS_
000493   9886     MOV	R0, #0x86            	MOV	R0,# 0x86
                                           	BANKSEL	r0x1023
000494   3890     SUB	R0, 0x90             	SUB	R0, r0x1023
000495   7a03     JB	0x3, 2                	JB	PSW, 2
000496   c499     JMP	#0x499               	JMP	_00139_DS_
000497   98a1     MOV	R0, #0xa1            	MOV	R0,# 0xa1
                                           	BANKSEL	r0x1024
000498   3891     SUB	R0, 0x91             	SUB	R0, r0x1024
                                           _00139_DS_
000499   7803     JB	0x3, 0                	JB	PSW, 0
00049a   c49d     JMP	#0x49d               	JMP	_00107_DS_
                                           ;	.line	160; "../KEY.c"	TX_Data[1]=0x00;
                                           	BANKSEL	_TX_Data
00049b   03e5     CLR	0xe5                 	CLR	 (_TX_Data + 1)
00049c   c4af     JMP	#0x4af               	JMP	_00109_DS_
                                           _00107_DS_
                                           ;	.line	162; "../KEY.c"	else if(keycnt>5)
00049d   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1021
00049e   3897     SUB	R0, 0x97             	SUB	R0, r0x1021
00049f   7a03     JB	0x3, 2                	JB	PSW, 2
0004a0   c4ab     JMP	#0x4ab               	JMP	_00140_DS_
0004a1   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1022
0004a2   3895     SUB	R0, 0x95             	SUB	R0, r0x1022
0004a3   7a03     JB	0x3, 2                	JB	PSW, 2
0004a4   c4ab     JMP	#0x4ab               	JMP	_00140_DS_
0004a5   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1023
0004a6   3890     SUB	R0, 0x90             	SUB	R0, r0x1023
0004a7   7a03     JB	0x3, 2                	JB	PSW, 2
0004a8   c4ab     JMP	#0x4ab               	JMP	_00140_DS_
0004a9   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	r0x1024
0004aa   3891     SUB	R0, 0x91             	SUB	R0, r0x1024
                                           _00140_DS_
0004ab   7803     JB	0x3, 0                	JB	PSW, 0
0004ac   c4af     JMP	#0x4af               	JMP	_00109_DS_
                                           ;	.line	164; "../KEY.c"	TX_Data[1]=0x02;   //语音
0004ad   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
                                           	BANKSEL	_TX_Data
0004ae   51e5     MOV	0xe5, R0             	MOV	 (_TX_Data + 1), R0
                                           _00109_DS_
                                           ;	.line	168; "../KEY.c"	if (keyvalue == 0U)
0004af   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1020
0004b0   3096     ORL	R0, 0x96             	ORL	R0, r0x1020
0004b1   7a03     JB	0x3, 2                	JB	PSW, 2
0004b2   c4bb     JMP	#0x4bb               	JMP	_00111_DS_
                                           ;	.line	170; "../KEY.c"	Main_DataClean();
0004b3   9f07     MOV	R7, #0x7             	TRAPPC1	_Main_DataClean
0004b4   5f73     MOV	0x73, R7             	TRAPPC2	_Main_DataClean
0004b5   e007     MOVP	#0x07               	PAGESEL	_Main_DataClean
0004b6   d7e3     CALL	#0x7e3              	CALL	_Main_DataClean
0004b7   9f04     MOV	R7, #0x4             	TRAPPC1	$+2
0004b8   5f73     MOV	0x73, R7             	TRAPPC2	$+1
0004b9   e004     MOVP	#0x04               	PAGESEL	$
0004ba   c4c2     JMP	#0x4c2               	JMP	_00113_DS_
                                           _00111_DS_
                                           ;	.line	174; "../KEY.c"	Main_CleanTimeSet();
0004bb   9f08     MOV	R7, #0x8             	TRAPPC1	_Main_CleanTimeSet
0004bc   5f73     MOV	0x73, R7             	TRAPPC2	_Main_CleanTimeSet
0004bd   e008     MOVP	#0x08               	PAGESEL	_Main_CleanTimeSet
0004be   d865     CALL	#0x865              	CALL	_Main_CleanTimeSet
0004bf   9f04     MOV	R7, #0x4             	TRAPPC1	$+2
0004c0   5f73     MOV	0x73, R7             	TRAPPC2	$+1
0004c1   e004     MOVP	#0x04               	PAGESEL	$
                                           _00113_DS_
0004c2   0008     CRET                     	CRET	
                                           func._currentkeyleft	.code
                                           _currentkeyleft	;Function start
                                           ;	.line	77; "../KEY.c"	Init_ADC(0x01);
0004c3   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	STK00
0004c4   517e     MOV	0x7e, R0             	MOV	STK00, R0
0004c5   9800     MOV	R0, #0               	MOV	R0,# 0x00
0004c6   9f05     MOV	R7, #0x5             	TRAPPC1	_Init_ADC
0004c7   5f73     MOV	0x73, R7             	TRAPPC2	_Init_ADC
0004c8   e005     MOVP	#0x05               	PAGESEL	_Init_ADC
0004c9   d5f7     CALL	#0x5f7              	CALL	_Init_ADC
0004ca   9f04     MOV	R7, #0x4             	TRAPPC1	$+2
0004cb   5f73     MOV	0x73, R7             	TRAPPC2	$+1
0004cc   e004     MOVP	#0x04               	PAGESEL	$
                                           ;	.line	78; "../KEY.c"	ADCCTL2 = 0x25;                 //左路AD按键数据采集
0004cd   9825     MOV	R0, #0x25            	MOV	R0,# 0x25
0004ce   e100     MOVB	#0x00               	BANKSEL	_ADCCTL2
0004cf   5150     MOV	0x50, R0             	MOV	_ADCCTL2, R0
                                           ;	.line	79; "../KEY.c"	ADC_data1 = Adc_read();
0004d0   9f07     MOV	R7, #0x7             	TRAPPC1	_Adc_read
0004d1   5f73     MOV	0x73, R7             	TRAPPC2	_Adc_read
0004d2   e007     MOVP	#0x07               	PAGESEL	_Adc_read
0004d3   d703     CALL	#0x703              	CALL	_Adc_read
0004d4   9f04     MOV	R7, #0x4             	TRAPPC1	$+2
0004d5   5f73     MOV	0x73, R7             	TRAPPC2	$+1
0004d6   e004     MOVP	#0x04               	PAGESEL	$
0004d7   e100     MOVB	#0x00               	BANKSEL	r0x1018
0004d8   5193     MOV	0x93, R0             	MOV	r0x1018, R0
                                           	BANKSEL	STK00
0004d9   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1019
0004da   5194     MOV	0x94, R0             	MOV	r0x1019, R0
                                           ;	.line	80; "../KEY.c"	if(ADC_data1<=100)//电话接听
0004db   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1018
0004dc   3893     SUB	R0, 0x93             	SUB	R0, r0x1018
0004dd   7a03     JB	0x3, 2                	JB	PSW, 2
0004de   c4e1     JMP	#0x4e1               	JMP	_00070_DS_
0004df   9865     MOV	R0, #0x65            	MOV	R0,# 0x65
                                           	BANKSEL	r0x1019
0004e0   3894     SUB	R0, 0x94             	SUB	R0, r0x1019
                                           _00070_DS_
0004e1   7003     JNB	0x3, 0               	JNB	PSW, 0
0004e2   c4e6     JMP	#0x4e6               	JMP	_00057_DS_
                                           ;	.line	82; "../KEY.c"	Key_Number1=1;
0004e3   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	r0x101A
0004e4   5192     MOV	0x92, R0             	MOV	r0x101A, R0
0004e5   c533     JMP	#0x533               	JMP	_00058_DS_
                                           _00057_DS_
                                           ;	.line	85; "../KEY.c"	else if(ADC_data1>=800&&ADC_data1<=1000)//vol+
0004e6   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	r0x1018
0004e7   3893     SUB	R0, 0x93             	SUB	R0, r0x1018
0004e8   7a03     JB	0x3, 2                	JB	PSW, 2
0004e9   c4ec     JMP	#0x4ec               	JMP	_00071_DS_
0004ea   9820     MOV	R0, #0x20            	MOV	R0,# 0x20
                                           	BANKSEL	r0x1019
0004eb   3894     SUB	R0, 0x94             	SUB	R0, r0x1019
                                           _00071_DS_
0004ec   7803     JB	0x3, 0                	JB	PSW, 0
0004ed   c4f9     JMP	#0x4f9               	JMP	_00053_DS_
0004ee   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	r0x1018
0004ef   3893     SUB	R0, 0x93             	SUB	R0, r0x1018
0004f0   7a03     JB	0x3, 2                	JB	PSW, 2
0004f1   c4f4     JMP	#0x4f4               	JMP	_00072_DS_
0004f2   98e9     MOV	R0, #0xe9            	MOV	R0,# 0xe9
                                           	BANKSEL	r0x1019
0004f3   3894     SUB	R0, 0x94             	SUB	R0, r0x1019
                                           _00072_DS_
0004f4   7003     JNB	0x3, 0               	JNB	PSW, 0
0004f5   c4f9     JMP	#0x4f9               	JMP	_00053_DS_
                                           ;	.line	87; "../KEY.c"	Key_Number1=2;
0004f6   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
                                           	BANKSEL	r0x101A
0004f7   5192     MOV	0x92, R0             	MOV	r0x101A, R0
0004f8   c533     JMP	#0x533               	JMP	_00058_DS_
                                           _00053_DS_
                                           ;	.line	90; "../KEY.c"	else if(ADC_data1>=1450&&ADC_data1<=1600)//vol x
0004f9   9805     MOV	R0, #0x5             	MOV	R0,# 0x05
                                           	BANKSEL	r0x1018
0004fa   3893     SUB	R0, 0x93             	SUB	R0, r0x1018
0004fb   7a03     JB	0x3, 2                	JB	PSW, 2
0004fc   c4ff     JMP	#0x4ff               	JMP	_00073_DS_
0004fd   98aa     MOV	R0, #0xaa            	MOV	R0,# 0xaa
                                           	BANKSEL	r0x1019
0004fe   3894     SUB	R0, 0x94             	SUB	R0, r0x1019
                                           _00073_DS_
0004ff   7803     JB	0x3, 0                	JB	PSW, 0
000500   c50c     JMP	#0x50c               	JMP	_00049_DS_
000501   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	r0x1018
000502   3893     SUB	R0, 0x93             	SUB	R0, r0x1018
000503   7a03     JB	0x3, 2                	JB	PSW, 2
000504   c507     JMP	#0x507               	JMP	_00074_DS_
000505   9841     MOV	R0, #0x41            	MOV	R0,# 0x41
                                           	BANKSEL	r0x1019
000506   3894     SUB	R0, 0x94             	SUB	R0, r0x1019
                                           _00074_DS_
000507   7003     JNB	0x3, 0               	JNB	PSW, 0
000508   c50c     JMP	#0x50c               	JMP	_00049_DS_
                                           ;	.line	92; "../KEY.c"	Key_Number1=3;
000509   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	r0x101A
00050a   5192     MOV	0x92, R0             	MOV	r0x101A, R0
00050b   c533     JMP	#0x533               	JMP	_00058_DS_
                                           _00049_DS_
                                           ;	.line	95; "../KEY.c"	else if(ADC_data1>1750&&ADC_data1<=1850)//vol-
00050c   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	r0x1018
00050d   3893     SUB	R0, 0x93             	SUB	R0, r0x1018
00050e   7a03     JB	0x3, 2                	JB	PSW, 2
00050f   c512     JMP	#0x512               	JMP	_00075_DS_
000510   98d7     MOV	R0, #0xd7            	MOV	R0,# 0xd7
                                           	BANKSEL	r0x1019
000511   3894     SUB	R0, 0x94             	SUB	R0, r0x1019
                                           _00075_DS_
000512   7803     JB	0x3, 0                	JB	PSW, 0
000513   c51f     JMP	#0x51f               	JMP	_00045_DS_
000514   9807     MOV	R0, #0x7             	MOV	R0,# 0x07
                                           	BANKSEL	r0x1018
000515   3893     SUB	R0, 0x93             	SUB	R0, r0x1018
000516   7a03     JB	0x3, 2                	JB	PSW, 2
000517   c51a     JMP	#0x51a               	JMP	_00076_DS_
000518   983b     MOV	R0, #0x3b            	MOV	R0,# 0x3b
                                           	BANKSEL	r0x1019
000519   3894     SUB	R0, 0x94             	SUB	R0, r0x1019
                                           _00076_DS_
00051a   7003     JNB	0x3, 0               	JNB	PSW, 0
00051b   c51f     JMP	#0x51f               	JMP	_00045_DS_
                                           ;	.line	97; "../KEY.c"	Key_Number1=4;
00051c   9804     MOV	R0, #0x4             	MOV	R0,# 0x04
                                           	BANKSEL	r0x101A
00051d   5192     MOV	0x92, R0             	MOV	r0x101A, R0
00051e   c533     JMP	#0x533               	JMP	_00058_DS_
                                           _00045_DS_
                                           ;	.line	100; "../KEY.c"	else if(ADC_data1>=1950&&ADC_data1<=2100)//电话挂断
00051f   9807     MOV	R0, #0x7             	MOV	R0,# 0x07
                                           	BANKSEL	r0x1018
000520   3893     SUB	R0, 0x93             	SUB	R0, r0x1018
000521   7a03     JB	0x3, 2                	JB	PSW, 2
000522   c525     JMP	#0x525               	JMP	_00077_DS_
000523   989e     MOV	R0, #0x9e            	MOV	R0,# 0x9e
                                           	BANKSEL	r0x1019
000524   3894     SUB	R0, 0x94             	SUB	R0, r0x1019
                                           _00077_DS_
000525   7803     JB	0x3, 0                	JB	PSW, 0
000526   c532     JMP	#0x532               	JMP	_00041_DS_
000527   9808     MOV	R0, #0x8             	MOV	R0,# 0x08
                                           	BANKSEL	r0x1018
000528   3893     SUB	R0, 0x93             	SUB	R0, r0x1018
000529   7a03     JB	0x3, 2                	JB	PSW, 2
00052a   c52d     JMP	#0x52d               	JMP	_00078_DS_
00052b   9835     MOV	R0, #0x35            	MOV	R0,# 0x35
                                           	BANKSEL	r0x1019
00052c   3894     SUB	R0, 0x94             	SUB	R0, r0x1019
                                           _00078_DS_
00052d   7003     JNB	0x3, 0               	JNB	PSW, 0
00052e   c532     JMP	#0x532               	JMP	_00041_DS_
                                           ;	.line	102; "../KEY.c"	Key_Number1=5;
00052f   9805     MOV	R0, #0x5             	MOV	R0,# 0x05
                                           	BANKSEL	r0x101A
000530   5192     MOV	0x92, R0             	MOV	r0x101A, R0
000531   c533     JMP	#0x533               	JMP	_00058_DS_
                                           _00041_DS_
                                           ;	.line	106; "../KEY.c"	Key_Number1=0;
                                           	BANKSEL	r0x101A
000532   0392     CLR	0x92                 	CLR	r0x101A
                                           _00058_DS_
                                           ;	.line	108; "../KEY.c"	return Key_Number1;
                                           	BANKSEL	r0x1018
000533   0393     CLR	0x93                 	CLR	r0x1018
                                           	BANKSEL	r0x101A
000534   0e92     MOVZ	R0, 0x92            	MOVZ	R0, r0x101A
                                           	BANKSEL	r0x1019
000535   5194     MOV	0x94, R0             	MOV	r0x1019, R0
                                           	BANKSEL	STK00
000536   517e     MOV	0x7e, R0             	MOV	STK00, R0
000537   9800     MOV	R0, #0               	MOV	R0,# 0x00
000538   0008     CRET                     	CRET	
                                           func._currentkey	.code
                                           _currentkey	;Function start
                                           ;	.line	36; "../KEY.c"	Init_ADC2(0x01);
000539   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	STK00
00053a   517e     MOV	0x7e, R0             	MOV	STK00, R0
00053b   9800     MOV	R0, #0               	MOV	R0,# 0x00
00053c   9f05     MOV	R7, #0x5             	TRAPPC1	_Init_ADC2
00053d   5f73     MOV	0x73, R7             	TRAPPC2	_Init_ADC2
00053e   e005     MOVP	#0x05               	PAGESEL	_Init_ADC2
00053f   d5af     CALL	#0x5af              	CALL	_Init_ADC2
000540   9f05     MOV	R7, #0x5             	TRAPPC1	$+2
000541   5f73     MOV	0x73, R7             	TRAPPC2	$+1
000542   e005     MOVP	#0x05               	PAGESEL	$
                                           ;	.line	37; "../KEY.c"	ADCCTL2 = 0x0c;                 //右路AD按键数据采集
000543   980c     MOV	R0, #0xc             	MOV	R0,# 0x0c
000544   e100     MOVB	#0x00               	BANKSEL	_ADCCTL2
000545   5150     MOV	0x50, R0             	MOV	_ADCCTL2, R0
                                           ;	.line	38; "../KEY.c"	ADC_data = Adc_read();
000546   9f07     MOV	R7, #0x7             	TRAPPC1	_Adc_read
000547   5f73     MOV	0x73, R7             	TRAPPC2	_Adc_read
000548   e007     MOVP	#0x07               	PAGESEL	_Adc_read
000549   d703     CALL	#0x703              	CALL	_Adc_read
00054a   9f05     MOV	R7, #0x5             	TRAPPC1	$+2
00054b   5f73     MOV	0x73, R7             	TRAPPC2	$+1
00054c   e005     MOVP	#0x05               	PAGESEL	$
00054d   e100     MOVB	#0x00               	BANKSEL	r0x1020
00054e   5196     MOV	0x96, R0             	MOV	r0x1020, R0
                                           	BANKSEL	STK00
00054f   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1021
000550   5197     MOV	0x97, R0             	MOV	r0x1021, R0
                                           ;	.line	39; "../KEY.c"	if(ADC_data<100)//返回
000551   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1020
000552   3896     SUB	R0, 0x96             	SUB	R0, r0x1020
000553   7a03     JB	0x3, 2                	JB	PSW, 2
000554   c557     JMP	#0x557               	JMP	_00031_DS_
000555   9864     MOV	R0, #0x64            	MOV	R0,# 0x64
                                           	BANKSEL	r0x1021
000556   3897     SUB	R0, 0x97             	SUB	R0, r0x1021
                                           _00031_DS_
000557   7003     JNB	0x3, 0               	JNB	PSW, 0
000558   c55c     JMP	#0x55c               	JMP	_00018_DS_
                                           ;	.line	41; "../KEY.c"	Key_Number=1;
000559   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	r0x1022
00055a   5195     MOV	0x95, R0             	MOV	r0x1022, R0
00055b   c5a9     JMP	#0x5a9               	JMP	_00019_DS_
                                           _00018_DS_
                                           ;	.line	44; "../KEY.c"	else if(ADC_data>600&&ADC_data<700)//选择上
00055c   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
                                           	BANKSEL	r0x1020
00055d   3896     SUB	R0, 0x96             	SUB	R0, r0x1020
00055e   7a03     JB	0x3, 2                	JB	PSW, 2
00055f   c562     JMP	#0x562               	JMP	_00032_DS_
000560   9859     MOV	R0, #0x59            	MOV	R0,# 0x59
                                           	BANKSEL	r0x1021
000561   3897     SUB	R0, 0x97             	SUB	R0, r0x1021
                                           _00032_DS_
000562   7803     JB	0x3, 0                	JB	PSW, 0
000563   c56f     JMP	#0x56f               	JMP	_00014_DS_
000564   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
                                           	BANKSEL	r0x1020
000565   3896     SUB	R0, 0x96             	SUB	R0, r0x1020
000566   7a03     JB	0x3, 2                	JB	PSW, 2
000567   c56a     JMP	#0x56a               	JMP	_00033_DS_
000568   98bc     MOV	R0, #0xbc            	MOV	R0,# 0xbc
                                           	BANKSEL	r0x1021
000569   3897     SUB	R0, 0x97             	SUB	R0, r0x1021
                                           _00033_DS_
00056a   7003     JNB	0x3, 0               	JNB	PSW, 0
00056b   c56f     JMP	#0x56f               	JMP	_00014_DS_
                                           ;	.line	46; "../KEY.c"	Key_Number=2;
00056c   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
                                           	BANKSEL	r0x1022
00056d   5195     MOV	0x95, R0             	MOV	r0x1022, R0
00056e   c5a9     JMP	#0x5a9               	JMP	_00019_DS_
                                           _00014_DS_
                                           ;	.line	49; "../KEY.c"	else if(ADC_data>=1200&&ADC_data<=1650)//ok
00056f   9804     MOV	R0, #0x4             	MOV	R0,# 0x04
                                           	BANKSEL	r0x1020
000570   3896     SUB	R0, 0x96             	SUB	R0, r0x1020
000571   7a03     JB	0x3, 2                	JB	PSW, 2
000572   c575     JMP	#0x575               	JMP	_00034_DS_
000573   98b0     MOV	R0, #0xb0            	MOV	R0,# 0xb0
                                           	BANKSEL	r0x1021
000574   3897     SUB	R0, 0x97             	SUB	R0, r0x1021
                                           _00034_DS_
000575   7803     JB	0x3, 0                	JB	PSW, 0
000576   c582     JMP	#0x582               	JMP	_00010_DS_
000577   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	r0x1020
000578   3896     SUB	R0, 0x96             	SUB	R0, r0x1020
000579   7a03     JB	0x3, 2                	JB	PSW, 2
00057a   c57d     JMP	#0x57d               	JMP	_00035_DS_
00057b   9873     MOV	R0, #0x73            	MOV	R0,# 0x73
                                           	BANKSEL	r0x1021
00057c   3897     SUB	R0, 0x97             	SUB	R0, r0x1021
                                           _00035_DS_
00057d   7003     JNB	0x3, 0               	JNB	PSW, 0
00057e   c582     JMP	#0x582               	JMP	_00010_DS_
                                           ;	.line	51; "../KEY.c"	Key_Number=3;
00057f   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	r0x1022
000580   5195     MOV	0x95, R0             	MOV	r0x1022, R0
000581   c5a9     JMP	#0x5a9               	JMP	_00019_DS_
                                           _00010_DS_
                                           ;	.line	54; "../KEY.c"	else if(ADC_data>=1900&&ADC_data<=2000)//选择下
000582   9807     MOV	R0, #0x7             	MOV	R0,# 0x07
                                           	BANKSEL	r0x1020
000583   3896     SUB	R0, 0x96             	SUB	R0, r0x1020
000584   7a03     JB	0x3, 2                	JB	PSW, 2
000585   c588     JMP	#0x588               	JMP	_00036_DS_
000586   986c     MOV	R0, #0x6c            	MOV	R0,# 0x6c
                                           	BANKSEL	r0x1021
000587   3897     SUB	R0, 0x97             	SUB	R0, r0x1021
                                           _00036_DS_
000588   7803     JB	0x3, 0                	JB	PSW, 0
000589   c595     JMP	#0x595               	JMP	_00006_DS_
00058a   9807     MOV	R0, #0x7             	MOV	R0,# 0x07
                                           	BANKSEL	r0x1020
00058b   3896     SUB	R0, 0x96             	SUB	R0, r0x1020
00058c   7a03     JB	0x3, 2                	JB	PSW, 2
00058d   c590     JMP	#0x590               	JMP	_00037_DS_
00058e   98d1     MOV	R0, #0xd1            	MOV	R0,# 0xd1
                                           	BANKSEL	r0x1021
00058f   3897     SUB	R0, 0x97             	SUB	R0, r0x1021
                                           _00037_DS_
000590   7003     JNB	0x3, 0               	JNB	PSW, 0
000591   c595     JMP	#0x595               	JMP	_00006_DS_
                                           ;	.line	56; "../KEY.c"	Key_Number=4;
000592   9804     MOV	R0, #0x4             	MOV	R0,# 0x04
                                           	BANKSEL	r0x1022
000593   5195     MOV	0x95, R0             	MOV	r0x1022, R0
000594   c5a9     JMP	#0x5a9               	JMP	_00019_DS_
                                           _00006_DS_
                                           ;	.line	59; "../KEY.c"	else if(ADC_data>=2400&&ADC_data<=2600)//语音按键
000595   9809     MOV	R0, #0x9             	MOV	R0,# 0x09
                                           	BANKSEL	r0x1020
000596   3896     SUB	R0, 0x96             	SUB	R0, r0x1020
000597   7a03     JB	0x3, 2                	JB	PSW, 2
000598   c59b     JMP	#0x59b               	JMP	_00038_DS_
000599   9860     MOV	R0, #0x60            	MOV	R0,# 0x60
                                           	BANKSEL	r0x1021
00059a   3897     SUB	R0, 0x97             	SUB	R0, r0x1021
                                           _00038_DS_
00059b   7803     JB	0x3, 0                	JB	PSW, 0
00059c   c5a8     JMP	#0x5a8               	JMP	_00002_DS_
00059d   980a     MOV	R0, #0xa             	MOV	R0,# 0x0a
                                           	BANKSEL	r0x1020
00059e   3896     SUB	R0, 0x96             	SUB	R0, r0x1020
00059f   7a03     JB	0x3, 2                	JB	PSW, 2
0005a0   c5a3     JMP	#0x5a3               	JMP	_00039_DS_
0005a1   9829     MOV	R0, #0x29            	MOV	R0,# 0x29
                                           	BANKSEL	r0x1021
0005a2   3897     SUB	R0, 0x97             	SUB	R0, r0x1021
                                           _00039_DS_
0005a3   7003     JNB	0x3, 0               	JNB	PSW, 0
0005a4   c5a8     JMP	#0x5a8               	JMP	_00002_DS_
                                           ;	.line	61; "../KEY.c"	Key_Number=5;
0005a5   9805     MOV	R0, #0x5             	MOV	R0,# 0x05
                                           	BANKSEL	r0x1022
0005a6   5195     MOV	0x95, R0             	MOV	r0x1022, R0
0005a7   c5a9     JMP	#0x5a9               	JMP	_00019_DS_
                                           _00002_DS_
                                           ;	.line	65; "../KEY.c"	Key_Number=0;
                                           	BANKSEL	r0x1022
0005a8   0395     CLR	0x95                 	CLR	r0x1022
                                           _00019_DS_
                                           ;	.line	67; "../KEY.c"	return Key_Number;
                                           	BANKSEL	r0x1020
0005a9   0396     CLR	0x96                 	CLR	r0x1020
                                           	BANKSEL	r0x1022
0005aa   0e95     MOVZ	R0, 0x95            	MOVZ	R0, r0x1022
                                           	BANKSEL	r0x1021
0005ab   5197     MOV	0x97, R0             	MOV	r0x1021, R0
                                           	BANKSEL	STK00
0005ac   517e     MOV	0x7e, R0             	MOV	STK00, R0
0005ad   9800     MOV	R0, #0               	MOV	R0,# 0x00
0005ae   0008     CRET                     	CRET	
                                           	.end
                                           	.radix dec
                                           	.include "KF8A100GQP.inc"
                                           func._Timer1_Init	.code
                                           _Timer1_Init	;Function start
                                           ;	.line	11; "../Timer.c"	T1CTL2 = T1CLK_SEL_SCLK|T1CLK_Prescale_DIV_8;	//	32m/4 /8
000835   980c     MOV	R0, #0xc             	MOV	R0,# 0x0c
000836   e101     MOVB	#0x01               	BANKSEL	_T1CTL2
000837   5118     MOV	0x18, R0             	MOV	_T1CTL2, R0
                                           ;	.line	12; "../Timer.c"	T1H=0;
000838   e100     MOVB	#0x00               	BANKSEL	_T1H
000839   030f     CLR	0xf                  	CLR	_T1H
                                           ;	.line	13; "../Timer.c"	T1L=0;
                                           	BANKSEL	_T1L
00083a   030e     CLR	0xe                  	CLR	_T1L
                                           ;	.line	14; "../Timer.c"	PP2=0x01;		//5000
00083b   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	_PP2
00083c   5132     MOV	0x32, R0             	MOV	_PP2, R0
                                           ;	.line	15; "../Timer.c"	PP1=0xf4-1;
00083d   98f3     MOV	R0, #0xf3            	MOV	R0,# 0xf3
                                           	BANKSEL	_PP1
00083e   5116     MOV	0x16, R0             	MOV	_PP1, R0
                                           ;	.line	16; "../Timer.c"	PWMMODE = 1;	//使能重载
                                           	BANKSEL	_PWMCTL_bits
00083f   6b15     SET	0x15, 3              	SET	_PWMCTL_bits, 3
000840   0000     NOP                      	NOP 
                                           ;	.line	21; "../Timer.c"	T1ON = 1;		//T1定时器启动
                                           	BANKSEL	_T1CTL_bits
000841   6810     SET	0x10, 0              	SET	_T1CTL_bits, 0
                                           ;	.line	22; "../Timer.c"	T1IF = 0;
                                           	BANKSEL	_EIF1_bits
000842   600c     CLR	0xc, 0               	CLR	_EIF1_bits, 0
                                           ;	.line	23; "../Timer.c"	T1IE = 1;
                                           	BANKSEL	_EIE1_bits
000843   682c     SET	0x2c, 0              	SET	_EIE1_bits, 0
000844   0008     CRET                     	CRET	
                                           	.end
                                           	.radix dec
                                           	.include "KF8A100GQP.inc"
                                           func._UART2_SendBuf	.code
                                           _UART2_SendBuf	;Function start
                                           ;	.line	58; "../UART.c"	void UART2_SendBuf(uint8 head, uint8 lenth, uint8 *SendTemp)
                                           	BANKSEL	r0x1000
                                           	MOV	r0x1000, R0
                                           	BANKSEL	STK00
                                           	MOVZ	R0, STK00
                                           	BANKSEL	r0x1001
                                           	MOV	r0x1001, R0
                                           	BANKSEL	STK01
                                           	MOVZ	R0, STK01
                                           	BANKSEL	r0x1002
                                           	MOV	r0x1002, R0
                                           	BANKSEL	STK02
                                           	MOVZ	R0, STK02
                                           	BANKSEL	r0x1003
                                           	MOV	r0x1003, R0
                                           	BANKSEL	STK03
                                           	MOVZ	R0, STK03
                                           	BANKSEL	r0x1004
                                           	MOV	r0x1004, R0
                                           ;	.line	61; "../UART.c"	temp = head+lenth;
                                           	BANKSEL	r0x1000
                                           	MOV	R0, r0x1000
                                           	BANKSEL	r0x1001
                                           	ADD	r0x1001, R0
                                           _00009_DS_
                                           ;	.line	62; "../UART.c"	for(;head<temp;head++)
                                           	BANKSEL	r0x1001
                                           	MOVZ	R0, r0x1001
                                           	BANKSEL	r0x1000
                                           	SUB	R0, r0x1000
                                           	JNB	PSW, 0
                                           	JMP	_00013_DS_
                                           ;	.line	64; "../UART.c"	UART2_SendOneByte(*(SendTemp+head));
                                           	BANKSEL	r0x1004
                                           	MOV	R0, r0x1004
                                           	BANKSEL	r0x1000
                                           	ADD	R0, r0x1000
                                           	BANKSEL	r0x1005
                                           	MOV	r0x1005, R0
                                           	BANKSEL	r0x1003
                                           	MOVZ	R0, r0x1003
                                           	JNB	PSW, 0
                                           	ADD	R0,# 0x01
                                           	BANKSEL	r0x1006
                                           	MOV	r0x1006, R0
                                           	BANKSEL	r0x1002
                                           	MOVZ	R0, r0x1002
                                           	JNB	PSW, 0
                                           	ADD	R0,# 0x01
                                           	BANKSEL	r0x1007
                                           	MOV	r0x1007, R0
                                           	BANKSEL	r0x1005
                                           	MOVZ	R0, r0x1005
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1006
                                           	MOVZ	R0, r0x1006
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1007
                                           	MOVZ	R0, r0x1007
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	r0x1008
                                           	MOV	r0x1008, R0
                                           	BANKSEL	r0x1008
                                           	MOVZ	R0, r0x1008
                                           	TRAPPC1	_UART2_SendOneByte
                                           	TRAPPC2	_UART2_SendOneByte
                                           	PAGESEL	_UART2_SendOneByte
                                           	CALL	_UART2_SendOneByte
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           ;	.line	62; "../UART.c"	for(;head<temp;head++)
                                           	BANKSEL	r0x1000
                                           	INC	r0x1000
                                           	JMP	_00009_DS_
                                           _00013_DS_
                                           	CRET	
                                           func._UART2_SendOneByte	.code
                                           _UART2_SendOneByte	;Function start
                                           ;	.line	46; "../UART.c"	void UART2_SendOneByte(unsigned char SendTemp)
                                           	BANKSEL	_TXSDR3
                                           	MOV	_TXSDR3, R0
                                           _00003_DS_
                                           ;	.line	49; "../UART.c"	while(TXSRS3==0);
                                           	BANKSEL	_TSCTL3_bits
                                           	JB	_TSCTL3_bits, 1
                                           	JMP	_00003_DS_
                                           	CRET	
                                           func._UART2_Init	.code
                                           _UART2_Init	;Function start
                                           ;	.line	14; "../UART.c"	BRCTL2=0x40|USART_SourceClk_SCLK|USART_BRG16;	// 	接收空闲  使用8位计数器，不考虑唤醒是使能和自动波特率检测
000845   9850     MOV	R0, #0x50            	MOV	R0,# 0x50
000846   e101     MOVB	#0x01               	BANKSEL	_BRCTL2
000847   516b     MOV	0x6b, R0             	MOV	_BRCTL2, R0
                                           ;	.line	22; "../UART.c"	EUBRGH2=0x00;
                                           	BANKSEL	_EUBRGH2
000848   0359     CLR	0x59                 	CLR	_EUBRGH2
                                           ;	.line	23; "../UART.c"	EUBRGL2=68;
000849   9844     MOV	R0, #0x44            	MOV	R0,# 0x44
                                           	BANKSEL	_EUBRGL2
00084a   516d     MOV	0x6d, R0             	MOV	_EUBRGL2, R0
                                           ;	.line	24; "../UART.c"	TSCTL2=0x26;
00084b   9826     MOV	R0, #0x26            	MOV	R0,# 0x26
                                           	BANKSEL	_TSCTL2
00084c   516c     MOV	0x6c, R0             	MOV	_TSCTL2, R0
                                           ;	.line	25; "../UART.c"	RSCTL2=0x90;
00084d   9890     MOV	R0, #0x90            	MOV	R0,# 0x90
                                           	BANKSEL	_RSCTL2
00084e   5168     MOV	0x68, R0             	MOV	_RSCTL2, R0
                                           ;	.line	34; "../UART.c"	TX2IF=0;
00084f   e100     MOVB	#0x00               	BANKSEL	_EIF2_bits
000850   640d     CLR	0xd, 4               	CLR	_EIF2_bits, 4
                                           ;	.line	35; "../UART.c"	TX2IE=0;
                                           	BANKSEL	_EIE2_bits
000851   642d     CLR	0x2d, 4              	CLR	_EIE2_bits, 4
                                           ;	.line	36; "../UART.c"	RC2IF=0;
                                           	BANKSEL	_EIF2_bits
000852   650d     CLR	0xd, 5               	CLR	_EIF2_bits, 5
                                           ;	.line	37; "../UART.c"	RC2IE=0;
                                           	BANKSEL	_EIE2_bits
000853   652d     CLR	0x2d, 5              	CLR	_EIE2_bits, 5
000854   0008     CRET                     	CRET	
                                           	.end
                                           	.radix dec
                                           	.include "KF8A100GQP.inc"
                                           	__config 0x8007, 0x6d4
                                           	.end
                                           	.radix dec
                                           	.include "KF8A100GQP.inc"
                                           	.type STK11, 108
                                           	.type STK10, 108
                                           	.type STK09, 108
                                           	.type STK08, 108
                                           	.type STK07, 108
                                           	.type STK06, 108
                                           	.type STK05, 108
                                           	.type STK04, 108
                                           	.type STK03, 108
                                           	.type STK02, 108
                                           	.type STK01, 108
                                           	.type STK00, 108
                                           sharebankTRAP .idata 0x73
                                           TRAPRx73
                                             .db 0x00
                                           TRAPRx74
                                             .db 0x00
                                           TRAPRx75
                                             .db 0x00
                                           TRAPRx76
                                             .db 0x00
                                           TRAPRx77
                                             .db 0x00
                                           ID_main_0	.idata
                                           _can_data_hand
                                           	.db	0x00
                                           ID_main_1	.idata
                                           _length
                                           	.db	0x00
                                           ID_main_2	.idata
                                           _Status_fram
                                           	.db	0x00
                                           ID_main_3	.idata
                                           _ID_fram
                                           	.db	0x00, 0x00
                                           ID_main_4	.idata
                                           _Data
                                           	.db	0x00
                                           	.db	0x00
                                           	.db	0x00
                                           	.db	0x00
                                           	.db	0x00
                                           	.db	0x00
                                           	.db	0x00
                                           	.db	0x00
                                           ID_main_5	.idata
                                           _cleantime
                                           	.db	0x00, 0x00
                                           LDS_00000	.idata
                                           _Main_DataClean_old_data0_1_1
                                           	.db 0, 0
                                           LDS_00001	.idata
                                           _Main_DataClean_old_data1_1_1
                                           	.db 0, 0
                                           STARTUP	.code 0x0000
000000   0376     CLR	0x76                 	CLR 0x76
000001   0373     CLR	0x73                 	CLR 0x73
000002   e008     MOVP	#0x08               	PAGESEL	init_imp
000003   c855     JMP	#0x855               	JMP		init_imp
                                           INIT_IMP	.code
                                           init_imp
000855   e007     MOVP	#0x07               	PAGESEL	_startup
000856   d785     CALL	#0x785              	CALL	_startup
000857   e008     MOVP	#0x08               	PAGESEL	__gsinit_startup
000858   d85d     CALL	#0x85d              	CALL	__gsinit_startup
000859   9f00     MOV	R7, #0               	TRAPPC1	_main
00085a   5f73     MOV	0x73, R7             	TRAPPC2	_main
00085b   e000     MOVP	#0x00               	PAGESEL	_main
00085c   c010     JMP	#0x10                	JMP		_main
                                           interrupt_0x04	.code	0x4
000004   f8c2     MOV	R2, R0               	MOV		R2,R0
000005   5617     MOV	R3, 0x17             	MOV		R3,BANK
000006   5003     MOV	R0, 0x3              	MOV		R0,PSW
000007   e100     MOVB	#0x00               	BANKSEL	I0PSW
000008   51ee     MOV	0xee, R0             	MOV		I0PSW,R0
000009   53ec     MOV	0xec, R1             	MOV		I0R1,R1
00000a   5fed     MOV	0xed, R7             	MOV		I0R7,R7
00000b   6a76     SET	0x76, 2              	SET		TRAPRx76,2
00000c   9f07     MOV	R7, #0x7             	TRAPPC1	interrupt_service_routine_0x04
00000d   5f75     MOV	0x75, R7             	TRAPPC2	interrupt_service_routine_0x04
00000e   e007     MOVP	#0x07               	PAGESEL	interrupt_service_routine_0x04
00000f   c7aa     JMP	#0x7aa               	JMP		interrupt_service_routine_0x04
                                           func._int_fun0	.code
                                           _int_fun0	;Function start
                                           interrupt_service_routine_0x04
                                           ;	.line	197; "../main.c"	if(T1IE && T1IF)			//T1定时中断		500us gptrget1
0007aa   e100     MOVB	#0x00               	BANKSEL	_EIE1_bits
0007ab   782c     JB	0x2c, 0               	JB	_EIE1_bits, 0
0007ac   c7bd     JMP	#0x7bd               	JMP	_00104_DS_
                                           	BANKSEL	_EIF1_bits
0007ad   780c     JB	0xc, 0                	JB	_EIF1_bits, 0
0007ae   c7bd     JMP	#0x7bd               	JMP	_00104_DS_
                                           ;	.line	199; "../main.c"	T1IF=0;
                                           	BANKSEL	_EIF1_bits
0007af   600c     CLR	0xc, 0               	CLR	_EIF1_bits, 0
0007b0   0064     CWDT                     	CWDT 
                                           ;	.line	201; "../main.c"	Time_count++;
                                           	BANKSEL	_Time_count
0007b1   0bc9     INC	0xc9                 	INC	_Time_count
0007b2   7a03     JB	0x3, 2                	JB	PSW, 2
0007b3   c7b5     JMP	#0x7b5               	JMP	_00102_DS_
                                           	BANKSEL	_Time_count
0007b4   0bca     INC	0xca                 	INC	(_Time_count + 1)
                                           _00102_DS_
                                           ;	.line	202; "../main.c"	key_count++;
                                           	BANKSEL	_key_count
0007b5   0bc7     INC	0xc7                 	INC	_key_count
0007b6   7a03     JB	0x3, 2                	JB	PSW, 2
0007b7   c7b9     JMP	#0x7b9               	JMP	_00103_DS_
                                           	BANKSEL	_key_count
0007b8   0bc8     INC	0xc8                 	INC	(_key_count + 1)
                                           _00103_DS_
                                           ;	.line	203; "../main.c"	cleantime ++;
                                           	BANKSEL	_cleantime
0007b9   0bc3     INC	0xc3                 	INC	_cleantime
0007ba   7a03     JB	0x3, 2                	JB	PSW, 2
0007bb   c7bd     JMP	#0x7bd               	JMP	_00104_DS_
                                           	BANKSEL	_cleantime
0007bc   0bc4     INC	0xc4                 	INC	(_cleantime + 1)
                                           _00104_DS_
                                           	BANKSEL	I0R1
0007bd   52ec     MOV	R1, 0xec             	MOV	R1, I0R1
                                           	BANKSEL	I0R7
0007be   5eed     MOV	R7, 0xed             	MOV	R7, I0R7
                                           	BANKSEL	I0PSW
0007bf   50ee     MOV	R0, 0xee             	MOV	R0, I0PSW
0007c0   5103     MOV	0x3, R0              	MOV	PSW, R0
0007c1   5073     MOV	R0, 0x73             	MOV	R0, TRAPRx73
0007c2   7176     JNB	0x76, 1              	JNB	TRAPRx76, 1
0007c3   5074     MOV	R0, 0x74             	MOV	R0, TRAPRx74
0007c4   6276     CLR	0x76, 2              	CLR	TRAPRx76, 2
0007c5   510a     MOV	0xa, R0              	MOV	PCH, R0
0007c6   5717     MOV	0x17, R3             	MOV	BANK, R3
0007c7   f8d0     MOV	R0, R2               	MOV	R0, R2
0007c8   0009     IRET                     	IRET	
                                           func._int_fun1	.code
                                           _int_fun1	;Function start
                                           interrupt_service_routine_0x14
                                           _00093_DS_
                                           ;	.line	212; "../main.c"	}
                                           	IRET	
                                           func._main	.code
                                           _main	;Function start
                                           ;	.line	43; "../main.c"	PLLCTL =0xb3;     //2倍频
000010   98b3     MOV	R0, #0xb3            	MOV	R0,# 0xb3
000011   e105     MOVB	#0x05               	BANKSEL	_PLLCTL
000012   5116     MOV	0x16, R0             	MOV	_PLLCTL, R0
                                           ;	.line	44; "../main.c"	HFCKCTL =0xcf;//使能高频外设时钟，INTHF,16M
000013   98cf     MOV	R0, #0xcf            	MOV	R0,# 0xcf
000014   e100     MOVB	#0x00               	BANKSEL	_HFCKCTL
000015   516a     MOV	0x6a, R0             	MOV	_HFCKCTL, R0
                                           ;	.line	45; "../main.c"	SCLKCTL =0X7c;//禁止输出时钟，选择内部高频作为时钟源，分频器1:1分频
000016   987c     MOV	R0, #0x7c            	MOV	R0,# 0x7c
                                           	BANKSEL	_SCLKCTL
000017   5169     MOV	0x69, R0             	MOV	_SCLKCTL, R0
                                           ;	.line	53; "../main.c"	PORT_Init();
000018   9f07     MOV	R7, #0x7             	TRAPPC1	_PORT_Init
000019   5f73     MOV	0x73, R7             	TRAPPC2	_PORT_Init
00001a   e007     MOVP	#0x07               	PAGESEL	_PORT_Init
00001b   d731     CALL	#0x731              	CALL	_PORT_Init
00001c   9f00     MOV	R7, #0               	TRAPPC1	$+2
00001d   5f73     MOV	0x73, R7             	TRAPPC2	$+1
00001e   e000     MOVP	#0x00               	PAGESEL	$
                                           ;	.line	54; "../main.c"	Timer1_Init();
00001f   9f08     MOV	R7, #0x8             	TRAPPC1	_Timer1_Init
000020   5f73     MOV	0x73, R7             	TRAPPC2	_Timer1_Init
000021   e008     MOVP	#0x08               	PAGESEL	_Timer1_Init
000022   d835     CALL	#0x835              	CALL	_Timer1_Init
000023   9f00     MOV	R7, #0               	TRAPPC1	$+2
000024   5f73     MOV	0x73, R7             	TRAPPC2	$+1
000025   e000     MOVP	#0x00               	PAGESEL	$
                                           ;	.line	55; "../main.c"	UART2_Init();
000026   9f08     MOV	R7, #0x8             	TRAPPC1	_UART2_Init
000027   5f73     MOV	0x73, R7             	TRAPPC2	_UART2_Init
000028   e008     MOVP	#0x08               	PAGESEL	_UART2_Init
000029   d845     CALL	#0x845              	CALL	_UART2_Init
00002a   9f00     MOV	R7, #0               	TRAPPC1	$+2
00002b   5f73     MOV	0x73, R7             	TRAPPC2	$+1
00002c   e000     MOVP	#0x00               	PAGESEL	$
                                           ;	.line	56; "../main.c"	Init_ADC(0x01);
00002d   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	STK00
00002e   517e     MOV	0x7e, R0             	MOV	STK00, R0
00002f   9800     MOV	R0, #0               	MOV	R0,# 0x00
000030   9f05     MOV	R7, #0x5             	TRAPPC1	_Init_ADC
000031   5f73     MOV	0x73, R7             	TRAPPC2	_Init_ADC
000032   e005     MOVP	#0x05               	PAGESEL	_Init_ADC
000033   d5f7     CALL	#0x5f7              	CALL	_Init_ADC
000034   9f00     MOV	R7, #0               	TRAPPC1	$+2
000035   5f73     MOV	0x73, R7             	TRAPPC2	$+1
000036   e000     MOVP	#0x00               	PAGESEL	$
                                           ;	.line	59; "../main.c"	if(CAN_IDFilterConfig(0,1,0x24C0,0x0600) == OK) //配置CAN的识别的数据帧是，标准帧ID 为0x116 ，0x126 ，0x136//0x24c0 0x0f00
000037   9800     MOV	R0, #0               	MOV	R0,# 0x00
000038   e100     MOVB	#0x00               	BANKSEL	STK08
000039   51da     MOV	0xda, R0             	MOV	STK08, R0
00003a   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	STK07
00003b   51db     MOV	0xdb, R0             	MOV	STK07, R0
00003c   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	STK06
00003d   5178     MOV	0x78, R0             	MOV	STK06, R0
00003e   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	STK05
00003f   5179     MOV	0x79, R0             	MOV	STK05, R0
000040   98c0     MOV	R0, #0xc0            	MOV	R0,# 0xc0
                                           	BANKSEL	STK04
000041   517a     MOV	0x7a, R0             	MOV	STK04, R0
000042   9824     MOV	R0, #0x24            	MOV	R0,# 0x24
                                           	BANKSEL	STK03
000043   517b     MOV	0x7b, R0             	MOV	STK03, R0
000044   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	STK02
000045   517c     MOV	0x7c, R0             	MOV	STK02, R0
000046   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	STK01
000047   517d     MOV	0x7d, R0             	MOV	STK01, R0
000048   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	STK00
000049   517e     MOV	0x7e, R0             	MOV	STK00, R0
00004a   9800     MOV	R0, #0               	MOV	R0,# 0x00
00004b   9f01     MOV	R7, #0x1             	TRAPPC1	_CAN_IDFilterConfig
00004c   5f73     MOV	0x73, R7             	TRAPPC2	_CAN_IDFilterConfig
00004d   e001     MOVP	#0x01               	PAGESEL	_CAN_IDFilterConfig
00004e   d1cf     CALL	#0x1cf              	CALL	_CAN_IDFilterConfig
00004f   9f00     MOV	R7, #0               	TRAPPC1	$+2
000050   5f73     MOV	0x73, R7             	TRAPPC2	$+1
000051   e000     MOVP	#0x00               	PAGESEL	$
000052   e100     MOVB	#0x00               	BANKSEL	r0x102E
000053   5189     MOV	0x89, R0             	MOV	r0x102E, R0
                                           	BANKSEL	r0x102E
000054   0e89     MOVZ	R0, 0x89            	MOVZ	R0, r0x102E
000055   a801     XOR	R0, #0x1             	XOR	R0,# 0x01
000056   7a03     JB	0x3, 2                	JB	PSW, 2
000057   c068     JMP	#0x68                	JMP	_00002_DS_
                                           ;	.line	60; "../main.c"	CAN_Init(2,5,2,0,2);		//500K
000058   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
                                           	BANKSEL	STK03
000059   517b     MOV	0x7b, R0             	MOV	STK03, R0
00005a   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	STK02
00005b   517c     MOV	0x7c, R0             	MOV	STK02, R0
00005c   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
                                           	BANKSEL	STK01
00005d   517d     MOV	0x7d, R0             	MOV	STK01, R0
00005e   9805     MOV	R0, #0x5             	MOV	R0,# 0x05
                                           	BANKSEL	STK00
00005f   517e     MOV	0x7e, R0             	MOV	STK00, R0
000060   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
000061   9f06     MOV	R7, #0x6             	TRAPPC1	_CAN_Init
000062   5f73     MOV	0x73, R7             	TRAPPC2	_CAN_Init
000063   e006     MOVP	#0x06               	PAGESEL	_CAN_Init
000064   d6c7     CALL	#0x6c7              	CALL	_CAN_Init
000065   9f00     MOV	R7, #0               	TRAPPC1	$+2
000066   5f73     MOV	0x73, R7             	TRAPPC2	$+1
000067   e000     MOVP	#0x00               	PAGESEL	$
                                           _00002_DS_
                                           ;	.line	64; "../main.c"	PUIE = 1;
000068   e100     MOVB	#0x00               	BANKSEL	_INTCTL_bits
000069   6e0b     SET	0xb, 6               	SET	_INTCTL_bits, 6
                                           ;	.line	65; "../main.c"	AIE = 1;
                                           	BANKSEL	_INTCTL_bits
00006a   6f0b     SET	0xb, 7               	SET	_INTCTL_bits, 7
                                           ;	.line	66; "../main.c"	delay_ms(300);
00006b   982c     MOV	R0, #0x2c            	MOV	R0,# 0x2c
                                           	BANKSEL	STK00
00006c   517e     MOV	0x7e, R0             	MOV	STK00, R0
00006d   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
00006e   9f07     MOV	R7, #0x7             	TRAPPC1	_delay_ms
00006f   5f73     MOV	0x73, R7             	TRAPPC2	_delay_ms
000070   e007     MOVP	#0x07               	PAGESEL	_delay_ms
000071   d75f     CALL	#0x75f              	CALL	_delay_ms
000072   9f00     MOV	R7, #0               	TRAPPC1	$+2
000073   5f73     MOV	0x73, R7             	TRAPPC2	$+1
000074   e000     MOVP	#0x00               	PAGESEL	$
                                           _00027_DS_
                                           ;	.line	69; "../main.c"	keyl_detection();
000075   9f06     MOV	R7, #0x6             	TRAPPC1	_keyl_detection
000076   5f73     MOV	0x73, R7             	TRAPPC2	_keyl_detection
000077   e006     MOVP	#0x06               	PAGESEL	_keyl_detection
000078   d682     CALL	#0x682              	CALL	_keyl_detection
000079   9f00     MOV	R7, #0               	TRAPPC1	$+2
00007a   5f73     MOV	0x73, R7             	TRAPPC2	$+1
00007b   e000     MOVP	#0x00               	PAGESEL	$
00007c   0000     NOP                      	NOP 
00007d   0000     NOP                      	NOP 
00007e   0000     NOP                      	NOP 
00007f   0000     NOP                      	NOP 
                                           ;	.line	74; "../main.c"	keyr_detection();
000080   9f06     MOV	R7, #0x6             	TRAPPC1	_keyr_detection
000081   5f73     MOV	0x73, R7             	TRAPPC2	_keyr_detection
000082   e006     MOVP	#0x06               	PAGESEL	_keyr_detection
000083   d63d     CALL	#0x63d              	CALL	_keyr_detection
000084   9f00     MOV	R7, #0               	TRAPPC1	$+2
000085   5f73     MOV	0x73, R7             	TRAPPC2	$+1
000086   e000     MOVP	#0x00               	PAGESEL	$
                                           ;	.line	78; "../main.c"	if(Time_count>=100)			//500ms
000087   9800     MOV	R0, #0               	MOV	R0,# 0x00
000088   e100     MOVB	#0x00               	BANKSEL	_Time_count
000089   38ca     SUB	R0, 0xca             	SUB	R0, (_Time_count + 1)
00008a   7a03     JB	0x3, 2                	JB	PSW, 2
00008b   c08e     JMP	#0x8e                	JMP	_00059_DS_
00008c   9864     MOV	R0, #0x64            	MOV	R0,# 0x64
                                           	BANKSEL	_Time_count
00008d   38c9     SUB	R0, 0xc9             	SUB	R0, _Time_count
                                           _00059_DS_
00008e   7803     JB	0x3, 0                	JB	PSW, 0
00008f   c0fd     JMP	#0xfd                	JMP	_00018_DS_
                                           ;	.line	80; "../main.c"	Time_count=0;
                                           	BANKSEL	_Time_count
000090   03c9     CLR	0xc9                 	CLR	_Time_count
                                           	BANKSEL	_Time_count
000091   03ca     CLR	0xca                 	CLR	(_Time_count + 1)
                                           ;	.line	83; "../main.c"	Status_fram =0;
                                           	BANKSEL	_Status_fram
000092   0380     CLR	0x80                 	CLR	_Status_fram
                                           ;	.line	84; "../main.c"	Data_fram =0;
                                           	BANKSEL	_Data_fram
000093   038b     CLR	0x8b                 	CLR	_Data_fram
                                           ;	.line	85; "../main.c"	Fram_lenth =8;
000094   9808     MOV	R0, #0x8             	MOV	R0,# 0x08
                                           	BANKSEL	_Fram_lenth
000095   518a     MOV	0x8a, R0             	MOV	_Fram_lenth, R0
                                           ;	.line	86; "../main.c"	ID_fram =0x243;
000096   9843     MOV	R0, #0x43            	MOV	R0,# 0x43
                                           	BANKSEL	_ID_fram
000097   51c5     MOV	0xc5, R0             	MOV	_ID_fram, R0
000098   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
                                           	BANKSEL	_ID_fram
000099   51c6     MOV	0xc6, R0             	MOV	(_ID_fram + 1), R0
                                           ;	.line	89; "../main.c"	while(!TXBSTA)//等待CPU可以访问发送缓冲器
                                           	BANKSEL	r0x102E
00009a   0389     CLR	0x89                 	CLR	r0x102E
                                           	BANKSEL	r0x102F
00009b   0388     CLR	0x88                 	CLR	r0x102F
                                           _00005_DS_
00009c   e105     MOVB	#0x05               	BANKSEL	_CANSTA_bits
00009d   723f     JNB	0x3f, 2              	JNB	_CANSTA_bits, 2
00009e   c0b1     JMP	#0xb1                	JMP	_00007_DS_
                                           ;	.line	91; "../main.c"	P3LR0 =!P3LR0;
00009f   e100     MOVB	#0x00               	BANKSEL	_P3LR_bits
0000a0   7848     JB	0x48, 0               	JB	_P3LR_bits, 0
0000a1   c0a4     JMP	#0xa4                	JMP	_00060_DS_
                                           	BANKSEL	_P3LR_bits
0000a2   6048     CLR	0x48, 0              	CLR	_P3LR_bits, 0
0000a3   c0a5     JMP	#0xa5                	JMP	_00061_DS_
                                           _00060_DS_
                                           	BANKSEL	_P3LR_bits
0000a4   6848     SET	0x48, 0              	SET	_P3LR_bits, 0
                                           _00061_DS_
                                           ;	.line	92; "../main.c"	if(++Delay_Count>0xFE0)
                                           	BANKSEL	r0x102E
0000a5   0b89     INC	0x89                 	INC	r0x102E
0000a6   7a03     JB	0x3, 2                	JB	PSW, 2
0000a7   c0a9     JMP	#0xa9                	JMP	_00095_DS_
                                           	BANKSEL	r0x102F
0000a8   0b88     INC	0x88                 	INC	r0x102F
                                           _00095_DS_
0000a9   980f     MOV	R0, #0xf             	MOV	R0,# 0x0f
                                           	BANKSEL	r0x102F
0000aa   3888     SUB	R0, 0x88             	SUB	R0, r0x102F
0000ab   7a03     JB	0x3, 2                	JB	PSW, 2
0000ac   c0af     JMP	#0xaf                	JMP	_00062_DS_
0000ad   98e1     MOV	R0, #0xe1            	MOV	R0,# 0xe1
                                           	BANKSEL	r0x102E
0000ae   3889     SUB	R0, 0x89             	SUB	R0, r0x102E
                                           _00062_DS_
0000af   7803     JB	0x3, 0                	JB	PSW, 0
0000b0   c09c     JMP	#0x9c                	JMP	_00005_DS_
                                           _00007_DS_
                                           ;	.line	96; "../main.c"	CANTXINF = (Status_fram<<7)|(Data_fram<<6)|Fram_lenth;
0000b1   9808     MOV	R0, #0x8             	MOV	R0,# 0x08
0000b2   e105     MOVB	#0x05               	BANKSEL	_CANTXINF
0000b3   5130     MOV	0x30, R0             	MOV	_CANTXINF, R0
                                           ;	.line	99; "../main.c"	ID_fram <<=5;
0000b4   9805     MOV	R0, #0x5             	MOV	R0,# 0x05
0000b5   ff10     INC	R0                   	INC	R0
0000b6   c0bb     JMP	#0xbb                	JMP	_00064_DS_
                                           _00063_DS_
0000b7   6003     CLR	0x3, 0               	CLR	PSW, 0
0000b8   e100     MOVB	#0x00               	BANKSEL	_ID_fram
0000b9   13c5     RLC	0xc5                 	RLC	_ID_fram
                                           	BANKSEL	_ID_fram
0000ba   13c6     RLC	0xc6                 	RLC	(_ID_fram + 1)
                                           _00064_DS_
0000bb   ff58     DECJZ	R0                 	DECJZ	R0
0000bc   c0b7     JMP	#0xb7                	JMP	_00063_DS_
                                           ;	.line	100; "../main.c"	CANTXID0=ID_fram >> 8;
0000bd   e100     MOVB	#0x00               	BANKSEL	_ID_fram
0000be   0ec6     MOVZ	R0, 0xc6            	MOVZ	R0, (_ID_fram + 1)
                                           	BANKSEL	r0x102E
0000bf   5189     MOV	0x89, R0             	MOV	r0x102E, R0
                                           	BANKSEL	r0x102F
0000c0   0388     CLR	0x88                 	CLR	r0x102F
                                           	BANKSEL	r0x102E
0000c1   0e89     MOVZ	R0, 0x89            	MOVZ	R0, r0x102E
0000c2   e105     MOVB	#0x05               	BANKSEL	_CANTXID0
0000c3   5131     MOV	0x31, R0             	MOV	_CANTXID0, R0
                                           ;	.line	101; "../main.c"	CANTXID1=(unsigned char)ID_fram;
0000c4   e100     MOVB	#0x00               	BANKSEL	_ID_fram
0000c5   0ec5     MOVZ	R0, 0xc5            	MOVZ	R0, _ID_fram
0000c6   e105     MOVB	#0x05               	BANKSEL	_CANTXID1
0000c7   5132     MOV	0x32, R0             	MOV	_CANTXID1, R0
                                           ;	.line	104; "../main.c"	CANTXID2=TX_Data[0];
0000c8   e100     MOVB	#0x00               	BANKSEL	_TX_Data
0000c9   0ee4     MOVZ	R0, 0xe4            	MOVZ	R0,  (_TX_Data + 0)
0000ca   e105     MOVB	#0x05               	BANKSEL	_CANTXID2
0000cb   5133     MOV	0x33, R0             	MOV	_CANTXID2, R0
                                           ;	.line	105; "../main.c"	CANTXID3=TX_Data[1];
0000cc   e100     MOVB	#0x00               	BANKSEL	_TX_Data
0000cd   0ee5     MOVZ	R0, 0xe5            	MOVZ	R0,  (_TX_Data + 1)
0000ce   e105     MOVB	#0x05               	BANKSEL	_CANTXID3
0000cf   5134     MOV	0x34, R0             	MOV	_CANTXID3, R0
                                           ;	.line	106; "../main.c"	CANTXDT0=TX_Data[2];
0000d0   e100     MOVB	#0x00               	BANKSEL	_TX_Data
0000d1   0ee6     MOVZ	R0, 0xe6            	MOVZ	R0,  (_TX_Data + 2)
0000d2   e105     MOVB	#0x05               	BANKSEL	_CANTXDT0
0000d3   5135     MOV	0x35, R0             	MOV	_CANTXDT0, R0
                                           ;	.line	107; "../main.c"	CANTXDT1=TX_Data[3];
0000d4   e100     MOVB	#0x00               	BANKSEL	_TX_Data
0000d5   0ee7     MOVZ	R0, 0xe7            	MOVZ	R0,  (_TX_Data + 3)
0000d6   e105     MOVB	#0x05               	BANKSEL	_CANTXDT1
0000d7   5136     MOV	0x36, R0             	MOV	_CANTXDT1, R0
                                           ;	.line	108; "../main.c"	CANTXDT2=TX_Data[4];
0000d8   e100     MOVB	#0x00               	BANKSEL	_TX_Data
0000d9   0ee8     MOVZ	R0, 0xe8            	MOVZ	R0,  (_TX_Data + 4)
0000da   e105     MOVB	#0x05               	BANKSEL	_CANTXDT2
0000db   5137     MOV	0x37, R0             	MOV	_CANTXDT2, R0
                                           ;	.line	109; "../main.c"	CANTXDT3=TX_Data[5];
0000dc   e100     MOVB	#0x00               	BANKSEL	_TX_Data
0000dd   0ee9     MOVZ	R0, 0xe9            	MOVZ	R0,  (_TX_Data + 5)
0000de   e105     MOVB	#0x05               	BANKSEL	_CANTXDT3
0000df   5138     MOV	0x38, R0             	MOV	_CANTXDT3, R0
                                           ;	.line	110; "../main.c"	CANTXDT4=TX_Data[6];
0000e0   e100     MOVB	#0x00               	BANKSEL	_TX_Data
0000e1   0eea     MOVZ	R0, 0xea            	MOVZ	R0,  (_TX_Data + 6)
0000e2   e105     MOVB	#0x05               	BANKSEL	_CANTXDT4
0000e3   5139     MOV	0x39, R0             	MOV	_CANTXDT4, R0
                                           ;	.line	111; "../main.c"	CANTXDT5=TX_Data[7];
0000e4   e100     MOVB	#0x00               	BANKSEL	_TX_Data
0000e5   0eeb     MOVZ	R0, 0xeb            	MOVZ	R0,  (_TX_Data + 7)
0000e6   e105     MOVB	#0x05               	BANKSEL	_CANTXDT5
0000e7   513a     MOV	0x3a, R0             	MOV	_CANTXDT5, R0
                                           ;	.line	116; "../main.c"	CANCMR = 0x03;
0000e8   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	_CANCMR
0000e9   513e     MOV	0x3e, R0             	MOV	_CANCMR, R0
                                           ;	.line	119; "../main.c"	while(!TCSTA)
0000ea   e100     MOVB	#0x00               	BANKSEL	r0x102E
0000eb   0389     CLR	0x89                 	CLR	r0x102E
                                           	BANKSEL	r0x102F
0000ec   0388     CLR	0x88                 	CLR	r0x102F
                                           _00014_DS_
0000ed   e105     MOVB	#0x05               	BANKSEL	_CANSTA_bits
0000ee   733f     JNB	0x3f, 3              	JNB	_CANSTA_bits, 3
0000ef   c0fd     JMP	#0xfd                	JMP	_00018_DS_
                                           ;	.line	121; "../main.c"	if(++Delay_Count>0xFE0)
0000f0   e100     MOVB	#0x00               	BANKSEL	r0x102E
0000f1   0b89     INC	0x89                 	INC	r0x102E
0000f2   7a03     JB	0x3, 2                	JB	PSW, 2
0000f3   c0f5     JMP	#0xf5                	JMP	_00096_DS_
                                           	BANKSEL	r0x102F
0000f4   0b88     INC	0x88                 	INC	r0x102F
                                           _00096_DS_
0000f5   980f     MOV	R0, #0xf             	MOV	R0,# 0x0f
                                           	BANKSEL	r0x102F
0000f6   3888     SUB	R0, 0x88             	SUB	R0, r0x102F
0000f7   7a03     JB	0x3, 2                	JB	PSW, 2
0000f8   c0fb     JMP	#0xfb                	JMP	_00065_DS_
0000f9   98e1     MOV	R0, #0xe1            	MOV	R0,# 0xe1
                                           	BANKSEL	r0x102E
0000fa   3889     SUB	R0, 0x89             	SUB	R0, r0x102E
                                           _00065_DS_
0000fb   7803     JB	0x3, 0                	JB	PSW, 0
0000fc   c0ed     JMP	#0xed                	JMP	_00014_DS_
                                           _00018_DS_
                                           ;	.line	129; "../main.c"	if(CANRXIF)
0000fd   e105     MOVB	#0x05               	BANKSEL	_CANIF_bits
0000fe   7819     JB	0x19, 0               	JB	_CANIF_bits, 0
0000ff   c075     JMP	#0x75                	JMP	_00027_DS_
                                           ;	.line	132; "../main.c"	if(can_data_hand<8)
000100   9808     MOV	R0, #0x8             	MOV	R0,# 0x08
000101   e100     MOVB	#0x00               	BANKSEL	_can_data_hand
000102   3881     SUB	R0, 0x81             	SUB	R0, _can_data_hand
000103   7003     JNB	0x3, 0               	JNB	PSW, 0
000104   c122     JMP	#0x122               	JMP	_00020_DS_
                                           ;	.line	134; "../main.c"	can_point =0x1C80 + can_data_hand * 0x10;
000105   9810     MOV	R0, #0x10            	MOV	R0,# 0x10
                                           	BANKSEL	STK02
000106   517c     MOV	0x7c, R0             	MOV	STK02, R0
000107   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	STK01
000108   517d     MOV	0x7d, R0             	MOV	STK01, R0
                                           	BANKSEL	_can_data_hand
000109   0e81     MOVZ	R0, 0x81            	MOVZ	R0, _can_data_hand
                                           	BANKSEL	STK00
00010a   517e     MOV	0x7e, R0             	MOV	STK00, R0
00010b   9800     MOV	R0, #0               	MOV	R0,# 0x00
00010c   9f08     MOV	R7, #0x8             	TRAPPC1	__hmulint
00010d   5f73     MOV	0x73, R7             	TRAPPC2	__hmulint
00010e   e008     MOVP	#0x08               	PAGESEL	__hmulint
00010f   d823     CALL	#0x823              	CALL	__hmulint
000110   9f01     MOV	R7, #0x1             	TRAPPC1	$+2
000111   5f73     MOV	0x73, R7             	TRAPPC2	$+1
000112   e001     MOVP	#0x01               	PAGESEL	$
000113   e100     MOVB	#0x00               	BANKSEL	r0x102F
000114   5188     MOV	0x88, R0             	MOV	r0x102F, R0
                                           	BANKSEL	STK00
000115   507e     MOV	R0, 0x7e             	MOV	R0, STK00
                                           	BANKSEL	r0x102E
000116   5189     MOV	0x89, R0             	MOV	r0x102E, R0
000117   9880     MOV	R0, #0x80            	MOV	R0,# 0x80
                                           	BANKSEL	r0x102E
000118   2189     ADD	0x89, R0             	ADD	r0x102E, R0
000119   981c     MOV	R0, #0x1c            	MOV	R0,# 0x1c
00011a   7003     JNB	0x3, 0               	JNB	PSW, 0
00011b   981d     MOV	R0, #0x1d            	MOV	R0,# 0x1d
                                           	BANKSEL	r0x102F
00011c   2188     ADD	0x88, R0             	ADD	r0x102F, R0
                                           	BANKSEL	r0x102E
00011d   0e89     MOVZ	R0, 0x89            	MOVZ	R0, r0x102E
                                           	BANKSEL	r0x1030
00011e   5187     MOV	0x87, R0             	MOV	r0x1030, R0
                                           	BANKSEL	r0x102F
00011f   0e88     MOVZ	R0, 0x88            	MOVZ	R0, r0x102F
                                           	BANKSEL	r0x1031
000120   5186     MOV	0x86, R0             	MOV	r0x1031, R0
000121   c146     JMP	#0x146               	JMP	_00021_DS_
                                           _00020_DS_
                                           ;	.line	138; "../main.c"	can_point =0x1D80+(can_data_hand-8)*0x10;
                                           	BANKSEL	_can_data_hand
000122   0e81     MOVZ	R0, 0x81            	MOVZ	R0, _can_data_hand
                                           	BANKSEL	r0x102E
000123   5189     MOV	0x89, R0             	MOV	r0x102E, R0
                                           	BANKSEL	r0x102F
000124   0388     CLR	0x88                 	CLR	r0x102F
000125   98f8     MOV	R0, #0xf8            	MOV	R0,# 0xf8
                                           	BANKSEL	r0x102E
000126   2189     ADD	0x89, R0             	ADD	r0x102E, R0
000127   7003     JNB	0x3, 0               	JNB	PSW, 0
000128   c12a     JMP	#0x12a               	JMP	_00097_DS_
                                           	BANKSEL	r0x102F
000129   0788     DEC	0x88                 	DEC	r0x102F
                                           _00097_DS_
                                           	BANKSEL	r0x102E
00012a   0e89     MOVZ	R0, 0x89            	MOVZ	R0, r0x102E
                                           	BANKSEL	r0x1032
00012b   5185     MOV	0x85, R0             	MOV	r0x1032, R0
                                           	BANKSEL	r0x102F
00012c   0e88     MOVZ	R0, 0x88            	MOVZ	R0, r0x102F
                                           	BANKSEL	r0x1033
00012d   5184     MOV	0x84, R0             	MOV	r0x1033, R0
00012e   9804     MOV	R0, #0x4             	MOV	R0,# 0x04
00012f   ff10     INC	R0                   	INC	R0
000130   c135     JMP	#0x135               	JMP	_00068_DS_
                                           _00067_DS_
000131   6003     CLR	0x3, 0               	CLR	PSW, 0
000132   e100     MOVB	#0x00               	BANKSEL	r0x1032
000133   1385     RLC	0x85                 	RLC	r0x1032
                                           	BANKSEL	r0x1033
000134   1384     RLC	0x84                 	RLC	r0x1033
                                           _00068_DS_
000135   ff58     DECJZ	R0                 	DECJZ	R0
000136   c131     JMP	#0x131               	JMP	_00067_DS_
000137   9880     MOV	R0, #0x80            	MOV	R0,# 0x80
                                           	BANKSEL	r0x1032
000138   2085     ADD	R0, 0x85             	ADD	R0, r0x1032
                                           	BANKSEL	r0x102E
000139   5189     MOV	0x89, R0             	MOV	r0x102E, R0
00013a   981d     MOV	R0, #0x1d            	MOV	R0,# 0x1d
                                           	BANKSEL	r0x102F
00013b   5188     MOV	0x88, R0             	MOV	r0x102F, R0
                                           	BANKSEL	r0x1033
00013c   0e84     MOVZ	R0, 0x84            	MOVZ	R0, r0x1033
00013d   7003     JNB	0x3, 0               	JNB	PSW, 0
00013e   ff10     INC	R0                   	INC	R0
00013f   7203     JNB	0x3, 2               	JNB	PSW, 2
000140   c142     JMP	#0x142               	JMP	_00098_DS_
                                           	BANKSEL	r0x102F
000141   2188     ADD	0x88, R0             	ADD	r0x102F, R0
                                           _00098_DS_
                                           	BANKSEL	r0x102E
000142   0e89     MOVZ	R0, 0x89            	MOVZ	R0, r0x102E
                                           	BANKSEL	r0x1030
000143   5187     MOV	0x87, R0             	MOV	r0x1030, R0
                                           	BANKSEL	r0x102F
000144   0e88     MOVZ	R0, 0x88            	MOVZ	R0, r0x102F
                                           	BANKSEL	r0x1031
000145   5186     MOV	0x86, R0             	MOV	r0x1031, R0
                                           _00021_DS_
                                           ;	.line	140; "../main.c"	can_data_hand++;//指针+1
                                           	BANKSEL	_can_data_hand
000146   0b81     INC	0x81                 	INC	_can_data_hand
                                           ;	.line	141; "../main.c"	if(can_data_hand==16)//若指针指向15以上，返回0
                                           	BANKSEL	_can_data_hand
000147   0e81     MOVZ	R0, 0x81            	MOVZ	R0, _can_data_hand
                                           ;	.line	143; "../main.c"	can_data_hand=0;
000148   a810     XOR	R0, #0x10            	XOR	R0,# 0x10
                                           ;	.line	146; "../main.c"	for(i=0;i<13;i++)
000149   7a03     JB	0x3, 2                	JB	PSW, 2
00014a   c14c     JMP	#0x14c               	JMP	_00099_DS_
                                           	BANKSEL	_can_data_hand
00014b   0381     CLR	0x81                 	CLR	_can_data_hand
                                           _00099_DS_
                                           	BANKSEL	r0x102E
00014c   0389     CLR	0x89                 	CLR	r0x102E
                                           _00029_DS_
00014d   980d     MOV	R0, #0xd             	MOV	R0,# 0x0d
                                           	BANKSEL	r0x102E
00014e   3889     SUB	R0, 0x89             	SUB	R0, r0x102E
00014f   7003     JNB	0x3, 0               	JNB	PSW, 0
000150   c174     JMP	#0x174               	JMP	_00032_DS_
                                           ;	.line	148; "../main.c"	CAN_Rev_BUF[i]=*((unsigned char *)(can_point+i));
                                           	BANKSEL	r0x102E
000151   5089     MOV	R0, 0x89             	MOV	R0, r0x102E
000152   8080     ADD	R0, #0x80            	ADD	R0,# (_CAN_Rev_BUF + 0)
                                           	BANKSEL	r0x102F
000153   5188     MOV	0x88, R0             	MOV	r0x102F, R0
                                           	BANKSEL	r0x102E
000154   0e89     MOVZ	R0, 0x89            	MOVZ	R0, r0x102E
                                           	BANKSEL	r0x1033
000155   5184     MOV	0x84, R0             	MOV	r0x1033, R0
                                           	BANKSEL	r0x1034
000156   0383     CLR	0x83                 	CLR	r0x1034
                                           	BANKSEL	r0x1030
000157   5087     MOV	R0, 0x87             	MOV	R0, r0x1030
                                           	BANKSEL	r0x1033
000158   2184     ADD	0x84, R0             	ADD	r0x1033, R0
                                           	BANKSEL	r0x1031
000159   0e86     MOVZ	R0, 0x86            	MOVZ	R0, r0x1031
00015a   7003     JNB	0x3, 0               	JNB	PSW, 0
00015b   ff10     INC	R0                   	INC	R0
00015c   7203     JNB	0x3, 2               	JNB	PSW, 2
00015d   c15f     JMP	#0x15f               	JMP	_00100_DS_
                                           	BANKSEL	r0x1034
00015e   2183     ADD	0x83, R0             	ADD	r0x1034, R0
                                           _00100_DS_
                                           	BANKSEL	r0x1033
00015f   0e84     MOVZ	R0, 0x84            	MOVZ	R0, r0x1033
                                           	BANKSEL	STK01
000160   517d     MOV	0x7d, R0             	MOV	STK01, R0
                                           	BANKSEL	r0x1034
000161   0e83     MOVZ	R0, 0x83            	MOVZ	R0, r0x1034
                                           	BANKSEL	STK00
000162   517e     MOV	0x7e, R0             	MOV	STK00, R0
000163   9800     MOV	R0, #0               	MOV	R0,# 0x00
000164   9f07     MOV	R7, #0x7             	TRAPPC1	__gptrget1
000165   5f73     MOV	0x73, R7             	TRAPPC2	__gptrget1
000166   e007     MOVP	#0x07               	PAGESEL	__gptrget1
000167   d7fd     CALL	#0x7fd              	CALL	__gptrget1
000168   9f01     MOV	R7, #0x1             	TRAPPC1	$+2
000169   5f73     MOV	0x73, R7             	TRAPPC2	$+1
00016a   e001     MOVP	#0x01               	PAGESEL	$
00016b   e100     MOVB	#0x00               	BANKSEL	r0x1033
00016c   5184     MOV	0x84, R0             	MOV	r0x1033, R0
                                           	BANKSEL	r0x1033
00016d   0e84     MOVZ	R0, 0x84            	MOVZ	R0, r0x1033
                                           	BANKSEL	r0x102F
00016e   5288     MOV	R1, 0x88             	MOV	R1, r0x102F
00016f   e101     MOVB	#0x01               	BANKSEL	_CAN_Rev_BUF
000170   f741     ST	[R1], R0              	ST	[R1], R0
                                           ;	.line	146; "../main.c"	for(i=0;i<13;i++)
000171   e100     MOVB	#0x00               	BANKSEL	r0x102E
000172   0b89     INC	0x89                 	INC	r0x102E
000173   c14d     JMP	#0x14d               	JMP	_00029_DS_
                                           _00032_DS_
                                           ;	.line	151; "../main.c"	Status_fram =(CAN_Rev_BUF[0]&0x80) >>7; //0是标准帧
000174   e101     MOVB	#0x01               	BANKSEL	_CAN_Rev_BUF
000175   0e80     MOVZ	R0, 0x80            	MOVZ	R0,  (_CAN_Rev_BUF + 0)
000176   e100     MOVB	#0x00               	BANKSEL	r0x102E
000177   5189     MOV	0x89, R0             	MOV	r0x102E, R0
000178   9880     MOV	R0, #0x80            	MOV	R0,# 0x80
                                           	BANKSEL	r0x102E
000179   2989     AND	0x89, R0             	AND	r0x102E, R0
                                           	BANKSEL	r0x102E
00017a   1289     RLCR	0x89                	RLCR	r0x102E
                                           	BANKSEL	_Status_fram
00017b   0380     CLR	0x80                 	CLR	_Status_fram
                                           	BANKSEL	_Status_fram
00017c   1380     RLC	0x80                 	RLC	_Status_fram
                                           ;	.line	152; "../main.c"	Data_fram =(CAN_Rev_BUF[0]&0x40) >>6; //0是数据帧
00017d   e101     MOVB	#0x01               	BANKSEL	_CAN_Rev_BUF
00017e   0e80     MOVZ	R0, 0x80            	MOVZ	R0,  (_CAN_Rev_BUF + 0)
00017f   e100     MOVB	#0x00               	BANKSEL	r0x102E
000180   5189     MOV	0x89, R0             	MOV	r0x102E, R0
000181   9840     MOV	R0, #0x40            	MOV	R0,# 0x40
                                           	BANKSEL	r0x102E
000182   2989     AND	0x89, R0             	AND	r0x102E, R0
                                           	BANKSEL	r0x102E
000183   4089     SWAPR	R0, 0x89           	SWAPR	R0, r0x102E
000184   880f     AND	R0, #0xf             	AND	R0,# 0x0f
                                           	BANKSEL	_Data_fram
000185   518b     MOV	0x8b, R0             	MOV	_Data_fram, R0
000186   6003     CLR	0x3, 0               	CLR	PSW, 0
                                           	BANKSEL	_Data_fram
000187   118b     RRC	0x8b                 	RRC	_Data_fram
000188   6003     CLR	0x3, 0               	CLR	PSW, 0
                                           	BANKSEL	_Data_fram
000189   118b     RRC	0x8b                 	RRC	_Data_fram
                                           ;	.line	153; "../main.c"	Fram_lenth =CAN_Rev_BUF[0]&0x0F; //数据长度
00018a   e101     MOVB	#0x01               	BANKSEL	_CAN_Rev_BUF
00018b   0e80     MOVZ	R0, 0x80            	MOVZ	R0,  (_CAN_Rev_BUF + 0)
00018c   e100     MOVB	#0x00               	BANKSEL	r0x102E
00018d   5189     MOV	0x89, R0             	MOV	r0x102E, R0
00018e   980f     MOV	R0, #0xf             	MOV	R0,# 0x0f
                                           	BANKSEL	r0x102E
00018f   2889     AND	R0, 0x89             	AND	R0, r0x102E
                                           	BANKSEL	_Fram_lenth
000190   518a     MOV	0x8a, R0             	MOV	_Fram_lenth, R0
                                           ;	.line	155; "../main.c"	ID_fram =CAN_Rev_BUF[1];
000191   e101     MOVB	#0x01               	BANKSEL	_CAN_Rev_BUF
000192   0e81     MOVZ	R0, 0x81            	MOVZ	R0,  (_CAN_Rev_BUF + 1)
000193   e100     MOVB	#0x00               	BANKSEL	r0x102E
000194   5189     MOV	0x89, R0             	MOV	r0x102E, R0
                                           	BANKSEL	_ID_fram
000195   51c5     MOV	0xc5, R0             	MOV	_ID_fram, R0
                                           	BANKSEL	_ID_fram
000196   03c6     CLR	0xc6                 	CLR	(_ID_fram + 1)
                                           ;	.line	156; "../main.c"	ID_fram <<=8;
                                           	BANKSEL	_ID_fram
000197   0ec5     MOVZ	R0, 0xc5            	MOVZ	R0, _ID_fram
                                           	BANKSEL	_ID_fram
000198   51c6     MOV	0xc6, R0             	MOV	(_ID_fram + 1), R0
                                           	BANKSEL	_ID_fram
000199   03c5     CLR	0xc5                 	CLR	_ID_fram
                                           ;	.line	157; "../main.c"	ID_fram += CAN_Rev_BUF[2];
00019a   e101     MOVB	#0x01               	BANKSEL	_CAN_Rev_BUF
00019b   0e82     MOVZ	R0, 0x82            	MOVZ	R0,  (_CAN_Rev_BUF + 2)
00019c   e100     MOVB	#0x00               	BANKSEL	r0x102E
00019d   5189     MOV	0x89, R0             	MOV	r0x102E, R0
                                           	BANKSEL	r0x102E
00019e   0e89     MOVZ	R0, 0x89            	MOVZ	R0, r0x102E
                                           	BANKSEL	r0x102F
00019f   5188     MOV	0x88, R0             	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
0001a0   0387     CLR	0x87                 	CLR	r0x1030
                                           	BANKSEL	r0x102F
0001a1   5088     MOV	R0, 0x88             	MOV	R0, r0x102F
                                           	BANKSEL	_ID_fram
0001a2   21c5     ADD	0xc5, R0             	ADD	_ID_fram, R0
0001a3   9800     MOV	R0, #0               	MOV	R0,# 0x00
0001a4   7003     JNB	0x3, 0               	JNB	PSW, 0
0001a5   ff10     INC	R0                   	INC	R0
0001a6   7203     JNB	0x3, 2               	JNB	PSW, 2
0001a7   c1a9     JMP	#0x1a9               	JMP	_00101_DS_
                                           	BANKSEL	_ID_fram
0001a8   21c6     ADD	0xc6, R0             	ADD	(_ID_fram + 1), R0
                                           _00101_DS_
                                           ;	.line	158; "../main.c"	ID_fram >>=5; //数据长度
0001a9   9805     MOV	R0, #0x5             	MOV	R0,# 0x05
0001aa   ff10     INC	R0                   	INC	R0
0001ab   c1b0     JMP	#0x1b0               	JMP	_00071_DS_
                                           _00070_DS_
0001ac   6003     CLR	0x3, 0               	CLR	PSW, 0
0001ad   e100     MOVB	#0x00               	BANKSEL	_ID_fram
0001ae   11c6     RRC	0xc6                 	RRC	(_ID_fram + 1)
                                           	BANKSEL	_ID_fram
0001af   11c5     RRC	0xc5                 	RRC	_ID_fram
                                           _00071_DS_
0001b0   ff58     DECJZ	R0                 	DECJZ	R0
0001b1   c1ac     JMP	#0x1ac               	JMP	_00070_DS_
                                           ;	.line	159; "../main.c"	for (i =0;i<8;i++)
                                           	BANKSEL	r0x102E
0001b2   0389     CLR	0x89                 	CLR	r0x102E
                                           _00033_DS_
0001b3   9808     MOV	R0, #0x8             	MOV	R0,# 0x08
                                           	BANKSEL	r0x102E
0001b4   3889     SUB	R0, 0x89             	SUB	R0, r0x102E
0001b5   7003     JNB	0x3, 0               	JNB	PSW, 0
0001b6   c1c9     JMP	#0x1c9               	JMP	_00036_DS_
                                           ;	.line	161; "../main.c"	Data[i]=CAN_Rev_BUF[i+3];
                                           	BANKSEL	r0x102E
0001b7   5089     MOV	R0, 0x89             	MOV	R0, r0x102E
0001b8   80dc     ADD	R0, #0xdc            	ADD	R0,# (_Data + 0)
                                           	BANKSEL	r0x102F
0001b9   5188     MOV	0x88, R0             	MOV	r0x102F, R0
0001ba   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	r0x102E
0001bb   2089     ADD	R0, 0x89             	ADD	R0, r0x102E
                                           	BANKSEL	r0x1031
0001bc   5186     MOV	0x86, R0             	MOV	r0x1031, R0
0001bd   9880     MOV	R0, #0x80            	MOV	R0,# (_CAN_Rev_BUF + 0)
                                           	BANKSEL	r0x1031
0001be   2186     ADD	0x86, R0             	ADD	r0x1031, R0
                                           	BANKSEL	r0x1031
0001bf   5286     MOV	R1, 0x86             	MOV	R1, r0x1031
0001c0   e101     MOVB	#0x01               	BANKSEL	_CAN_Rev_BUF
0001c1   f708     LD	R0, [R1]              	LD	R0, [R1]
0001c2   e100     MOVB	#0x00               	BANKSEL	r0x1033
0001c3   5184     MOV	0x84, R0             	MOV	r0x1033, R0
                                           	BANKSEL	r0x1033
0001c4   0e84     MOVZ	R0, 0x84            	MOVZ	R0, r0x1033
                                           	BANKSEL	r0x102F
0001c5   5288     MOV	R1, 0x88             	MOV	R1, r0x102F
                                           	BANKSEL	_Data
0001c6   f741     ST	[R1], R0              	ST	[R1], R0
                                           ;	.line	159; "../main.c"	for (i =0;i<8;i++)
                                           	BANKSEL	r0x102E
0001c7   0b89     INC	0x89                 	INC	r0x102E
0001c8   c1b3     JMP	#0x1b3               	JMP	_00033_DS_
                                           _00036_DS_
                                           ;	.line	165; "../main.c"	CANCMR = 0x04;//促使信息计数器减1
0001c9   9804     MOV	R0, #0x4             	MOV	R0,# 0x04
0001ca   e105     MOVB	#0x05               	BANKSEL	_CANCMR
0001cb   513e     MOV	0x3e, R0             	MOV	_CANCMR, R0
                                           ;	.line	166; "../main.c"	CANRXIF =0;
                                           	BANKSEL	_CANIF_bits
0001cc   6019     CLR	0x19, 0              	CLR	_CANIF_bits, 0
0001cd   c075     JMP	#0x75                	JMP	_00027_DS_
0001ce   0008     CRET                     	CRET	
                                           func._Main_CleanTimeSet	.code
                                           _Main_CleanTimeSet	;Function start
                                           ;	.line	192; "../main.c"	cleantime = 0U;
000865   e100     MOVB	#0x00               	BANKSEL	_cleantime
000866   03c3     CLR	0xc3                 	CLR	_cleantime
                                           	BANKSEL	_cleantime
000867   03c4     CLR	0xc4                 	CLR	(_cleantime + 1)
000868   0008     CRET                     	CRET	
                                           func._Main_DataClean	.code
                                           _Main_DataClean	;Function start
                                           ;	.line	178; "../main.c"	if (TX_Data[0]!= 0U || TX_Data[1]!= 0U)
0007e3   e100     MOVB	#0x00               	BANKSEL	_TX_Data
0007e4   0ee4     MOVZ	R0, 0xe4            	MOVZ	R0,  (_TX_Data + 0)
                                           	BANKSEL	r0x102D
0007e5   5182     MOV	0x82, R0             	MOV	r0x102D, R0
0007e6   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x102D
0007e7   3082     ORL	R0, 0x82             	ORL	R0, r0x102D
0007e8   7a03     JB	0x3, 2                	JB	PSW, 2
0007e9   c7f0     JMP	#0x7f0               	JMP	_00075_DS_
                                           	BANKSEL	_TX_Data
0007ea   0ee5     MOVZ	R0, 0xe5            	MOVZ	R0,  (_TX_Data + 1)
                                           	BANKSEL	r0x102D
0007eb   5182     MOV	0x82, R0             	MOV	r0x102D, R0
0007ec   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x102D
0007ed   3082     ORL	R0, 0x82             	ORL	R0, r0x102D
0007ee   7203     JNB	0x3, 2               	JNB	PSW, 2
0007ef   c7fc     JMP	#0x7fc               	JMP	_00078_DS_
                                           _00075_DS_
                                           ;	.line	180; "../main.c"	if (cleantime >= 100)
0007f0   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	_cleantime
0007f1   38c4     SUB	R0, 0xc4             	SUB	R0, (_cleantime + 1)
0007f2   7a03     JB	0x3, 2                	JB	PSW, 2
0007f3   c7f6     JMP	#0x7f6               	JMP	_00082_DS_
0007f4   9864     MOV	R0, #0x64            	MOV	R0,# 0x64
                                           	BANKSEL	_cleantime
0007f5   38c3     SUB	R0, 0xc3             	SUB	R0, _cleantime
                                           _00082_DS_
0007f6   7803     JB	0x3, 0                	JB	PSW, 0
0007f7   c7fc     JMP	#0x7fc               	JMP	_00078_DS_
                                           ;	.line	182; "../main.c"	cleantime = 0;
                                           	BANKSEL	_cleantime
0007f8   03c3     CLR	0xc3                 	CLR	_cleantime
                                           	BANKSEL	_cleantime
0007f9   03c4     CLR	0xc4                 	CLR	(_cleantime + 1)
                                           ;	.line	183; "../main.c"	TX_Data[0] = 0U;
                                           	BANKSEL	_TX_Data
0007fa   03e4     CLR	0xe4                 	CLR	 (_TX_Data + 0)
                                           ;	.line	184; "../main.c"	TX_Data[1] = 0U;
                                           	BANKSEL	_TX_Data
0007fb   03e5     CLR	0xe5                 	CLR	 (_TX_Data + 1)
                                           _00078_DS_
0007fc   0008     CRET                     	CRET	
                                           	.end
                                           .config
008007   06d4     DECR	0xd4               
008008   ffff     NOPZ                    
                                           fun.__gptrget1
0007fd   a800     XOR	R0, #0              
0007fe   7203     JNB	0x3, 2              
0007ff   c804     JMP	#0x804              
000800   a880     XOR	R0, #0x80           
000801   7203     JNB	0x3, 2              
000802   c809     JMP	#0x809              
000803   c80f     JMP	#0x80f              
000804   527d     MOV	R1, 0x7d            
000805   5e7e     MOV	R7, 0x7e            
000806   5f17     MOV	0x17, R7            
000807   f708     LD	R0, [R1]             
000808   c80f     JMP	#0x80f              
000809   527e     MOV	R1, 0x7e            
00080a   507d     MOV	R0, 0x7d            
00080b   9f08     MOV	R7, #0x8            
00080c   5f73     MOV	0x73, R7            
00080d   e008     MOVP	#0x08              
00080e   d869     CALL	#0x869             
00080f   0008     CRET                    
                                           fun.__R2PCL
000869   5373     MOV	0x73, R1            
00086a   530a     MOV	0xa, R1             
00086b   5102     MOV	0x2, R0             
                                           func.__gsinit_startup
00085d   9f08     MOV	R7, #0x8            
00085e   5f73     MOV	0x73, R7            
00085f   e008     MOVP	#0x08              
000860   d810     CALL	#0x810             
000861   9f08     MOV	R7, #0x8            
000862   5f73     MOV	0x73, R7            
000863   e008     MOVP	#0x08              
000864   0008     CRET                    
                                           func.__hmulint
000823   e102     MOVB	#0x02              
000824   034f     CLR	0x4f                
000825   5150     MOV	0x50, R0            
000826   507e     MOV	R0, 0x7e            
000827   5148     MOV	0x48, R0            
000828   507d     MOV	R0, 0x7d            
000829   5149     MOV	0x49, R0            
00082a   507c     MOV	R0, 0x7c            
00082b   514e     MOV	0x4e, R0            
00082c   694f     SET	0x4f, 1             
00082d   784f     JB	0x4f, 0              
00082e   c82d     JMP	#0x82d              
00082f   034f     CLR	0x4f                
000830   504d     MOV	R0, 0x4d            
000831   517e     MOV	0x7e, R0            
000832   504c     MOV	R0, 0x4c            
000833   0008     CRET                    
000834   0008     CRET                    
                                           _sartup_A100GQP
000785   e100     MOVB	#0x00              
000786   6f53     SET	0x53, 7             
000787   6853     SET	0x53, 0             
000788   e070     MOVP	#0x70              
000789   dffb     CALL	#0xffb             
00078a   e103     MOVB	#0x03              
00078b   5161     MOV	0x61, R0            
00078c   ffff     NOPZ                    
00078d   ffff     NOPZ                    
00078e   dff8     CALL	#0xff8             
00078f   5165     MOV	0x65, R0            
000790   ffff     NOPZ                    
000791   ffff     NOPZ                    
000792   e100     MOVB	#0x00              
000793   6753     CLR	0x53, 7             
000794   dffe     CALL	#0xffe             
000795   e100     MOVB	#0x00              
000796   5137     MOV	0x37, R0            
000797   ffff     NOPZ                    
000798   ffff     NOPZ                    
000799   dffd     CALL	#0xffd             
00079a   5130     MOV	0x30, R0            
00079b   ffff     NOPZ                    
00079c   ffff     NOPZ                    
00079d   dffc     CALL	#0xffc             
00079e   e101     MOVB	#0x01              
00079f   5132     MOV	0x32, R0            
0007a0   ffff     NOPZ                    
0007a1   ffff     NOPZ                    
0007a2   dffa     CALL	#0xffa             
0007a3   e102     MOVB	#0x02              
0007a4   513b     MOV	0x3b, R0            
0007a5   ffff     NOPZ                    
0007a6   dff9     CALL	#0xff9             
0007a7   513c     MOV	0x3c, R0            
0007a8   ffff     NOPZ                    
0007a9   0008     CRET                    
                                           .cinit
000810   e100     MOVB	#0x00              
000811   9873     MOV	R0, #0x73           
000812   990c     MOV	R1, #0xc            
000813   d81d     CALL	#0x81d             
000814   e100     MOVB	#0x00              
000815   9880     MOV	R0, #0x80           
000816   9974     MOV	R1, #0x74           
000817   d81d     CALL	#0x81d             
000818   e101     MOVB	#0x01              
000819   9880     MOV	R0, #0x80           
00081a   990d     MOV	R1, #0xd            
00081b   d81d     CALL	#0x81d             
00081c   0008     CRET                    
00081d   020a     CLR	R2                  
00081e   f750     ST	[R0], R2             
00081f   ff10     INC	R0                  
000820   ff59     DECJZ	R1                
000821   c81e     JMP	#0x81e              
000822   0008     CRET                    
