gplink-2.0.0
Copyright (c) IDE Tool Project
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           	.radix dec
                                           	.include "KF8A100GQP.inc"
                                           func._Init_ADC2	.code
                                           _Init_ADC2	;Function start
                                           ;	.line	108; "../ADC.c"	void Init_ADC2(unsigned mode)
007597   e100     MOVB	#0x00               	BANKSEL	r0x1000
007598   51c6     MOV	0xc6, R0             	MOV	r0x1000, R0
                                           	BANKSEL	STK00
007599   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1001
00759a   51c5     MOV	0xc5, R0             	MOV	r0x1001, R0
                                           ;	.line	111; "../ADC.c"	TR66 =1;
00759b   e101     MOVB	#0x01               	BANKSEL	_TR6_bits
00759c   6e26     SET	0x26, 6              	SET	_TR6_bits, 6
                                           ;	.line	113; "../ADC.c"	ANS12 =1;//ADC采样引脚需要配置为模拟输入
00759d   e100     MOVB	#0x00               	BANKSEL	_ANS1_bits
00759e   6a4b     SET	0x4b, 2              	SET	_ANS1_bits, 2
                                           ;	.line	115; "../ADC.c"	switch(mode)
00759f   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1000
0075a0   38c6     SUB	R0, 0xc6             	SUB	R0, r0x1000
0075a1   7a03     JB	0x3, 2                	JB	PSW, 2
0075a2   c5a5     JMP	#0x5a5               	JMP	_00046_DS_
0075a3   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	r0x1001
0075a4   38c5     SUB	R0, 0xc5             	SUB	R0, r0x1001
                                           _00046_DS_
0075a5   7803     JB	0x3, 0                	JB	PSW, 0
0075a6   c5de     JMP	#0x5de               	JMP	_00042_DS_
0075a7   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1000
0075a8   38c6     SUB	R0, 0xc6             	SUB	R0, r0x1000
0075a9   7a03     JB	0x3, 2                	JB	PSW, 2
0075aa   c5ad     JMP	#0x5ad               	JMP	_00047_DS_
0075ab   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	r0x1001
0075ac   38c5     SUB	R0, 0xc5             	SUB	R0, r0x1001
                                           _00047_DS_
0075ad   7003     JNB	0x3, 0               	JNB	PSW, 0
0075ae   c5de     JMP	#0x5de               	JMP	_00042_DS_
                                           	BANKSEL	r0x1001
0075af   06c5     DECR	0xc5                	DECR	r0x1001
                                           	BANKSEL	r0x1001
0075b0   51c5     MOV	0xc5, R0             	MOV	r0x1001, R0
0075b1   9975     MOV	R1, #0x75            	MOV	R1,#high _00048_DS_
0075b2   98b9     MOV	R0, #0xb9            	MOV	R0,#_00048_DS_
                                           	BANKSEL	r0x1001
0075b3   20c5     ADD	R0, 0xc5             	ADD	R0, r0x1001
0075b4   7003     JNB	0x3, 0               	JNB	PSW, 0
0075b5   ff11     INC	R1                   	INC	R1
0075b6   5373     MOV	0x73, R1             	TRAPPC3	$
0075b7   530a     MOV	0xa, R1              	MOV	PCH, R1
0075b8   5102     MOV	0x2, R0              	MOV	PCL, R0
                                           _00048_DS_
0075b9   c5be     JMP	#0x5be               	JMP	_00036_DS_
0075ba   c5c3     JMP	#0x5c3               	JMP	_00037_DS_
0075bb   c5ca     JMP	#0x5ca               	JMP	_00038_DS_
0075bc   c5d1     JMP	#0x5d1               	JMP	_00039_DS_
0075bd   c5d8     JMP	#0x5d8               	JMP	_00040_DS_
                                           _00036_DS_
                                           ;	.line	118; "../ADC.c"	ADCCTL0 =0x81;//采样结果右对齐，且使能ADC
0075be   9881     MOV	R0, #0x81            	MOV	R0,# 0x81
                                           	BANKSEL	_ADCCTL0
0075bf   511f     MOV	0x1f, R0             	MOV	_ADCCTL0, R0
                                           ;	.line	119; "../ADC.c"	ADCCTL1 =0x54;//参考电压设置为VDD
0075c0   9854     MOV	R0, #0x54            	MOV	R0,# 0x54
                                           	BANKSEL	_ADCCTL1
0075c1   513f     MOV	0x3f, R0             	MOV	_ADCCTL1, R0
                                           ;	.line	121; "../ADC.c"	break;
0075c2   c5de     JMP	#0x5de               	JMP	_00042_DS_
                                           _00037_DS_
                                           ;	.line	123; "../ADC.c"	ADCCTL0 =0x81;
0075c3   9881     MOV	R0, #0x81            	MOV	R0,# 0x81
                                           	BANKSEL	_ADCCTL0
0075c4   511f     MOV	0x1f, R0             	MOV	_ADCCTL0, R0
                                           ;	.line	124; "../ADC.c"	ADCCTL1 =0x54;//参考电压设置为VDD
0075c5   9854     MOV	R0, #0x54            	MOV	R0,# 0x54
                                           	BANKSEL	_ADCCTL1
0075c6   513f     MOV	0x3f, R0             	MOV	_ADCCTL1, R0
                                           ;	.line	125; "../ADC.c"	ADCCTL2 =0x26;//采样FVR
0075c7   9826     MOV	R0, #0x26            	MOV	R0,# 0x26
                                           	BANKSEL	_ADCCTL2
0075c8   5150     MOV	0x50, R0             	MOV	_ADCCTL2, R0
                                           ;	.line	126; "../ADC.c"	break;
0075c9   c5de     JMP	#0x5de               	JMP	_00042_DS_
                                           _00038_DS_
                                           ;	.line	128; "../ADC.c"	ADCCTL0 =0x81;
0075ca   9881     MOV	R0, #0x81            	MOV	R0,# 0x81
                                           	BANKSEL	_ADCCTL0
0075cb   511f     MOV	0x1f, R0             	MOV	_ADCCTL0, R0
                                           ;	.line	129; "../ADC.c"	ADCCTL1 =0x54;//参考电压设置为VDD
0075cc   9854     MOV	R0, #0x54            	MOV	R0,# 0x54
                                           	BANKSEL	_ADCCTL1
0075cd   513f     MOV	0x3f, R0             	MOV	_ADCCTL1, R0
                                           ;	.line	130; "../ADC.c"	ADCCTL2 =0x27;//采样内置温度传感器
0075ce   9827     MOV	R0, #0x27            	MOV	R0,# 0x27
                                           	BANKSEL	_ADCCTL2
0075cf   5150     MOV	0x50, R0             	MOV	_ADCCTL2, R0
                                           ;	.line	131; "../ADC.c"	break;
0075d0   c5de     JMP	#0x5de               	JMP	_00042_DS_
                                           _00039_DS_
                                           ;	.line	133; "../ADC.c"	ADCCTL0 =0x81;
0075d1   9881     MOV	R0, #0x81            	MOV	R0,# 0x81
                                           	BANKSEL	_ADCCTL0
0075d2   511f     MOV	0x1f, R0             	MOV	_ADCCTL0, R0
                                           ;	.line	134; "../ADC.c"	ADCCTL1 =0x5C;//参考电压设置为FVR
0075d3   985c     MOV	R0, #0x5c            	MOV	R0,# 0x5c
                                           	BANKSEL	_ADCCTL1
0075d4   513f     MOV	0x3f, R0             	MOV	_ADCCTL1, R0
                                           ;	.line	135; "../ADC.c"	ADCCTL2 =0x05;//采样AD5通道
0075d5   9805     MOV	R0, #0x5             	MOV	R0,# 0x05
                                           	BANKSEL	_ADCCTL2
0075d6   5150     MOV	0x50, R0             	MOV	_ADCCTL2, R0
                                           ;	.line	136; "../ADC.c"	break;
0075d7   c5de     JMP	#0x5de               	JMP	_00042_DS_
                                           _00040_DS_
                                           ;	.line	138; "../ADC.c"	ADCCTL0 =0x81;
0075d8   9881     MOV	R0, #0x81            	MOV	R0,# 0x81
                                           	BANKSEL	_ADCCTL0
0075d9   511f     MOV	0x1f, R0             	MOV	_ADCCTL0, R0
                                           ;	.line	139; "../ADC.c"	ADCCTL1 =0x5C;//参考电压设置为FVR
0075da   985c     MOV	R0, #0x5c            	MOV	R0,# 0x5c
                                           	BANKSEL	_ADCCTL1
0075db   513f     MOV	0x3f, R0             	MOV	_ADCCTL1, R0
                                           ;	.line	140; "../ADC.c"	ADCCTL2 =0x24;//采样OPOUT
0075dc   9824     MOV	R0, #0x24            	MOV	R0,# 0x24
                                           	BANKSEL	_ADCCTL2
0075dd   5150     MOV	0x50, R0             	MOV	_ADCCTL2, R0
                                           _00042_DS_
                                           ;	.line	142; "../ADC.c"	}
0075de   0008     CRET                     	CRET	
                                           func._Init_ADC	.code
                                           _Init_ADC	;Function start
                                           ;	.line	63; "../ADC.c"	void Init_ADC(unsigned mode)
00766d   e100     MOVB	#0x00               	BANKSEL	r0x1002
00766e   51c4     MOV	0xc4, R0             	MOV	r0x1002, R0
                                           	BANKSEL	STK00
00766f   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1003
007670   51c3     MOV	0xc3, R0             	MOV	r0x1003, R0
                                           ;	.line	65; "../ADC.c"	TR04 =1;
                                           	BANKSEL	_TR0_bits
007671   6c25     SET	0x25, 4              	SET	_TR0_bits, 4
                                           ;	.line	67; "../ADC.c"	ANS37 =1;//ADC采样引脚需要配置为模拟输入
                                           	BANKSEL	_ANS3_bits
007672   6f4d     SET	0x4d, 7              	SET	_ANS3_bits, 7
                                           ;	.line	70; "../ADC.c"	switch(mode)
007673   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1002
007674   38c4     SUB	R0, 0xc4             	SUB	R0, r0x1002
007675   7a03     JB	0x3, 2                	JB	PSW, 2
007676   c679     JMP	#0x679               	JMP	_00033_DS_
007677   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	r0x1003
007678   38c3     SUB	R0, 0xc3             	SUB	R0, r0x1003
                                           _00033_DS_
007679   7803     JB	0x3, 0                	JB	PSW, 0
00767a   c6b2     JMP	#0x6b2               	JMP	_00029_DS_
00767b   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1002
00767c   38c4     SUB	R0, 0xc4             	SUB	R0, r0x1002
00767d   7a03     JB	0x3, 2                	JB	PSW, 2
00767e   c681     JMP	#0x681               	JMP	_00034_DS_
00767f   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	r0x1003
007680   38c3     SUB	R0, 0xc3             	SUB	R0, r0x1003
                                           _00034_DS_
007681   7003     JNB	0x3, 0               	JNB	PSW, 0
007682   c6b2     JMP	#0x6b2               	JMP	_00029_DS_
                                           	BANKSEL	r0x1003
007683   06c3     DECR	0xc3                	DECR	r0x1003
                                           	BANKSEL	r0x1003
007684   51c3     MOV	0xc3, R0             	MOV	r0x1003, R0
007685   9976     MOV	R1, #0x76            	MOV	R1,#high _00035_DS_
007686   988d     MOV	R0, #0x8d            	MOV	R0,#_00035_DS_
                                           	BANKSEL	r0x1003
007687   20c3     ADD	R0, 0xc3             	ADD	R0, r0x1003
007688   7003     JNB	0x3, 0               	JNB	PSW, 0
007689   ff11     INC	R1                   	INC	R1
00768a   5373     MOV	0x73, R1             	TRAPPC3	$
00768b   530a     MOV	0xa, R1              	MOV	PCH, R1
00768c   5102     MOV	0x2, R0              	MOV	PCL, R0
                                           _00035_DS_
00768d   c692     JMP	#0x692               	JMP	_00023_DS_
00768e   c697     JMP	#0x697               	JMP	_00024_DS_
00768f   c69e     JMP	#0x69e               	JMP	_00025_DS_
007690   c6a5     JMP	#0x6a5               	JMP	_00026_DS_
007691   c6ac     JMP	#0x6ac               	JMP	_00027_DS_
                                           _00023_DS_
                                           ;	.line	73; "../ADC.c"	ADCCTL0 =0x81;//采样结果右对齐，且使能ADC
007692   9881     MOV	R0, #0x81            	MOV	R0,# 0x81
                                           	BANKSEL	_ADCCTL0
007693   511f     MOV	0x1f, R0             	MOV	_ADCCTL0, R0
                                           ;	.line	74; "../ADC.c"	ADCCTL1 =0x54;//参考电压设置为VDD
007694   9854     MOV	R0, #0x54            	MOV	R0,# 0x54
                                           	BANKSEL	_ADCCTL1
007695   513f     MOV	0x3f, R0             	MOV	_ADCCTL1, R0
                                           ;	.line	76; "../ADC.c"	break;
007696   c6b2     JMP	#0x6b2               	JMP	_00029_DS_
                                           _00024_DS_
                                           ;	.line	78; "../ADC.c"	ADCCTL0 =0x81;
007697   9881     MOV	R0, #0x81            	MOV	R0,# 0x81
                                           	BANKSEL	_ADCCTL0
007698   511f     MOV	0x1f, R0             	MOV	_ADCCTL0, R0
                                           ;	.line	79; "../ADC.c"	ADCCTL1 =0x54;//参考电压设置为VDD
007699   9854     MOV	R0, #0x54            	MOV	R0,# 0x54
                                           	BANKSEL	_ADCCTL1
00769a   513f     MOV	0x3f, R0             	MOV	_ADCCTL1, R0
                                           ;	.line	80; "../ADC.c"	ADCCTL2 =0x26;//采样FVR
00769b   9826     MOV	R0, #0x26            	MOV	R0,# 0x26
                                           	BANKSEL	_ADCCTL2
00769c   5150     MOV	0x50, R0             	MOV	_ADCCTL2, R0
                                           ;	.line	81; "../ADC.c"	break;
00769d   c6b2     JMP	#0x6b2               	JMP	_00029_DS_
                                           _00025_DS_
                                           ;	.line	83; "../ADC.c"	ADCCTL0 =0x81;
00769e   9881     MOV	R0, #0x81            	MOV	R0,# 0x81
                                           	BANKSEL	_ADCCTL0
00769f   511f     MOV	0x1f, R0             	MOV	_ADCCTL0, R0
                                           ;	.line	84; "../ADC.c"	ADCCTL1 =0x54;//参考电压设置为VDD
0076a0   9854     MOV	R0, #0x54            	MOV	R0,# 0x54
                                           	BANKSEL	_ADCCTL1
0076a1   513f     MOV	0x3f, R0             	MOV	_ADCCTL1, R0
                                           ;	.line	85; "../ADC.c"	ADCCTL2 =0x27;//采样内置温度传感器
0076a2   9827     MOV	R0, #0x27            	MOV	R0,# 0x27
                                           	BANKSEL	_ADCCTL2
0076a3   5150     MOV	0x50, R0             	MOV	_ADCCTL2, R0
                                           ;	.line	86; "../ADC.c"	break;
0076a4   c6b2     JMP	#0x6b2               	JMP	_00029_DS_
                                           _00026_DS_
                                           ;	.line	88; "../ADC.c"	ADCCTL0 =0x81;
0076a5   9881     MOV	R0, #0x81            	MOV	R0,# 0x81
                                           	BANKSEL	_ADCCTL0
0076a6   511f     MOV	0x1f, R0             	MOV	_ADCCTL0, R0
                                           ;	.line	89; "../ADC.c"	ADCCTL1 =0x5C;//参考电压设置为FVR
0076a7   985c     MOV	R0, #0x5c            	MOV	R0,# 0x5c
                                           	BANKSEL	_ADCCTL1
0076a8   513f     MOV	0x3f, R0             	MOV	_ADCCTL1, R0
                                           ;	.line	90; "../ADC.c"	ADCCTL2 =0x05;//采样AD5通道
0076a9   9805     MOV	R0, #0x5             	MOV	R0,# 0x05
                                           	BANKSEL	_ADCCTL2
0076aa   5150     MOV	0x50, R0             	MOV	_ADCCTL2, R0
                                           ;	.line	91; "../ADC.c"	break;
0076ab   c6b2     JMP	#0x6b2               	JMP	_00029_DS_
                                           _00027_DS_
                                           ;	.line	93; "../ADC.c"	ADCCTL0 =0x81;
0076ac   9881     MOV	R0, #0x81            	MOV	R0,# 0x81
                                           	BANKSEL	_ADCCTL0
0076ad   511f     MOV	0x1f, R0             	MOV	_ADCCTL0, R0
                                           ;	.line	94; "../ADC.c"	ADCCTL1 =0x5C;//参考电压设置为FVR
0076ae   985c     MOV	R0, #0x5c            	MOV	R0,# 0x5c
                                           	BANKSEL	_ADCCTL1
0076af   513f     MOV	0x3f, R0             	MOV	_ADCCTL1, R0
                                           ;	.line	95; "../ADC.c"	ADCCTL2 =0x24;//采样OPOUT
0076b0   9824     MOV	R0, #0x24            	MOV	R0,# 0x24
                                           	BANKSEL	_ADCCTL2
0076b1   5150     MOV	0x50, R0             	MOV	_ADCCTL2, R0
                                           _00029_DS_
                                           ;	.line	97; "../ADC.c"	}
0076b2   0008     CRET                     	CRET	
                                           func._Adc_read	.code
                                           _Adc_read	;Function start
                                           ;	.line	47; "../ADC.c"	unsigned int Adc_sum = 0 ; 		          //adc采样累加变量
0076ef   e100     MOVB	#0x00               	BANKSEL	r0x1009
0076f0   03be     CLR	0xbe                 	CLR	r0x1009
                                           	BANKSEL	r0x100A
0076f1   03bf     CLR	0xbf                 	CLR	r0x100A
                                           ;	.line	49; "../ADC.c"	for(i = 0; i < 8; i++)
0076f2   9808     MOV	R0, #0x8             	MOV	R0,# 0x08
                                           	BANKSEL	r0x100B
0076f3   51c0     MOV	0xc0, R0             	MOV	r0x100B, R0
                                           _00018_DS_
                                           ;	.line	51; "../ADC.c"	Adc_sum += Adc_fun();		  //累加八次采样值
0076f4   9f77     MOV	R7, #0x77            	TRAPPC1	_Adc_fun
0076f5   5f73     MOV	0x73, R7             	TRAPPC2	_Adc_fun
0076f6   e077     MOVP	#0x77               	PAGESEL	_Adc_fun
0076f7   d7d1     CALL	#0x7d1              	CALL	_Adc_fun
0076f8   9f76     MOV	R7, #0x76            	TRAPPC1	$+2
0076f9   5f73     MOV	0x73, R7             	TRAPPC2	$+1
0076fa   e076     MOVP	#0x76               	PAGESEL	$
0076fb   e100     MOVB	#0x00               	BANKSEL	r0x100C
0076fc   51c2     MOV	0xc2, R0             	MOV	r0x100C, R0
                                           	BANKSEL	STK00
0076fd   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x100D
0076fe   51c1     MOV	0xc1, R0             	MOV	r0x100D, R0
                                           	BANKSEL	r0x100D
0076ff   50c1     MOV	R0, 0xc1             	MOV	R0, r0x100D
                                           	BANKSEL	r0x1009
007700   21be     ADD	0xbe, R0             	ADD	r0x1009, R0
                                           	BANKSEL	r0x100C
007701   0ec2     MOVZ	R0, 0xc2            	MOVZ	R0, r0x100C
007702   7003     JNB	0x3, 0               	JNB	PSW, 0
007703   ff10     INC	R0                   	INC	R0
007704   7203     JNB	0x3, 2               	JNB	PSW, 2
007705   c707     JMP	#0x707               	JMP	_00049_DS_
                                           	BANKSEL	r0x100A
007706   21bf     ADD	0xbf, R0             	ADD	r0x100A, R0
                                           _00049_DS_
                                           	BANKSEL	r0x100B
007707   0ec0     MOVZ	R0, 0xc0            	MOVZ	R0, r0x100B
                                           	BANKSEL	r0x100D
007708   51c1     MOV	0xc1, R0             	MOV	r0x100D, R0
                                           	BANKSEL	r0x100D
007709   07c1     DEC	0xc1                 	DEC	r0x100D
                                           	BANKSEL	r0x100D
00770a   0ec1     MOVZ	R0, 0xc1            	MOVZ	R0, r0x100D
                                           	BANKSEL	r0x100B
00770b   51c0     MOV	0xc0, R0             	MOV	r0x100B, R0
                                           ;	.line	49; "../ADC.c"	for(i = 0; i < 8; i++)
00770c   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x100B
00770d   30c0     ORL	R0, 0xc0             	ORL	R0, r0x100B
00770e   7a03     JB	0x3, 2                	JB	PSW, 2
00770f   c6f4     JMP	#0x6f4               	JMP	_00018_DS_
                                           ;	.line	53; "../ADC.c"	Adc_sum >>= 3;		              //右移动3位  除8求均值
007710   6003     CLR	0x3, 0               	CLR	PSW, 0
                                           	BANKSEL	r0x100A
007711   11bf     RRC	0xbf                 	RRC	r0x100A
                                           	BANKSEL	r0x1009
007712   11be     RRC	0xbe                 	RRC	r0x1009
007713   6003     CLR	0x3, 0               	CLR	PSW, 0
                                           	BANKSEL	r0x100A
007714   11bf     RRC	0xbf                 	RRC	r0x100A
                                           	BANKSEL	r0x1009
007715   11be     RRC	0xbe                 	RRC	r0x1009
007716   6003     CLR	0x3, 0               	CLR	PSW, 0
                                           	BANKSEL	r0x100A
007717   11bf     RRC	0xbf                 	RRC	r0x100A
                                           	BANKSEL	r0x1009
007718   11be     RRC	0xbe                 	RRC	r0x1009
                                           ;	.line	54; "../ADC.c"	return Adc_sum;
                                           	BANKSEL	r0x1009
007719   0ebe     MOVZ	R0, 0xbe            	MOVZ	R0, r0x1009
                                           	BANKSEL	STK00
00771a   517e     MOV	0x7e, R0             	MOV	STK00, R0
                                           	BANKSEL	r0x100A
00771b   0ebf     MOVZ	R0, 0xbf            	MOVZ	R0, r0x100A
00771c   0008     CRET                     	CRET	
                                           func._Adc_fun	.code
                                           _Adc_fun	;Function start
                                           ;	.line	32; "../ADC.c"	START = 1;					  //启动ADC
0077d1   e100     MOVB	#0x00               	BANKSEL	_ADCCTL0_bits
0077d2   691f     SET	0x1f, 1              	SET	_ADCCTL0_bits, 1
                                           _00009_DS_
                                           ;	.line	33; "../ADC.c"	while(START);                 //等待转换结束
                                           	BANKSEL	_ADCCTL0_bits
0077d3   711f     JNB	0x1f, 1              	JNB	_ADCCTL0_bits, 1
0077d4   c7d3     JMP	#0x7d3               	JMP	_00009_DS_
                                           ;	.line	34; "../ADC.c"	Adc_num = ADCDATA0H;	  	  //将高位加进去
                                           	BANKSEL	_ADCDATA0H
0077d5   0e1e     MOVZ	R0, 0x1e            	MOVZ	R0, _ADCDATA0H
                                           	BANKSEL	r0x1004
0077d6   51ba     MOV	0xba, R0             	MOV	r0x1004, R0
                                           	BANKSEL	r0x1005
0077d7   03bb     CLR	0xbb                 	CLR	r0x1005
                                           ;	.line	35; "../ADC.c"	Adc_num <<=8;
                                           	BANKSEL	r0x1004
0077d8   0eba     MOVZ	R0, 0xba            	MOVZ	R0, r0x1004
                                           	BANKSEL	r0x1005
0077d9   51bb     MOV	0xbb, R0             	MOV	r0x1005, R0
                                           	BANKSEL	r0x1004
0077da   03ba     CLR	0xba                 	CLR	r0x1004
                                           ;	.line	36; "../ADC.c"	Adc_num += ADCDATA0L;		  //将低位加进去
                                           	BANKSEL	_ADCDATA0L
0077db   0e3e     MOVZ	R0, 0x3e            	MOVZ	R0, _ADCDATA0L
                                           	BANKSEL	r0x1006
0077dc   51bc     MOV	0xbc, R0             	MOV	r0x1006, R0
                                           	BANKSEL	r0x1006
0077dd   0ebc     MOVZ	R0, 0xbc            	MOVZ	R0, r0x1006
                                           	BANKSEL	r0x1007
0077de   51bd     MOV	0xbd, R0             	MOV	r0x1007, R0
                                           	BANKSEL	r0x1007
0077df   50bd     MOV	R0, 0xbd             	MOV	R0, r0x1007
                                           	BANKSEL	r0x1004
0077e0   21ba     ADD	0xba, R0             	ADD	r0x1004, R0
0077e1   9800     MOV	R0, #0               	MOV	R0,# 0x00
0077e2   7003     JNB	0x3, 0               	JNB	PSW, 0
0077e3   ff10     INC	R0                   	INC	R0
0077e4   7203     JNB	0x3, 2               	JNB	PSW, 2
0077e5   c7e7     JMP	#0x7e7               	JMP	_00050_DS_
                                           	BANKSEL	r0x1005
0077e6   21bb     ADD	0xbb, R0             	ADD	r0x1005, R0
                                           _00050_DS_
                                           ;	.line	37; "../ADC.c"	return Adc_num;			      //返回转换值
                                           	BANKSEL	r0x1004
0077e7   0eba     MOVZ	R0, 0xba            	MOVZ	R0, r0x1004
                                           	BANKSEL	STK00
0077e8   517e     MOV	0x7e, R0             	MOV	STK00, R0
                                           	BANKSEL	r0x1005
0077e9   0ebb     MOVZ	R0, 0xbb            	MOVZ	R0, r0x1005
0077ea   0008     CRET                     	CRET	
                                           func._delay_5us	.code
                                           _delay_5us	;Function start
                                           ;	.line	12; "../ADC.c"	void delay_5us(unsigned int time)
                                           	BANKSEL	r0x100E
                                           	MOV	r0x100E, R0
                                           	BANKSEL	STK00
                                           	MOVZ	R0, STK00
                                           	BANKSEL	r0x100F
                                           	MOV	r0x100F, R0
                                           _00001_DS_
                                           ;	.line	14; "../ADC.c"	while( time--)
                                           	BANKSEL	r0x100F
                                           	MOVZ	R0, r0x100F
                                           	BANKSEL	r0x1010
                                           	MOV	r0x1010, R0
                                           	BANKSEL	r0x100E
                                           	MOVZ	R0, r0x100E
                                           	BANKSEL	r0x1011
                                           	MOV	r0x1011, R0
                                           	MOV	R0,# 0xff
                                           	BANKSEL	r0x100F
                                           	ADD	r0x100F, R0
                                           	JNB	PSW, 0
                                           	JMP	_00051_DS_
                                           	BANKSEL	r0x100E
                                           	DEC	r0x100E
                                           _00051_DS_
                                           	BANKSEL	r0x1010
                                           	MOVZ	R0, r0x1010
                                           	BANKSEL	r0x1011
                                           	ORL	R0, r0x1011
                                           	JNB	PSW, 2
                                           	JMP	_00004_DS_
                                           	NOP 
                                           	NOP 
                                           	NOP 
                                           	NOP 
                                           	JMP	_00001_DS_
                                           _00004_DS_
                                           	CRET	
                                           	.end
                                           	.radix dec
                                           	.include "KF8A100GQP.inc"
                                           func._CAN_UnsetITStatus	.code
                                           _CAN_UnsetITStatus	;Function start
                                           ;	.line	334; "../BSP_can.c"	void CAN_UnsetITStatus(unsigned char CAN_IT_bit)
                                           	BANKSEL	r0x101D
                                           	MOV	r0x101D, R0
                                           ;	.line	336; "../BSP_can.c"	CANIE &= (~CAN_IT_bit);
                                           	BANKSEL	r0x101D
                                           	CPL	r0x101D
                                           	BANKSEL	r0x101D
                                           	MOVZ	R0, r0x101D
                                           	BANKSEL	_CANIE
                                           	AND	_CANIE, R0
                                           	CRET	
                                           func._CAN_SetITStatus	.code
                                           _CAN_SetITStatus	;Function start
                                           ;	.line	322; "../BSP_can.c"	void CAN_SetITStatus(unsigned char CAN_IT_bit)
                                           	BANKSEL	r0x101E
                                           	MOV	r0x101E, R0
                                           ;	.line	324; "../BSP_can.c"	CANIF &= (~CAN_IT_bit);
                                           	BANKSEL	r0x101E
                                           	CPLR	r0x101E
                                           	BANKSEL	r0x101F
                                           	MOV	r0x101F, R0
                                           	BANKSEL	r0x101F
                                           	MOVZ	R0, r0x101F
                                           	BANKSEL	_CANIF
                                           	AND	_CANIF, R0
                                           ;	.line	325; "../BSP_can.c"	CANIE = CAN_IT_bit;
                                           	BANKSEL	r0x101E
                                           	MOVZ	R0, r0x101E
                                           	BANKSEL	_CANIE
                                           	MOV	_CANIE, R0
                                           	CRET	
                                           func._CAN_ClearITStatus	.code
                                           _CAN_ClearITStatus	;Function start
                                           ;	.line	311; "../BSP_can.c"	void CAN_ClearITStatus(unsigned char CAN_IT_bit)
                                           	BANKSEL	r0x1020
                                           	MOV	r0x1020, R0
                                           ;	.line	313; "../BSP_can.c"	CANIF &= (~CAN_IT_bit);
                                           	BANKSEL	r0x1020
                                           	CPL	r0x1020
                                           	BANKSEL	r0x1020
                                           	MOVZ	R0, r0x1020
                                           	BANKSEL	_CANIF
                                           	AND	_CANIF, R0
                                           	CRET	
                                           func._CAN_GetITStatus	.code
                                           _CAN_GetITStatus	;Function start
                                           ;	.line	297; "../BSP_can.c"	ITStatus CAN_GetITStatus(unsigned char CAN_IT_bit)
                                           	BANKSEL	r0x1021
                                           	MOV	r0x1021, R0
                                           ;	.line	299; "../BSP_can.c"	if(CANIF&CAN_IT_bit)
                                           	BANKSEL	_CANIF
                                           	MOVZ	R0, _CANIF
                                           	BANKSEL	r0x1021
                                           	AND	r0x1021, R0
                                           	MOV	R0,# 0x00
                                           	BANKSEL	r0x1021
                                           	ORL	R0, r0x1021
                                           	JNB	PSW, 2
                                           	JMP	_00146_DS_
                                           ;	.line	300; "../BSP_can.c"	return SET_STATE;
                                           	MOV	R0,# 0x01
                                           	JMP	_00148_DS_
                                           _00146_DS_
                                           ;	.line	302; "../BSP_can.c"	return RESET_STATE;
                                           	MOV	R0,# 0x00
                                           _00148_DS_
                                           	CRET	
                                           func._CAN_Receive_Message_Configuration	.code
                                           _CAN_Receive_Message_Configuration	;Function start
                                           ;	.line	216; "../BSP_can.c"	if(can_data_hand<8)
                                           	MOV	R0,# 0x08
                                           	BANKSEL	_can_data_hand
                                           	SUB	R0, _can_data_hand
                                           	JNB	PSW, 0
                                           	JMP	_00086_DS_
                                           ;	.line	218; "../BSP_can.c"	can_point =(0x1C80 + can_data_hand * 0x10);
                                           	MOV	R0,# 0x10
                                           	BANKSEL	STK02
                                           	MOV	STK02, R0
                                           	MOV	R0,# 0x00
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	_can_data_hand
                                           	MOVZ	R0, _can_data_hand
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	MOV	R0,# 0x00
                                           	TRAPPC1	__hmulint
                                           	TRAPPC2	__hmulint
                                           	PAGESEL	__hmulint
                                           	CALL	__hmulint
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	r0x1022
                                           	MOV	r0x1022, R0
                                           	BANKSEL	STK00
                                           	MOV	R0, STK00
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	MOV	R0,# 0x80
                                           	BANKSEL	r0x1023
                                           	ADD	r0x1023, R0
                                           	MOV	R0,# 0x1c
                                           	JNB	PSW, 0
                                           	MOV	R0,# 0x1d
                                           	BANKSEL	r0x1022
                                           	ADD	r0x1022, R0
                                           	BANKSEL	r0x1023
                                           	MOVZ	R0, r0x1023
                                           	BANKSEL	r0x1024
                                           	MOV	r0x1024, R0
                                           	BANKSEL	r0x1022
                                           	MOVZ	R0, r0x1022
                                           	BANKSEL	r0x1025
                                           	MOV	r0x1025, R0
                                           	JMP	_00121_DS_
                                           _00086_DS_
                                           ;	.line	222; "../BSP_can.c"	can_point =(0x1D80+(can_data_hand-8)*0x10);
                                           	BANKSEL	_can_data_hand
                                           	MOVZ	R0, _can_data_hand
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	BANKSEL	r0x1022
                                           	CLR	r0x1022
                                           	MOV	R0,# 0xf8
                                           	BANKSEL	r0x1023
                                           	ADD	r0x1023, R0
                                           	JNB	PSW, 0
                                           	JMP	_00157_DS_
                                           	BANKSEL	r0x1022
                                           	DEC	r0x1022
                                           _00157_DS_
                                           	BANKSEL	r0x1023
                                           	MOVZ	R0, r0x1023
                                           	BANKSEL	r0x1026
                                           	MOV	r0x1026, R0
                                           	BANKSEL	r0x1022
                                           	MOVZ	R0, r0x1022
                                           	BANKSEL	r0x1027
                                           	MOV	r0x1027, R0
                                           	MOV	R0,# 0x04
                                           	INC	R0
                                           	JMP	_00139_DS_
                                           _00138_DS_
                                           	CLR	PSW, 0
                                           	BANKSEL	r0x1026
                                           	RLC	r0x1026
                                           	BANKSEL	r0x1027
                                           	RLC	r0x1027
                                           _00139_DS_
                                           	DECJZ	R0
                                           	JMP	_00138_DS_
                                           	MOV	R0,# 0x80
                                           	BANKSEL	r0x1026
                                           	ADD	R0, r0x1026
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	MOV	R0,# 0x1d
                                           	BANKSEL	r0x1022
                                           	MOV	r0x1022, R0
                                           	BANKSEL	r0x1027
                                           	MOVZ	R0, r0x1027
                                           	JNB	PSW, 0
                                           	INC	R0
                                           	JNB	PSW, 2
                                           	JMP	_00158_DS_
                                           	BANKSEL	r0x1022
                                           	ADD	r0x1022, R0
                                           _00158_DS_
                                           	BANKSEL	r0x1023
                                           	MOVZ	R0, r0x1023
                                           	BANKSEL	r0x1024
                                           	MOV	r0x1024, R0
                                           	BANKSEL	r0x1022
                                           	MOVZ	R0, r0x1022
                                           	BANKSEL	r0x1025
                                           	MOV	r0x1025, R0
                                           _00121_DS_
                                           ;	.line	225; "../BSP_can.c"	for(i=0;i<13;i++)
                                           	BANKSEL	r0x1023
                                           	CLR	r0x1023
                                           _00105_DS_
                                           	MOV	R0,# 0x0d
                                           	BANKSEL	r0x1023
                                           	SUB	R0, r0x1023
                                           	JNB	PSW, 0
                                           	JMP	_00108_DS_
                                           ;	.line	227; "../BSP_can.c"	CAN_Rev_BUF[i]=*((unsigned char *)(can_point+i));
                                           	BANKSEL	r0x1023
                                           	MOV	R0, r0x1023
                                           	ADD	R0,# (_CAN_Rev_BUF + 0)
                                           	BANKSEL	r0x1022
                                           	MOV	r0x1022, R0
                                           	BANKSEL	r0x1023
                                           	MOVZ	R0, r0x1023
                                           	BANKSEL	r0x1027
                                           	MOV	r0x1027, R0
                                           	BANKSEL	r0x1028
                                           	CLR	r0x1028
                                           	BANKSEL	r0x1024
                                           	MOV	R0, r0x1024
                                           	BANKSEL	r0x1027
                                           	ADD	r0x1027, R0
                                           	BANKSEL	r0x1025
                                           	MOVZ	R0, r0x1025
                                           	JNB	PSW, 0
                                           	INC	R0
                                           	JNB	PSW, 2
                                           	JMP	_00159_DS_
                                           	BANKSEL	r0x1028
                                           	ADD	r0x1028, R0
                                           _00159_DS_
                                           	BANKSEL	r0x1027
                                           	MOVZ	R0, r0x1027
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1028
                                           	MOVZ	R0, r0x1028
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	MOV	R0,# 0x00
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	r0x1027
                                           	MOV	r0x1027, R0
                                           	BANKSEL	r0x1027
                                           	MOVZ	R0, r0x1027
                                           	BANKSEL	r0x1022
                                           	MOV	R1, r0x1022
                                           	BANKSEL	_CAN_Rev_BUF
                                           	ST	[R1], R0
                                           ;	.line	225; "../BSP_can.c"	for(i=0;i<13;i++)
                                           	BANKSEL	r0x1023
                                           	INC	r0x1023
                                           	JMP	_00105_DS_
                                           _00108_DS_
                                           ;	.line	230; "../BSP_can.c"	CAN_Rev_DATA.data_ide = CAN_Rev_BUF[0]>>7;
                                           	BANKSEL	_CAN_Rev_BUF
                                           	MOVZ	R0,  (_CAN_Rev_BUF + 0)
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	BANKSEL	r0x1023
                                           	RLCR	r0x1023
                                           	BANKSEL	r0x1022
                                           	CLR	r0x1022
                                           	BANKSEL	r0x1022
                                           	RLC	r0x1022
                                           	BANKSEL	r0x1022
                                           	MOVZ	R0, r0x1022
                                           	BANKSEL	_CAN_Rev_DATA
                                           	MOV	 (_CAN_Rev_DATA + 0), R0
                                           ;	.line	231; "../BSP_can.c"	CAN_Rev_DATA.data_rtr = (CAN_Rev_BUF[0]&0x40)>>6;
                                           	BANKSEL	_CAN_Rev_BUF
                                           	MOVZ	R0,  (_CAN_Rev_BUF + 0)
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	MOV	R0,# 0x40
                                           	BANKSEL	r0x1023
                                           	AND	r0x1023, R0
                                           	BANKSEL	r0x1023
                                           	SWAPR	R0, r0x1023
                                           	AND	R0,# 0x0f
                                           	BANKSEL	r0x1022
                                           	MOV	r0x1022, R0
                                           	CLR	PSW, 0
                                           	BANKSEL	r0x1022
                                           	RRC	r0x1022
                                           	CLR	PSW, 0
                                           	BANKSEL	r0x1022
                                           	RRC	r0x1022
                                           	BANKSEL	r0x1022
                                           	MOVZ	R0, r0x1022
                                           	BANKSEL	_CAN_Rev_DATA
                                           	MOV	 (_CAN_Rev_DATA + 1), R0
                                           ;	.line	232; "../BSP_can.c"	CAN_Rev_DATA.data_length = CAN_Rev_BUF[0]&0x0F;
                                           	BANKSEL	_CAN_Rev_BUF
                                           	MOVZ	R0,  (_CAN_Rev_BUF + 0)
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	MOV	R0,# 0x0f
                                           	BANKSEL	r0x1023
                                           	AND	r0x1023, R0
                                           	BANKSEL	r0x1023
                                           	MOVZ	R0, r0x1023
                                           	BANKSEL	_CAN_Rev_DATA
                                           	MOV	 (_CAN_Rev_DATA + 2), R0
                                           ;	.line	233; "../BSP_can.c"	if(CAN_Rev_DATA.data_ide)	  //扩展帧
                                           	BANKSEL	_CAN_Rev_DATA
                                           	MOVZ	R0,  (_CAN_Rev_DATA + 0)
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	MOV	R0,# 0x00
                                           	BANKSEL	r0x1023
                                           	ORL	R0, r0x1023
                                           	JNB	PSW, 2
                                           	JMP	_00101_DS_
                                           ;	.line	236; "../BSP_can.c"	CAN_Rev_DATA.data_id[0]=CAN_Rev_BUF[1];
                                           	BANKSEL	_CAN_Rev_BUF
                                           	MOVZ	R0,  (_CAN_Rev_BUF + 1)
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	BANKSEL	_CAN_Rev_DATA
                                           	MOV	 (_CAN_Rev_DATA + 3), R0
                                           ;	.line	237; "../BSP_can.c"	CAN_Rev_DATA.data_id[1]=CAN_Rev_BUF[2];
                                           	BANKSEL	_CAN_Rev_BUF
                                           	MOVZ	R0,  (_CAN_Rev_BUF + 2)
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	BANKSEL	_CAN_Rev_DATA
                                           	MOV	 (_CAN_Rev_DATA + 4), R0
                                           ;	.line	238; "../BSP_can.c"	CAN_Rev_DATA.data_id[2]=CAN_Rev_BUF[3];
                                           	BANKSEL	_CAN_Rev_BUF
                                           	MOVZ	R0,  (_CAN_Rev_BUF + 3)
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	BANKSEL	_CAN_Rev_DATA
                                           	MOV	 (_CAN_Rev_DATA + 5), R0
                                           ;	.line	239; "../BSP_can.c"	CAN_Rev_DATA.data_id[3]=CAN_Rev_BUF[4]&0xF8;
                                           	BANKSEL	_CAN_Rev_BUF
                                           	MOVZ	R0,  (_CAN_Rev_BUF + 4)
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	MOV	R0,# 0xf8
                                           	BANKSEL	r0x1023
                                           	AND	r0x1023, R0
                                           	BANKSEL	r0x1023
                                           	MOVZ	R0, r0x1023
                                           	BANKSEL	_CAN_Rev_DATA
                                           	MOV	 (_CAN_Rev_DATA + 6), R0
                                           ;	.line	241; "../BSP_can.c"	if(CAN_Rev_DATA.data_rtr)//远程帧
                                           	BANKSEL	_CAN_Rev_DATA
                                           	MOVZ	R0,  (_CAN_Rev_DATA + 1)
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	MOV	R0,# 0x00
                                           	BANKSEL	r0x1023
                                           	ORL	R0, r0x1023
                                           	JB	PSW, 2
                                           	JMP	_00102_DS_
                                           ;	.line	247; "../BSP_can.c"	if(CAN_Rev_DATA.data_length&&(CAN_Rev_DATA.data_length<=8))//判断数据长度
                                           	BANKSEL	_CAN_Rev_DATA
                                           	MOVZ	R0,  (_CAN_Rev_DATA + 2)
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	MOV	R0,# 0x00
                                           	BANKSEL	r0x1023
                                           	ORL	R0, r0x1023
                                           	JNB	PSW, 2
                                           	JMP	_00102_DS_
                                           	BANKSEL	_CAN_Rev_DATA
                                           	MOVZ	R0,  (_CAN_Rev_DATA + 2)
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	MOV	R0,# 0x09
                                           	BANKSEL	r0x1023
                                           	SUB	R0, r0x1023
                                           	JNB	PSW, 0
                                           	JMP	_00102_DS_
                                           ;	.line	250; "../BSP_can.c"	for(i=0;i<CAN_Rev_DATA.data_length;i++)
                                           	BANKSEL	r0x1023
                                           	CLR	r0x1023
                                           _00109_DS_
                                           	BANKSEL	_CAN_Rev_DATA
                                           	MOVZ	R0,  (_CAN_Rev_DATA + 2)
                                           	BANKSEL	r0x1022
                                           	MOV	r0x1022, R0
                                           	BANKSEL	r0x1022
                                           	MOVZ	R0, r0x1022
                                           	BANKSEL	r0x1023
                                           	SUB	R0, r0x1023
                                           	JNB	PSW, 0
                                           	JMP	_00102_DS_
                                           ;	.line	252; "../BSP_can.c"	CAN_Rev_DATA.raw_data[i]=CAN_Rev_BUF[5+i];
                                           	BANKSEL	r0x1023
                                           	MOV	R0, r0x1023
                                           	ADD	R0,# (_CAN_Rev_DATA + 7)
                                           	BANKSEL	r0x1022
                                           	MOV	r0x1022, R0
                                           	MOV	R0,# 0x05
                                           	BANKSEL	r0x1023
                                           	ADD	R0, r0x1023
                                           	BANKSEL	r0x1025
                                           	MOV	r0x1025, R0
                                           	MOV	R0,# (_CAN_Rev_BUF + 0)
                                           	BANKSEL	r0x1025
                                           	ADD	r0x1025, R0
                                           	BANKSEL	r0x1025
                                           	MOV	R1, r0x1025
                                           	BANKSEL	_CAN_Rev_BUF
                                           	LD	R0, [R1]
                                           	BANKSEL	r0x1027
                                           	MOV	r0x1027, R0
                                           	BANKSEL	r0x1027
                                           	MOVZ	R0, r0x1027
                                           	BANKSEL	r0x1022
                                           	MOV	R1, r0x1022
                                           	BANKSEL	_CAN_Rev_DATA
                                           	ST	[R1], R0
                                           ;	.line	250; "../BSP_can.c"	for(i=0;i<CAN_Rev_DATA.data_length;i++)
                                           	BANKSEL	r0x1023
                                           	INC	r0x1023
                                           	JMP	_00109_DS_
                                           _00101_DS_
                                           ;	.line	260; "../BSP_can.c"	CAN_Rev_DATA.data_id[0]=CAN_Rev_BUF[1];
                                           	BANKSEL	_CAN_Rev_BUF
                                           	MOVZ	R0,  (_CAN_Rev_BUF + 1)
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	BANKSEL	_CAN_Rev_DATA
                                           	MOV	 (_CAN_Rev_DATA + 3), R0
                                           ;	.line	261; "../BSP_can.c"	CAN_Rev_DATA.data_id[1]=CAN_Rev_BUF[2]&0xE0;
                                           	BANKSEL	_CAN_Rev_BUF
                                           	MOVZ	R0,  (_CAN_Rev_BUF + 2)
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	MOV	R0,# 0xe0
                                           	BANKSEL	r0x1023
                                           	AND	r0x1023, R0
                                           	BANKSEL	r0x1023
                                           	MOVZ	R0, r0x1023
                                           	BANKSEL	_CAN_Rev_DATA
                                           	MOV	 (_CAN_Rev_DATA + 4), R0
                                           ;	.line	263; "../BSP_can.c"	if(CAN_Rev_DATA.data_rtr)//远程帧
                                           	BANKSEL	_CAN_Rev_DATA
                                           	MOVZ	R0,  (_CAN_Rev_DATA + 1)
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	MOV	R0,# 0x00
                                           	BANKSEL	r0x1023
                                           	ORL	R0, r0x1023
                                           	JB	PSW, 2
                                           	JMP	_00102_DS_
                                           ;	.line	269; "../BSP_can.c"	if(CAN_Rev_DATA.data_length&&(CAN_Rev_DATA.data_length<=8))//判断数据长度
                                           	BANKSEL	_CAN_Rev_DATA
                                           	MOVZ	R0,  (_CAN_Rev_DATA + 2)
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	MOV	R0,# 0x00
                                           	BANKSEL	r0x1023
                                           	ORL	R0, r0x1023
                                           	JNB	PSW, 2
                                           	JMP	_00102_DS_
                                           	BANKSEL	_CAN_Rev_DATA
                                           	MOVZ	R0,  (_CAN_Rev_DATA + 2)
                                           	BANKSEL	r0x1023
                                           	MOV	r0x1023, R0
                                           	MOV	R0,# 0x09
                                           	BANKSEL	r0x1023
                                           	SUB	R0, r0x1023
                                           	JNB	PSW, 0
                                           	JMP	_00102_DS_
                                           ;	.line	272; "../BSP_can.c"	for(i=0;i<CAN_Rev_DATA.data_length;i++)
                                           	BANKSEL	r0x1023
                                           	CLR	r0x1023
                                           _00113_DS_
                                           	BANKSEL	_CAN_Rev_DATA
                                           	MOVZ	R0,  (_CAN_Rev_DATA + 2)
                                           	BANKSEL	r0x1022
                                           	MOV	r0x1022, R0
                                           	BANKSEL	r0x1022
                                           	MOVZ	R0, r0x1022
                                           	BANKSEL	r0x1023
                                           	SUB	R0, r0x1023
                                           	JNB	PSW, 0
                                           	JMP	_00102_DS_
                                           ;	.line	274; "../BSP_can.c"	CAN_Rev_DATA.raw_data[i]=CAN_Rev_BUF[3+i];
                                           	BANKSEL	r0x1023
                                           	MOV	R0, r0x1023
                                           	ADD	R0,# (_CAN_Rev_DATA + 7)
                                           	BANKSEL	r0x1022
                                           	MOV	r0x1022, R0
                                           	MOV	R0,# 0x03
                                           	BANKSEL	r0x1023
                                           	ADD	R0, r0x1023
                                           	BANKSEL	r0x1025
                                           	MOV	r0x1025, R0
                                           	MOV	R0,# (_CAN_Rev_BUF + 0)
                                           	BANKSEL	r0x1025
                                           	ADD	r0x1025, R0
                                           	BANKSEL	r0x1025
                                           	MOV	R1, r0x1025
                                           	BANKSEL	_CAN_Rev_BUF
                                           	LD	R0, [R1]
                                           	BANKSEL	r0x1027
                                           	MOV	r0x1027, R0
                                           	BANKSEL	r0x1027
                                           	MOVZ	R0, r0x1027
                                           	BANKSEL	r0x1022
                                           	MOV	R1, r0x1022
                                           	BANKSEL	_CAN_Rev_DATA
                                           	ST	[R1], R0
                                           ;	.line	272; "../BSP_can.c"	for(i=0;i<CAN_Rev_DATA.data_length;i++)
                                           	BANKSEL	r0x1023
                                           	INC	r0x1023
                                           	JMP	_00113_DS_
                                           _00102_DS_
                                           ;	.line	281; "../BSP_can.c"	CANCMR = 0x04;//释放缓冲器
                                           	MOV	R0,# 0x04
                                           	BANKSEL	_CANCMR
                                           	MOV	_CANCMR, R0
                                           ;	.line	283; "../BSP_can.c"	can_data_hand++;//指针+1
                                           	BANKSEL	_can_data_hand
                                           	INC	_can_data_hand
                                           ;	.line	284; "../BSP_can.c"	if(can_data_hand==16)//若指针指向15以上，返回0
                                           	BANKSEL	_can_data_hand
                                           	MOVZ	R0, _can_data_hand
                                           ;	.line	286; "../BSP_can.c"	can_data_hand=0;
                                           	XOR	R0,# 0x10
                                           	JB	PSW, 2
                                           	JMP	_00160_DS_
                                           	BANKSEL	_can_data_hand
                                           	CLR	_can_data_hand
                                           _00160_DS_
                                           	CRET	
                                           func._CAN_Transmit_Message	.code
                                           _CAN_Transmit_Message	;Function start
                                           ;	.line	129; "../BSP_can.c"	CAN_SendData_STATE CAN_Transmit_Message(CAN_DATA_INF* CAN_Send_DATA)
                                           	BANKSEL	r0x102C
                                           	MOV	r0x102C, R0
                                           	BANKSEL	STK00
                                           	MOVZ	R0, STK00
                                           	BANKSEL	r0x102D
                                           	MOV	r0x102D, R0
                                           	BANKSEL	STK01
                                           	MOVZ	R0, STK01
                                           	BANKSEL	r0x102E
                                           	MOV	r0x102E, R0
                                           ;	.line	135; "../BSP_can.c"	while(!TXBSTA)//等待CPU可以访问发送缓冲器
                                           	BANKSEL	r0x102F
                                           	CLR	r0x102F
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           _00055_DS_
                                           	BANKSEL	_CANSTA_bits
                                           	JNB	_CANSTA_bits, 2
                                           	JMP	_00057_DS_
                                           ;	.line	137; "../BSP_can.c"	if(++Delay_Count>0xFE0)
                                           	BANKSEL	r0x102F
                                           	INC	r0x102F
                                           	JB	PSW, 2
                                           	JMP	_00161_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00161_DS_
                                           	MOV	R0,# 0x0f
                                           	BANKSEL	r0x1030
                                           	SUB	R0, r0x1030
                                           	JB	PSW, 2
                                           	JMP	_00083_DS_
                                           	MOV	R0,# 0xe1
                                           	BANKSEL	r0x102F
                                           	SUB	R0, r0x102F
                                           _00083_DS_
                                           	JB	PSW, 0
                                           	JMP	_00055_DS_
                                           ;	.line	138; "../BSP_can.c"	return False;
                                           	MOV	R0,# 0x00
                                           	JMP	_00072_DS_
                                           _00057_DS_
                                           ;	.line	141; "../BSP_can.c"	temp = (CAN_Send_DATA->data_ide<<7)|(CAN_Send_DATA->data_rtr<<6|CAN_Send_DATA->data_length);
                                           	BANKSEL	r0x102E
                                           	MOVZ	R0, r0x102E
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x102F
                                           	RRCR	r0x102F
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RRC	r0x1030
                                           	MOV	R0,# 0x01
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1031
                                           	CLR	r0x1031
                                           	BANKSEL	r0x1031
                                           	RLC	r0x1031
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1031
                                           	ADD	r0x1031, R0
                                           	BANKSEL	r0x1032
                                           	CLR	r0x1032
                                           	BANKSEL	r0x1032
                                           	RLC	r0x1032
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1032
                                           	ADD	r0x1032, R0
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1031
                                           	MOVZ	R0, r0x1031
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1032
                                           	MOVZ	R0, r0x1032
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	r0x1033
                                           	MOV	r0x1033, R0
                                           	BANKSEL	r0x1033
                                           	SWAPR	R0, r0x1033
                                           	AND	R0,# 0xf0
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	CLR	PSW, 0
                                           	BANKSEL	r0x102F
                                           	RLC	r0x102F
                                           	CLR	PSW, 0
                                           	BANKSEL	r0x102F
                                           	RLC	r0x102F
                                           	MOV	R0,# 0x02
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x1033
                                           	MOV	r0x1033, R0
                                           	BANKSEL	r0x1034
                                           	CLR	r0x1034
                                           	BANKSEL	r0x1034
                                           	RLC	r0x1034
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1034
                                           	ADD	r0x1034, R0
                                           	BANKSEL	r0x1035
                                           	CLR	r0x1035
                                           	BANKSEL	r0x1035
                                           	RLC	r0x1035
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1035
                                           	ADD	r0x1035, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1034
                                           	MOVZ	R0, r0x1034
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1035
                                           	MOVZ	R0, r0x1035
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	r0x1036
                                           	MOV	r0x1036, R0
                                           	BANKSEL	r0x1036
                                           	MOVZ	R0, r0x1036
                                           	BANKSEL	r0x102F
                                           	ORL	r0x102F, R0
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	r0x1030
                                           	ORL	R0, r0x1030
                                           	BANKSEL	_CANTXINF
                                           	MOV	_CANTXINF, R0
                                           ;	.line	143; "../BSP_can.c"	if(CAN_Send_DATA->data_ide==0)//标准帧
                                           	BANKSEL	r0x102E
                                           	MOVZ	R0, r0x102E
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	MOV	R0,# 0x00
                                           	BANKSEL	r0x102F
                                           	ORL	R0, r0x102F
                                           	JB	PSW, 2
                                           	JMP	_00065_DS_
                                           ;	.line	145; "../BSP_can.c"	if(CAN_Send_DATA->data_rtr==0)//数据帧
                                           	MOV	R0,# 0x01
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	r0x1034
                                           	MOV	r0x1034, R0
                                           	MOV	R0,# 0x00
                                           	BANKSEL	r0x1034
                                           	ORL	R0, r0x1034
                                           	JB	PSW, 2
                                           	JMP	_00059_DS_
                                           ;	.line	147; "../BSP_can.c"	CANTXID0=CAN_Send_DATA->data_id[0];
                                           	MOV	R0,# 0x03
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXID0
                                           	MOV	_CANTXID0, R0
                                           ;	.line	148; "../BSP_can.c"	CANTXID1=CAN_Send_DATA->data_id[1];
                                           	MOV	R0,# 0x03
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	BANKSEL	r0x102F
                                           	INC	r0x102F
                                           	JB	PSW, 2
                                           	JMP	_00162_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00162_DS_
                                           	JB	PSW, 2
                                           	JMP	_00163_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00163_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXID1
                                           	MOV	_CANTXID1, R0
                                           ;	.line	149; "../BSP_can.c"	CANTXID2=CAN_Send_DATA->raw_data[0];
                                           	MOV	R0,# 0x07
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXID2
                                           	MOV	_CANTXID2, R0
                                           ;	.line	150; "../BSP_can.c"	CANTXID3=CAN_Send_DATA->raw_data[1];
                                           	MOV	R0,# 0x07
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	BANKSEL	r0x102F
                                           	INC	r0x102F
                                           	JB	PSW, 2
                                           	JMP	_00164_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00164_DS_
                                           	JB	PSW, 2
                                           	JMP	_00165_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00165_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXID3
                                           	MOV	_CANTXID3, R0
                                           ;	.line	151; "../BSP_can.c"	CANTXDT0=CAN_Send_DATA->raw_data[2];
                                           	MOV	R0,# 0x07
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	MOV	R0,# 0x02
                                           	BANKSEL	r0x102F
                                           	ADD	r0x102F, R0
                                           	JB	PSW, 0
                                           	JMP	_00166_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00166_DS_
                                           	JB	PSW, 2
                                           	JMP	_00167_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00167_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXDT0
                                           	MOV	_CANTXDT0, R0
                                           ;	.line	152; "../BSP_can.c"	CANTXDT1=CAN_Send_DATA->raw_data[3];
                                           	MOV	R0,# 0x07
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	MOV	R0,# 0x03
                                           	BANKSEL	r0x102F
                                           	ADD	r0x102F, R0
                                           	JB	PSW, 0
                                           	JMP	_00168_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00168_DS_
                                           	JB	PSW, 2
                                           	JMP	_00169_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00169_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXDT1
                                           	MOV	_CANTXDT1, R0
                                           ;	.line	153; "../BSP_can.c"	CANTXDT2=CAN_Send_DATA->raw_data[4];
                                           	MOV	R0,# 0x07
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	MOV	R0,# 0x04
                                           	BANKSEL	r0x102F
                                           	ADD	r0x102F, R0
                                           	JB	PSW, 0
                                           	JMP	_00170_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00170_DS_
                                           	JB	PSW, 2
                                           	JMP	_00171_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00171_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXDT2
                                           	MOV	_CANTXDT2, R0
                                           ;	.line	154; "../BSP_can.c"	CANTXDT3=CAN_Send_DATA->raw_data[5];
                                           	MOV	R0,# 0x07
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	MOV	R0,# 0x05
                                           	BANKSEL	r0x102F
                                           	ADD	r0x102F, R0
                                           	JB	PSW, 0
                                           	JMP	_00172_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00172_DS_
                                           	JB	PSW, 2
                                           	JMP	_00173_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00173_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXDT3
                                           	MOV	_CANTXDT3, R0
                                           ;	.line	155; "../BSP_can.c"	CANTXDT4=CAN_Send_DATA->raw_data[6];
                                           	MOV	R0,# 0x07
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	MOV	R0,# 0x06
                                           	BANKSEL	r0x102F
                                           	ADD	r0x102F, R0
                                           	JB	PSW, 0
                                           	JMP	_00174_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00174_DS_
                                           	JB	PSW, 2
                                           	JMP	_00175_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00175_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXDT4
                                           	MOV	_CANTXDT4, R0
                                           ;	.line	156; "../BSP_can.c"	CANTXDT5=CAN_Send_DATA->raw_data[7];
                                           	MOV	R0,# 0x07
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	MOV	R0,# 0x07
                                           	BANKSEL	r0x102F
                                           	ADD	r0x102F, R0
                                           	JB	PSW, 0
                                           	JMP	_00176_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00176_DS_
                                           	JB	PSW, 2
                                           	JMP	_00177_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00177_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXDT5
                                           	MOV	_CANTXDT5, R0
                                           	JMP	_00066_DS_
                                           _00059_DS_
                                           ;	.line	160; "../BSP_can.c"	CANTXID0=CAN_Send_DATA->data_id[0];
                                           	MOV	R0,# 0x03
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXID0
                                           	MOV	_CANTXID0, R0
                                           ;	.line	161; "../BSP_can.c"	CANTXID1=CAN_Send_DATA->data_id[1];
                                           	MOV	R0,# 0x03
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	BANKSEL	r0x102F
                                           	INC	r0x102F
                                           	JB	PSW, 2
                                           	JMP	_00178_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00178_DS_
                                           	JB	PSW, 2
                                           	JMP	_00179_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00179_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXID1
                                           	MOV	_CANTXID1, R0
                                           	JMP	_00066_DS_
                                           _00065_DS_
                                           ;	.line	166; "../BSP_can.c"	if(CAN_Send_DATA->data_rtr==0) //为数据帧
                                           	MOV	R0,# 0x01
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	r0x1034
                                           	MOV	r0x1034, R0
                                           	MOV	R0,# 0x00
                                           	BANKSEL	r0x1034
                                           	ORL	R0, r0x1034
                                           	JB	PSW, 2
                                           	JMP	_00062_DS_
                                           ;	.line	168; "../BSP_can.c"	CANTXID0=CAN_Send_DATA->data_id[0];
                                           	MOV	R0,# 0x03
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXID0
                                           	MOV	_CANTXID0, R0
                                           ;	.line	169; "../BSP_can.c"	CANTXID1=CAN_Send_DATA->data_id[1];
                                           	MOV	R0,# 0x03
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	BANKSEL	r0x102F
                                           	INC	r0x102F
                                           	JB	PSW, 2
                                           	JMP	_00180_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00180_DS_
                                           	JB	PSW, 2
                                           	JMP	_00181_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00181_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXID1
                                           	MOV	_CANTXID1, R0
                                           ;	.line	170; "../BSP_can.c"	CANTXID2=CAN_Send_DATA->data_id[2];
                                           	MOV	R0,# 0x03
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	MOV	R0,# 0x02
                                           	BANKSEL	r0x102F
                                           	ADD	r0x102F, R0
                                           	JB	PSW, 0
                                           	JMP	_00182_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00182_DS_
                                           	JB	PSW, 2
                                           	JMP	_00183_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00183_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXID2
                                           	MOV	_CANTXID2, R0
                                           ;	.line	171; "../BSP_can.c"	CANTXID3=CAN_Send_DATA->data_id[3];
                                           	MOV	R0,# 0x03
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	MOV	R0,# 0x03
                                           	BANKSEL	r0x102F
                                           	ADD	r0x102F, R0
                                           	JB	PSW, 0
                                           	JMP	_00184_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00184_DS_
                                           	JB	PSW, 2
                                           	JMP	_00185_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00185_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXID3
                                           	MOV	_CANTXID3, R0
                                           ;	.line	172; "../BSP_can.c"	CANTXDT0=CAN_Send_DATA->raw_data[0];
                                           	MOV	R0,# 0x07
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXDT0
                                           	MOV	_CANTXDT0, R0
                                           ;	.line	173; "../BSP_can.c"	CANTXDT1=CAN_Send_DATA->raw_data[1];
                                           	MOV	R0,# 0x07
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	BANKSEL	r0x102F
                                           	INC	r0x102F
                                           	JB	PSW, 2
                                           	JMP	_00186_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00186_DS_
                                           	JB	PSW, 2
                                           	JMP	_00187_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00187_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXDT1
                                           	MOV	_CANTXDT1, R0
                                           ;	.line	174; "../BSP_can.c"	CANTXDT2=CAN_Send_DATA->raw_data[2];
                                           	MOV	R0,# 0x07
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	MOV	R0,# 0x02
                                           	BANKSEL	r0x102F
                                           	ADD	r0x102F, R0
                                           	JB	PSW, 0
                                           	JMP	_00188_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00188_DS_
                                           	JB	PSW, 2
                                           	JMP	_00189_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00189_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXDT2
                                           	MOV	_CANTXDT2, R0
                                           ;	.line	175; "../BSP_can.c"	CANTXDT3=CAN_Send_DATA->raw_data[3];
                                           	MOV	R0,# 0x07
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	MOV	R0,# 0x03
                                           	BANKSEL	r0x102F
                                           	ADD	r0x102F, R0
                                           	JB	PSW, 0
                                           	JMP	_00190_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00190_DS_
                                           	JB	PSW, 2
                                           	JMP	_00191_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00191_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXDT3
                                           	MOV	_CANTXDT3, R0
                                           ;	.line	176; "../BSP_can.c"	CANTXDT4=CAN_Send_DATA->raw_data[4];
                                           	MOV	R0,# 0x07
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	MOV	R0,# 0x04
                                           	BANKSEL	r0x102F
                                           	ADD	r0x102F, R0
                                           	JB	PSW, 0
                                           	JMP	_00192_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00192_DS_
                                           	JB	PSW, 2
                                           	JMP	_00193_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00193_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXDT4
                                           	MOV	_CANTXDT4, R0
                                           ;	.line	177; "../BSP_can.c"	CANTXDT5=CAN_Send_DATA->raw_data[5];
                                           	MOV	R0,# 0x07
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	MOV	R0,# 0x05
                                           	BANKSEL	r0x102F
                                           	ADD	r0x102F, R0
                                           	JB	PSW, 0
                                           	JMP	_00194_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00194_DS_
                                           	JB	PSW, 2
                                           	JMP	_00195_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00195_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXDT5
                                           	MOV	_CANTXDT5, R0
                                           ;	.line	178; "../BSP_can.c"	CANTXDT6=CAN_Send_DATA->raw_data[6];
                                           	MOV	R0,# 0x07
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	MOV	R0,# 0x06
                                           	BANKSEL	r0x102F
                                           	ADD	r0x102F, R0
                                           	JB	PSW, 0
                                           	JMP	_00196_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00196_DS_
                                           	JB	PSW, 2
                                           	JMP	_00197_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00197_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXDT6
                                           	MOV	_CANTXDT6, R0
                                           ;	.line	179; "../BSP_can.c"	CANTXDT7=CAN_Send_DATA->raw_data[7];
                                           	MOV	R0,# 0x07
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	MOV	R0,# 0x07
                                           	BANKSEL	r0x102F
                                           	ADD	r0x102F, R0
                                           	JB	PSW, 0
                                           	JMP	_00198_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00198_DS_
                                           	JB	PSW, 2
                                           	JMP	_00199_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00199_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXDT7
                                           	MOV	_CANTXDT7, R0
                                           	JMP	_00066_DS_
                                           _00062_DS_
                                           ;	.line	183; "../BSP_can.c"	CANTXID0=CAN_Send_DATA->data_id[0];
                                           	MOV	R0,# 0x03
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXID0
                                           	MOV	_CANTXID0, R0
                                           ;	.line	184; "../BSP_can.c"	CANTXID1=CAN_Send_DATA->data_id[1];
                                           	MOV	R0,# 0x03
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	BANKSEL	r0x102F
                                           	INC	r0x102F
                                           	JB	PSW, 2
                                           	JMP	_00200_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00200_DS_
                                           	JB	PSW, 2
                                           	JMP	_00201_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00201_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXID1
                                           	MOV	_CANTXID1, R0
                                           ;	.line	185; "../BSP_can.c"	CANTXID2=CAN_Send_DATA->data_id[2];
                                           	MOV	R0,# 0x03
                                           	BANKSEL	r0x102E
                                           	ADD	R0, r0x102E
                                           	BANKSEL	r0x102F
                                           	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
                                           	CLR	r0x1030
                                           	BANKSEL	r0x1030
                                           	RLC	r0x1030
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	r0x1030
                                           	ADD	r0x1030, R0
                                           	BANKSEL	r0x1033
                                           	CLR	r0x1033
                                           	BANKSEL	r0x1033
                                           	RLC	r0x1033
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	BANKSEL	r0x1033
                                           	ADD	r0x1033, R0
                                           	MOV	R0,# 0x02
                                           	BANKSEL	r0x102F
                                           	ADD	r0x102F, R0
                                           	JB	PSW, 0
                                           	JMP	_00202_DS_
                                           	BANKSEL	r0x1030
                                           	INC	r0x1030
                                           _00202_DS_
                                           	JB	PSW, 2
                                           	JMP	_00203_DS_
                                           	BANKSEL	r0x1033
                                           	INC	r0x1033
                                           _00203_DS_
                                           	BANKSEL	r0x102F
                                           	MOVZ	R0, r0x102F
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1030
                                           	MOVZ	R0, r0x1030
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1033
                                           	MOVZ	R0, r0x1033
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXID2
                                           	MOV	_CANTXID2, R0
                                           ;	.line	186; "../BSP_can.c"	CANTXID3=CAN_Send_DATA->data_id[3];
                                           	MOV	R0,# 0x03
                                           	BANKSEL	r0x102E
                                           	ADD	r0x102E, R0
                                           	JB	PSW, 0
                                           	JMP	_00204_DS_
                                           	BANKSEL	r0x102D
                                           	INC	r0x102D
                                           _00204_DS_
                                           	JB	PSW, 2
                                           	JMP	_00205_DS_
                                           	BANKSEL	r0x102C
                                           	INC	r0x102C
                                           _00205_DS_
                                           	MOV	R0,# 0x03
                                           	BANKSEL	r0x102E
                                           	ADD	r0x102E, R0
                                           	JB	PSW, 0
                                           	JMP	_00206_DS_
                                           	BANKSEL	r0x102D
                                           	INC	r0x102D
                                           _00206_DS_
                                           	JB	PSW, 2
                                           	JMP	_00207_DS_
                                           	BANKSEL	r0x102C
                                           	INC	r0x102C
                                           _00207_DS_
                                           	BANKSEL	r0x102E
                                           	MOVZ	R0, r0x102E
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x102D
                                           	MOVZ	R0, r0x102D
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x102C
                                           	MOVZ	R0, r0x102C
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	_CANTXID3
                                           	MOV	_CANTXID3, R0
                                           _00066_DS_
                                           ;	.line	191; "../BSP_can.c"	CANCMR = 0x03;
                                           	MOV	R0,# 0x03
                                           	BANKSEL	_CANCMR
                                           	MOV	_CANCMR, R0
                                           ;	.line	194; "../BSP_can.c"	while(!TCSTA)
                                           	BANKSEL	r0x102E
                                           	CLR	r0x102E
                                           	BANKSEL	r0x102D
                                           	CLR	r0x102D
                                           _00069_DS_
                                           	BANKSEL	_CANSTA_bits
                                           	JNB	_CANSTA_bits, 3
                                           	JMP	_00071_DS_
                                           ;	.line	196; "../BSP_can.c"	if(++Delay_Count>0xFE0)
                                           	BANKSEL	r0x102E
                                           	INC	r0x102E
                                           	JB	PSW, 2
                                           	JMP	_00208_DS_
                                           	BANKSEL	r0x102D
                                           	INC	r0x102D
                                           _00208_DS_
                                           	MOV	R0,# 0x0f
                                           	BANKSEL	r0x102D
                                           	SUB	R0, r0x102D
                                           	JB	PSW, 2
                                           	JMP	_00084_DS_
                                           	MOV	R0,# 0xe1
                                           	BANKSEL	r0x102E
                                           	SUB	R0, r0x102E
                                           _00084_DS_
                                           	JB	PSW, 0
                                           	JMP	_00069_DS_
                                           ;	.line	197; "../BSP_can.c"	return False;
                                           	MOV	R0,# 0x00
                                           	JMP	_00072_DS_
                                           _00071_DS_
                                           ;	.line	200; "../BSP_can.c"	return OK;
                                           	MOV	R0,# 0x01
                                           _00072_DS_
                                           	CRET	
                                           func._CAN_Init	.code
                                           _CAN_Init	;Function start
                                           ;	.line	93; "../BSP_can.c"	void CAN_Init(uint8 CAN_SJW, uint8 CAN_BS1, uint8 CAN_BS2, uint8 CAN_MODE, uint8 CAN_pre)
0076b3   e100     MOVB	#0x00               	BANKSEL	r0x1037
0076b4   51d4     MOV	0xd4, R0             	MOV	r0x1037, R0
                                           	BANKSEL	STK00
0076b5   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1038
0076b6   51d5     MOV	0xd5, R0             	MOV	r0x1038, R0
                                           	BANKSEL	STK01
0076b7   0e7d     MOVZ	R0, 0x7d            	MOVZ	R0, STK01
                                           	BANKSEL	r0x1039
0076b8   51d6     MOV	0xd6, R0             	MOV	r0x1039, R0
                                           	BANKSEL	STK02
0076b9   0e7c     MOVZ	R0, 0x7c            	MOVZ	R0, STK02
                                           	BANKSEL	r0x103A
0076ba   51d7     MOV	0xd7, R0             	MOV	r0x103A, R0
                                           	BANKSEL	STK03
0076bb   0e7b     MOVZ	R0, 0x7b            	MOVZ	R0, STK03
                                           	BANKSEL	r0x103B
0076bc   51d8     MOV	0xd8, R0             	MOV	r0x103B, R0
                                           ;	.line	96; "../BSP_can.c"	ANS15 = 0;
                                           	BANKSEL	_ANS1_bits
0076bd   654b     CLR	0x4b, 5              	CLR	_ANS1_bits, 5
                                           ;	.line	97; "../BSP_can.c"	ANS14 = 0;
                                           	BANKSEL	_ANS1_bits
0076be   644b     CLR	0x4b, 4              	CLR	_ANS1_bits, 4
                                           ;	.line	98; "../BSP_can.c"	TR15 = 0;
                                           	BANKSEL	_TR1_bits
0076bf   6527     CLR	0x27, 5              	CLR	_TR1_bits, 5
                                           ;	.line	99; "../BSP_can.c"	TR14 = 1;
                                           	BANKSEL	_TR1_bits
0076c0   6c27     SET	0x27, 4              	SET	_TR1_bits, 4
                                           ;	.line	101; "../BSP_can.c"	CANMOD |= CAN_reset;
0076c1   e105     MOVB	#0x05               	BANKSEL	_CANMOD
0076c2   683d     SET	0x3d, 0              	SET	_CANMOD, 0
                                           ;	.line	103; "../BSP_can.c"	if(CAN_MODE)
0076c3   9800     MOV	R0, #0               	MOV	R0,# 0x00
0076c4   e100     MOVB	#0x00               	BANKSEL	r0x103A
0076c5   30d7     ORL	R0, 0xd7             	ORL	R0, r0x103A
0076c6   7203     JNB	0x3, 2               	JNB	PSW, 2
0076c7   c6cc     JMP	#0x6cc               	JMP	_00048_DS_
                                           ;	.line	105; "../BSP_can.c"	CANMOD |= CAN_enable|CANCLK_SEL_HFCLK|CAN_LBACK_enable;
0076c8   98a4     MOV	R0, #0xa4            	MOV	R0,# 0xa4
0076c9   e105     MOVB	#0x05               	BANKSEL	_CANMOD
0076ca   313d     ORL	0x3d, R0             	ORL	_CANMOD, R0
0076cb   c6cf     JMP	#0x6cf               	JMP	_00049_DS_
                                           _00048_DS_
                                           ;	.line	109; "../BSP_can.c"	CANMOD |= CAN_enable|CANCLK_SEL_HFCLK;
0076cc   98a0     MOV	R0, #0xa0            	MOV	R0,# 0xa0
0076cd   e105     MOVB	#0x05               	BANKSEL	_CANMOD
0076ce   313d     ORL	0x3d, R0             	ORL	_CANMOD, R0
                                           _00049_DS_
                                           ;	.line	113; "../BSP_can.c"	CANBTR = (CAN_SJW-1)<<6|(CAN_pre-1);
0076cf   e100     MOVB	#0x00               	BANKSEL	r0x1037
0076d0   07d4     DEC	0xd4                 	DEC	r0x1037
                                           	BANKSEL	r0x1037
0076d1   40d4     SWAPR	R0, 0xd4           	SWAPR	R0, r0x1037
0076d2   88f0     AND	R0, #0xf0            	AND	R0,# 0xf0
                                           	BANKSEL	r0x103A
0076d3   51d7     MOV	0xd7, R0             	MOV	r0x103A, R0
0076d4   6003     CLR	0x3, 0               	CLR	PSW, 0
                                           	BANKSEL	r0x103A
0076d5   13d7     RLC	0xd7                 	RLC	r0x103A
0076d6   6003     CLR	0x3, 0               	CLR	PSW, 0
                                           	BANKSEL	r0x103A
0076d7   13d7     RLC	0xd7                 	RLC	r0x103A
                                           	BANKSEL	r0x103B
0076d8   07d8     DEC	0xd8                 	DEC	r0x103B
                                           	BANKSEL	r0x103B
0076d9   0ed8     MOVZ	R0, 0xd8            	MOVZ	R0, r0x103B
                                           	BANKSEL	r0x103A
0076da   30d7     ORL	R0, 0xd7             	ORL	R0, r0x103A
0076db   e105     MOVB	#0x05               	BANKSEL	_CANBTR
0076dc   5140     MOV	0x40, R0             	MOV	_CANBTR, R0
                                           ;	.line	114; "../BSP_can.c"	CANSEG = CAN_Sample_1|(CAN_BS1-1)|(CAN_BS2-1)<<4;
0076dd   e100     MOVB	#0x00               	BANKSEL	r0x1038
0076de   07d5     DEC	0xd5                 	DEC	r0x1038
                                           	BANKSEL	r0x1039
0076df   07d6     DEC	0xd6                 	DEC	r0x1039
                                           	BANKSEL	r0x1039
0076e0   40d6     SWAPR	R0, 0xd6           	SWAPR	R0, r0x1039
0076e1   88f0     AND	R0, #0xf0            	AND	R0,# 0xf0
                                           	BANKSEL	r0x1037
0076e2   51d4     MOV	0xd4, R0             	MOV	r0x1037, R0
                                           	BANKSEL	r0x1037
0076e3   0ed4     MOVZ	R0, 0xd4            	MOVZ	R0, r0x1037
                                           	BANKSEL	r0x1038
0076e4   30d5     ORL	R0, 0xd5             	ORL	R0, r0x1038
0076e5   e105     MOVB	#0x05               	BANKSEL	_CANSEG
0076e6   5141     MOV	0x41, R0             	MOV	_CANSEG, R0
                                           ;	.line	119; "../BSP_can.c"	CANMOD &= ~CAN_reset;
                                           	BANKSEL	_CANMOD
0076e7   0e3d     MOVZ	R0, 0x3d            	MOVZ	R0, _CANMOD
0076e8   e100     MOVB	#0x00               	BANKSEL	r0x1037
0076e9   51d4     MOV	0xd4, R0             	MOV	r0x1037, R0
                                           	BANKSEL	r0x1037
0076ea   60d4     CLR	0xd4, 0              	CLR	r0x1037, 0
                                           	BANKSEL	r0x1037
0076eb   0ed4     MOVZ	R0, 0xd4            	MOVZ	R0, r0x1037
0076ec   e105     MOVB	#0x05               	BANKSEL	_CANMOD
0076ed   513d     MOV	0x3d, R0             	MOV	_CANMOD, R0
0076ee   0008     CRET                     	CRET	
                                           func._CAN_IDFilterConfig	.code
                                           _CAN_IDFilterConfig	;Function start
                                           ;	.line	14; "../BSP_can.c"	FilterConfig_STATE CAN_IDFilterConfig(uint8 CAN_IDE, uint8 CANID_MODE, uint32 CAN_FilterID, uint32 CAN_MASKID)
0071c5   e100     MOVB	#0x00               	BANKSEL	r0x103C
0071c6   51c7     MOV	0xc7, R0             	MOV	r0x103C, R0
                                           	BANKSEL	STK00
0071c7   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x103D
0071c8   51c8     MOV	0xc8, R0             	MOV	r0x103D, R0
                                           	BANKSEL	STK01
0071c9   0e7d     MOVZ	R0, 0x7d            	MOVZ	R0, STK01
                                           	BANKSEL	r0x103E
0071ca   51cc     MOV	0xcc, R0             	MOV	r0x103E, R0
                                           	BANKSEL	STK02
0071cb   0e7c     MOVZ	R0, 0x7c            	MOVZ	R0, STK02
                                           	BANKSEL	r0x103F
0071cc   51cb     MOV	0xcb, R0             	MOV	r0x103F, R0
                                           	BANKSEL	STK03
0071cd   0e7b     MOVZ	R0, 0x7b            	MOVZ	R0, STK03
                                           	BANKSEL	r0x1040
0071ce   51ca     MOV	0xca, R0             	MOV	r0x1040, R0
                                           	BANKSEL	STK04
0071cf   0e7a     MOVZ	R0, 0x7a            	MOVZ	R0, STK04
                                           	BANKSEL	r0x1041
0071d0   51c9     MOV	0xc9, R0             	MOV	r0x1041, R0
                                           	BANKSEL	STK05
0071d1   0e79     MOVZ	R0, 0x79            	MOVZ	R0, STK05
                                           	BANKSEL	r0x1042
0071d2   51d0     MOV	0xd0, R0             	MOV	r0x1042, R0
                                           	BANKSEL	STK06
0071d3   0e78     MOVZ	R0, 0x78            	MOVZ	R0, STK06
                                           	BANKSEL	r0x1043
0071d4   51cf     MOV	0xcf, R0             	MOV	r0x1043, R0
                                           	BANKSEL	STK07
0071d5   0ea9     MOVZ	R0, 0xa9            	MOVZ	R0, STK07
                                           	BANKSEL	r0x1044
0071d6   51ce     MOV	0xce, R0             	MOV	r0x1044, R0
                                           	BANKSEL	STK08
0071d7   0ea8     MOVZ	R0, 0xa8            	MOVZ	R0, STK08
                                           	BANKSEL	r0x1045
0071d8   51cd     MOV	0xcd, R0             	MOV	r0x1045, R0
                                           ;	.line	16; "../BSP_can.c"	if(CAN_IDE == 0) //标准模式
0071d9   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x103C
0071da   30c7     ORL	R0, 0xc7             	ORL	R0, r0x103C
0071db   7a03     JB	0x3, 2                	JB	PSW, 2
0071dc   c255     JMP	#0x255               	JMP	_00022_DS_
                                           ;	.line	19; "../BSP_can.c"	if(CANID_MODE == 0) //11位ID右对齐
0071dd   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x103D
0071de   30c8     ORL	R0, 0xc8             	ORL	R0, r0x103D
0071df   7a03     JB	0x3, 2                	JB	PSW, 2
0071e0   c205     JMP	#0x205               	JMP	_00007_DS_
                                           ;	.line	21; "../BSP_can.c"	if(CAN_FilterID>0x7FFF)
                                           	BANKSEL	r0x1040
0071e1   0eca     MOVZ	R0, 0xca            	MOVZ	R0, r0x1040
                                           	BANKSEL	r0x1040
0071e2   7fca     JB	0xca, 7               	JB	r0x1040, 7
0071e3   c1ee     JMP	#0x1ee               	JMP	_00002_DS_
                                           	BANKSEL	r0x103F
0071e4   0ecb     MOVZ	R0, 0xcb            	MOVZ	R0, r0x103F
0071e5   88ff     AND	R0, #0xff            	AND	R0,# 0xff
0071e6   7203     JNB	0x3, 2               	JNB	PSW, 2
0071e7   c1ee     JMP	#0x1ee               	JMP	_00002_DS_
                                           	BANKSEL	r0x103E
0071e8   0ecc     MOVZ	R0, 0xcc            	MOVZ	R0, r0x103E
0071e9   88ff     AND	R0, #0xff            	AND	R0,# 0xff
0071ea   7203     JNB	0x3, 2               	JNB	PSW, 2
0071eb   c1ee     JMP	#0x1ee               	JMP	_00002_DS_
                                           ;	.line	22; "../BSP_can.c"	return False;
0071ec   9800     MOV	R0, #0               	MOV	R0,# 0x00
0071ed   c2de     JMP	#0x2de               	JMP	_00024_DS_
                                           _00002_DS_
                                           ;	.line	25; "../BSP_can.c"	CAN_FilterID <<=5;
0071ee   9805     MOV	R0, #0x5             	MOV	R0,# 0x05
0071ef   ff10     INC	R0                   	INC	R0
0071f0   c1f7     JMP	#0x1f7               	JMP	_00037_DS_
                                           _00036_DS_
0071f1   6003     CLR	0x3, 0               	CLR	PSW, 0
0071f2   e100     MOVB	#0x00               	BANKSEL	r0x1041
0071f3   13c9     RLC	0xc9                 	RLC	r0x1041
                                           	BANKSEL	r0x1040
0071f4   13ca     RLC	0xca                 	RLC	r0x1040
                                           	BANKSEL	r0x103F
0071f5   13cb     RLC	0xcb                 	RLC	r0x103F
                                           	BANKSEL	r0x103E
0071f6   13cc     RLC	0xcc                 	RLC	r0x103E
                                           _00037_DS_
0071f7   ff58     DECJZ	R0                 	DECJZ	R0
0071f8   c1f1     JMP	#0x1f1               	JMP	_00036_DS_
                                           ;	.line	26; "../BSP_can.c"	CAN_MASKID <<=5;
0071f9   9805     MOV	R0, #0x5             	MOV	R0,# 0x05
0071fa   ff10     INC	R0                   	INC	R0
0071fb   c202     JMP	#0x202               	JMP	_00039_DS_
                                           _00038_DS_
0071fc   6003     CLR	0x3, 0               	CLR	PSW, 0
0071fd   e100     MOVB	#0x00               	BANKSEL	r0x1045
0071fe   13cd     RLC	0xcd                 	RLC	r0x1045
                                           	BANKSEL	r0x1044
0071ff   13ce     RLC	0xce                 	RLC	r0x1044
                                           	BANKSEL	r0x1043
007200   13cf     RLC	0xcf                 	RLC	r0x1043
                                           	BANKSEL	r0x1042
007201   13d0     RLC	0xd0                 	RLC	r0x1042
                                           _00039_DS_
007202   ff58     DECJZ	R0                 	DECJZ	R0
007203   c1fc     JMP	#0x1fc               	JMP	_00038_DS_
007204   c217     JMP	#0x217               	JMP	_00008_DS_
                                           _00007_DS_
                                           ;	.line	31; "../BSP_can.c"	if(CAN_FilterID>0xFFE0) //11位ID左对齐，其值超过11位，则判断输入ID错误
007205   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x103E
007206   38cc     SUB	R0, 0xcc             	SUB	R0, r0x103E
007207   7a03     JB	0x3, 2                	JB	PSW, 2
007208   c213     JMP	#0x213               	JMP	_00040_DS_
007209   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x103F
00720a   38cb     SUB	R0, 0xcb             	SUB	R0, r0x103F
00720b   7a03     JB	0x3, 2                	JB	PSW, 2
00720c   c213     JMP	#0x213               	JMP	_00040_DS_
00720d   98ff     MOV	R0, #0xff            	MOV	R0,# 0xff
                                           	BANKSEL	r0x1040
00720e   38ca     SUB	R0, 0xca             	SUB	R0, r0x1040
00720f   7a03     JB	0x3, 2                	JB	PSW, 2
007210   c213     JMP	#0x213               	JMP	_00040_DS_
007211   98e1     MOV	R0, #0xe1            	MOV	R0,# 0xe1
                                           	BANKSEL	r0x1041
007212   38c9     SUB	R0, 0xc9             	SUB	R0, r0x1041
                                           _00040_DS_
007213   7803     JB	0x3, 0                	JB	PSW, 0
007214   c217     JMP	#0x217               	JMP	_00008_DS_
                                           ;	.line	32; "../BSP_can.c"	return False;
007215   9800     MOV	R0, #0               	MOV	R0,# 0x00
007216   c2de     JMP	#0x2de               	JMP	_00024_DS_
                                           _00008_DS_
                                           ;	.line	34; "../BSP_can.c"	if(CAN_FilterID&0xFE00 == 0xFE00) //11位ID左对齐，CAN协议要求，高7位不能全部是隐性位，即高7位全部为1是错误的ID。
                                           	BANKSEL	r0x1041
007217   78c9     JB	0xc9, 0               	JB	r0x1041, 0
007218   c21b     JMP	#0x21b               	JMP	_00010_DS_
                                           ;	.line	35; "../BSP_can.c"	return False;
007219   9800     MOV	R0, #0               	MOV	R0,# 0x00
00721a   c2de     JMP	#0x2de               	JMP	_00024_DS_
                                           _00010_DS_
                                           ;	.line	37; "../BSP_can.c"	CANMOD |= CAN_reset; //CAN模块进入复位模式，开始配置其寄存器
00721b   e105     MOVB	#0x05               	BANKSEL	_CANMOD
00721c   683d     SET	0x3d, 0              	SET	_CANMOD, 0
                                           ;	.line	38; "../BSP_can.c"	CANACR0 = CAN_FilterID>>8;  //设置接收识别ID
00721d   e100     MOVB	#0x00               	BANKSEL	r0x1040
00721e   0eca     MOVZ	R0, 0xca            	MOVZ	R0, r0x1040
                                           	BANKSEL	r0x103C
00721f   51c7     MOV	0xc7, R0             	MOV	r0x103C, R0
                                           	BANKSEL	r0x103F
007220   0ecb     MOVZ	R0, 0xcb            	MOVZ	R0, r0x103F
                                           	BANKSEL	r0x1046
007221   51d1     MOV	0xd1, R0             	MOV	r0x1046, R0
                                           	BANKSEL	r0x103E
007222   0ecc     MOVZ	R0, 0xcc            	MOVZ	R0, r0x103E
                                           	BANKSEL	r0x1047
007223   51d2     MOV	0xd2, R0             	MOV	r0x1047, R0
                                           	BANKSEL	r0x1048
007224   03d3     CLR	0xd3                 	CLR	r0x1048
                                           	BANKSEL	r0x103C
007225   0ec7     MOVZ	R0, 0xc7            	MOVZ	R0, r0x103C
007226   e105     MOVB	#0x05               	BANKSEL	_CANACR0
007227   5148     MOV	0x48, R0             	MOV	_CANACR0, R0
                                           ;	.line	39; "../BSP_can.c"	CANACR1 = CAN_FilterID&0xE0;
007228   98e0     MOV	R0, #0xe0            	MOV	R0,# 0xe0
007229   e100     MOVB	#0x00               	BANKSEL	r0x1041
00722a   28c9     AND	R0, 0xc9             	AND	R0, r0x1041
                                           	BANKSEL	r0x103C
00722b   51c7     MOV	0xc7, R0             	MOV	r0x103C, R0
                                           	BANKSEL	r0x1046
00722c   03d1     CLR	0xd1                 	CLR	r0x1046
                                           	BANKSEL	r0x1047
00722d   03d2     CLR	0xd2                 	CLR	r0x1047
                                           	BANKSEL	r0x1048
00722e   03d3     CLR	0xd3                 	CLR	r0x1048
                                           	BANKSEL	r0x103C
00722f   0ec7     MOVZ	R0, 0xc7            	MOVZ	R0, r0x103C
007230   e105     MOVB	#0x05               	BANKSEL	_CANACR1
007231   5149     MOV	0x49, R0             	MOV	_CANACR1, R0
                                           ;	.line	40; "../BSP_can.c"	CANACR2 = 0;
                                           	BANKSEL	_CANACR2
007232   034a     CLR	0x4a                 	CLR	_CANACR2
                                           ;	.line	41; "../BSP_can.c"	CANACR3 = 0;
                                           	BANKSEL	_CANACR3
007233   034b     CLR	0x4b                 	CLR	_CANACR3
                                           ;	.line	42; "../BSP_can.c"	CANMSK0 = CAN_MASKID>>8;  //设置识别ID掩码
007234   e100     MOVB	#0x00               	BANKSEL	r0x1043
007235   0ecf     MOVZ	R0, 0xcf            	MOVZ	R0, r0x1043
                                           	BANKSEL	r0x1046
007236   51d1     MOV	0xd1, R0             	MOV	r0x1046, R0
                                           	BANKSEL	r0x1042
007237   0ed0     MOVZ	R0, 0xd0            	MOVZ	R0, r0x1042
                                           	BANKSEL	r0x1047
007238   51d2     MOV	0xd2, R0             	MOV	r0x1047, R0
                                           	BANKSEL	r0x1048
007239   03d3     CLR	0xd3                 	CLR	r0x1048
                                           	BANKSEL	r0x1044
00723a   0ece     MOVZ	R0, 0xce            	MOVZ	R0, r0x1044
                                           	BANKSEL	r0x103C
00723b   51c7     MOV	0xc7, R0             	MOV	r0x103C, R0
00723c   e105     MOVB	#0x05               	BANKSEL	_CANMSK0
00723d   514c     MOV	0x4c, R0             	MOV	_CANMSK0, R0
                                           ;	.line	43; "../BSP_can.c"	CANMSK1 = CAN_MASKID&0xE0;
00723e   98e0     MOV	R0, #0xe0            	MOV	R0,# 0xe0
00723f   e100     MOVB	#0x00               	BANKSEL	r0x1045
007240   28cd     AND	R0, 0xcd             	AND	R0, r0x1045
                                           	BANKSEL	r0x103C
007241   51c7     MOV	0xc7, R0             	MOV	r0x103C, R0
                                           	BANKSEL	r0x1046
007242   03d1     CLR	0xd1                 	CLR	r0x1046
                                           	BANKSEL	r0x1047
007243   03d2     CLR	0xd2                 	CLR	r0x1047
                                           	BANKSEL	r0x1048
007244   03d3     CLR	0xd3                 	CLR	r0x1048
                                           	BANKSEL	r0x103C
007245   0ec7     MOVZ	R0, 0xc7            	MOVZ	R0, r0x103C
007246   e105     MOVB	#0x05               	BANKSEL	_CANMSK1
007247   514d     MOV	0x4d, R0             	MOV	_CANMSK1, R0
                                           ;	.line	44; "../BSP_can.c"	CANMSK2 = 0xFF;
007248   98ff     MOV	R0, #0xff            	MOV	R0,# 0xff
                                           	BANKSEL	_CANMSK2
007249   514e     MOV	0x4e, R0             	MOV	_CANMSK2, R0
                                           ;	.line	45; "../BSP_can.c"	CANMSK3 = 0xFF;
00724a   98ff     MOV	R0, #0xff            	MOV	R0,# 0xff
                                           	BANKSEL	_CANMSK3
00724b   514f     MOV	0x4f, R0             	MOV	_CANMSK3, R0
                                           ;	.line	46; "../BSP_can.c"	CANMOD &= ~CAN_reset; //CAN模块退出复位模式，进入工作模式
                                           	BANKSEL	_CANMOD
00724c   0e3d     MOVZ	R0, 0x3d            	MOVZ	R0, _CANMOD
00724d   e100     MOVB	#0x00               	BANKSEL	r0x103C
00724e   51c7     MOV	0xc7, R0             	MOV	r0x103C, R0
                                           	BANKSEL	r0x103C
00724f   60c7     CLR	0xc7, 0              	CLR	r0x103C, 0
                                           	BANKSEL	r0x103C
007250   0ec7     MOVZ	R0, 0xc7            	MOVZ	R0, r0x103C
007251   e105     MOVB	#0x05               	BANKSEL	_CANMOD
007252   513d     MOV	0x3d, R0             	MOV	_CANMOD, R0
                                           ;	.line	47; "../BSP_can.c"	return OK;
007253   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
007254   c2de     JMP	#0x2de               	JMP	_00024_DS_
                                           _00022_DS_
                                           ;	.line	51; "../BSP_can.c"	if(CANID_MODE == 0)
007255   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x103D
007256   30c8     ORL	R0, 0xc8             	ORL	R0, r0x103D
007257   7a03     JB	0x3, 2                	JB	PSW, 2
007258   c276     JMP	#0x276               	JMP	_00017_DS_
                                           ;	.line	53; "../BSP_can.c"	if(CAN_FilterID>0x1FFFFFFF)
                                           	BANKSEL	r0x103E
007259   0ecc     MOVZ	R0, 0xcc            	MOVZ	R0, r0x103E
00725a   88e0     AND	R0, #0xe0            	AND	R0,# 0xe0
00725b   7203     JNB	0x3, 2               	JNB	PSW, 2
00725c   c25f     JMP	#0x25f               	JMP	_00012_DS_
                                           ;	.line	54; "../BSP_can.c"	return False;
00725d   9800     MOV	R0, #0               	MOV	R0,# 0x00
00725e   c2de     JMP	#0x2de               	JMP	_00024_DS_
                                           _00012_DS_
                                           ;	.line	57; "../BSP_can.c"	CAN_FilterID <<=3;
00725f   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
007260   ff10     INC	R0                   	INC	R0
007261   c268     JMP	#0x268               	JMP	_00043_DS_
                                           _00042_DS_
007262   6003     CLR	0x3, 0               	CLR	PSW, 0
007263   e100     MOVB	#0x00               	BANKSEL	r0x1041
007264   13c9     RLC	0xc9                 	RLC	r0x1041
                                           	BANKSEL	r0x1040
007265   13ca     RLC	0xca                 	RLC	r0x1040
                                           	BANKSEL	r0x103F
007266   13cb     RLC	0xcb                 	RLC	r0x103F
                                           	BANKSEL	r0x103E
007267   13cc     RLC	0xcc                 	RLC	r0x103E
                                           _00043_DS_
007268   ff58     DECJZ	R0                 	DECJZ	R0
007269   c262     JMP	#0x262               	JMP	_00042_DS_
                                           ;	.line	58; "../BSP_can.c"	CAN_MASKID   <<=3;
00726a   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
00726b   ff10     INC	R0                   	INC	R0
00726c   c273     JMP	#0x273               	JMP	_00045_DS_
                                           _00044_DS_
00726d   6003     CLR	0x3, 0               	CLR	PSW, 0
00726e   e100     MOVB	#0x00               	BANKSEL	r0x1045
00726f   13cd     RLC	0xcd                 	RLC	r0x1045
                                           	BANKSEL	r0x1044
007270   13ce     RLC	0xce                 	RLC	r0x1044
                                           	BANKSEL	r0x1043
007271   13cf     RLC	0xcf                 	RLC	r0x1043
                                           	BANKSEL	r0x1042
007272   13d0     RLC	0xd0                 	RLC	r0x1042
                                           _00045_DS_
007273   ff58     DECJZ	R0                 	DECJZ	R0
007274   c26d     JMP	#0x26d               	JMP	_00044_DS_
007275   c288     JMP	#0x288               	JMP	_00018_DS_
                                           _00017_DS_
                                           ;	.line	63; "../BSP_can.c"	if(CAN_FilterID>0xFFFFFFF8)
007276   98ff     MOV	R0, #0xff            	MOV	R0,# 0xff
                                           	BANKSEL	r0x103E
007277   38cc     SUB	R0, 0xcc             	SUB	R0, r0x103E
007278   7a03     JB	0x3, 2                	JB	PSW, 2
007279   c284     JMP	#0x284               	JMP	_00046_DS_
00727a   98ff     MOV	R0, #0xff            	MOV	R0,# 0xff
                                           	BANKSEL	r0x103F
00727b   38cb     SUB	R0, 0xcb             	SUB	R0, r0x103F
00727c   7a03     JB	0x3, 2                	JB	PSW, 2
00727d   c284     JMP	#0x284               	JMP	_00046_DS_
00727e   98ff     MOV	R0, #0xff            	MOV	R0,# 0xff
                                           	BANKSEL	r0x1040
00727f   38ca     SUB	R0, 0xca             	SUB	R0, r0x1040
007280   7a03     JB	0x3, 2                	JB	PSW, 2
007281   c284     JMP	#0x284               	JMP	_00046_DS_
007282   98f9     MOV	R0, #0xf9            	MOV	R0,# 0xf9
                                           	BANKSEL	r0x1041
007283   38c9     SUB	R0, 0xc9             	SUB	R0, r0x1041
                                           _00046_DS_
007284   7803     JB	0x3, 0                	JB	PSW, 0
007285   c288     JMP	#0x288               	JMP	_00018_DS_
                                           ;	.line	64; "../BSP_can.c"	return False;
007286   9800     MOV	R0, #0               	MOV	R0,# 0x00
007287   c2de     JMP	#0x2de               	JMP	_00024_DS_
                                           _00018_DS_
                                           ;	.line	66; "../BSP_can.c"	if(CAN_FilterID&0xFE000000 == 0xFE000000)
                                           	BANKSEL	r0x1041
007288   78c9     JB	0xc9, 0               	JB	r0x1041, 0
007289   c28c     JMP	#0x28c               	JMP	_00020_DS_
                                           ;	.line	67; "../BSP_can.c"	return False;
00728a   9800     MOV	R0, #0               	MOV	R0,# 0x00
00728b   c2de     JMP	#0x2de               	JMP	_00024_DS_
                                           _00020_DS_
                                           ;	.line	68; "../BSP_can.c"	CANMOD |= CAN_reset;
00728c   e105     MOVB	#0x05               	BANKSEL	_CANMOD
00728d   683d     SET	0x3d, 0              	SET	_CANMOD, 0
                                           ;	.line	69; "../BSP_can.c"	CANACR0 = CAN_FilterID>>24;
00728e   e100     MOVB	#0x00               	BANKSEL	r0x103D
00728f   03c8     CLR	0xc8                 	CLR	r0x103D
                                           	BANKSEL	r0x1046
007290   03d1     CLR	0xd1                 	CLR	r0x1046
                                           	BANKSEL	r0x1047
007291   03d2     CLR	0xd2                 	CLR	r0x1047
                                           	BANKSEL	r0x103E
007292   0ecc     MOVZ	R0, 0xcc            	MOVZ	R0, r0x103E
                                           	BANKSEL	r0x103C
007293   51c7     MOV	0xc7, R0             	MOV	r0x103C, R0
007294   e105     MOVB	#0x05               	BANKSEL	_CANACR0
007295   5148     MOV	0x48, R0             	MOV	_CANACR0, R0
                                           ;	.line	70; "../BSP_can.c"	CANACR1 = CAN_FilterID>>16;
007296   e100     MOVB	#0x00               	BANKSEL	r0x103E
007297   0ecc     MOVZ	R0, 0xcc            	MOVZ	R0, r0x103E
                                           	BANKSEL	r0x103D
007298   51c8     MOV	0xc8, R0             	MOV	r0x103D, R0
                                           	BANKSEL	r0x1046
007299   03d1     CLR	0xd1                 	CLR	r0x1046
                                           	BANKSEL	r0x1047
00729a   03d2     CLR	0xd2                 	CLR	r0x1047
                                           	BANKSEL	r0x103F
00729b   0ecb     MOVZ	R0, 0xcb            	MOVZ	R0, r0x103F
                                           	BANKSEL	r0x103C
00729c   51c7     MOV	0xc7, R0             	MOV	r0x103C, R0
00729d   e105     MOVB	#0x05               	BANKSEL	_CANACR1
00729e   5149     MOV	0x49, R0             	MOV	_CANACR1, R0
                                           ;	.line	71; "../BSP_can.c"	CANACR2 = CAN_FilterID>>8;
00729f   e100     MOVB	#0x00               	BANKSEL	r0x103F
0072a0   0ecb     MOVZ	R0, 0xcb            	MOVZ	R0, r0x103F
                                           	BANKSEL	r0x103D
0072a1   51c8     MOV	0xc8, R0             	MOV	r0x103D, R0
                                           	BANKSEL	r0x103E
0072a2   0ecc     MOVZ	R0, 0xcc            	MOVZ	R0, r0x103E
                                           	BANKSEL	r0x1046
0072a3   51d1     MOV	0xd1, R0             	MOV	r0x1046, R0
                                           	BANKSEL	r0x1047
0072a4   03d2     CLR	0xd2                 	CLR	r0x1047
                                           	BANKSEL	r0x1040
0072a5   0eca     MOVZ	R0, 0xca            	MOVZ	R0, r0x1040
                                           	BANKSEL	r0x103C
0072a6   51c7     MOV	0xc7, R0             	MOV	r0x103C, R0
0072a7   e105     MOVB	#0x05               	BANKSEL	_CANACR2
0072a8   514a     MOV	0x4a, R0             	MOV	_CANACR2, R0
                                           ;	.line	72; "../BSP_can.c"	CANACR3 = CAN_FilterID&0xF8;
0072a9   98f8     MOV	R0, #0xf8            	MOV	R0,# 0xf8
0072aa   e100     MOVB	#0x00               	BANKSEL	r0x1041
0072ab   29c9     AND	0xc9, R0             	AND	r0x1041, R0
                                           	BANKSEL	r0x1040
0072ac   03ca     CLR	0xca                 	CLR	r0x1040
                                           	BANKSEL	r0x103F
0072ad   03cb     CLR	0xcb                 	CLR	r0x103F
                                           	BANKSEL	r0x103E
0072ae   03cc     CLR	0xcc                 	CLR	r0x103E
                                           	BANKSEL	r0x1041
0072af   0ec9     MOVZ	R0, 0xc9            	MOVZ	R0, r0x1041
0072b0   e105     MOVB	#0x05               	BANKSEL	_CANACR3
0072b1   514b     MOV	0x4b, R0             	MOV	_CANACR3, R0
                                           ;	.line	73; "../BSP_can.c"	CANMSK0 = CAN_MASKID>>24;
0072b2   e100     MOVB	#0x00               	BANKSEL	r0x1040
0072b3   03ca     CLR	0xca                 	CLR	r0x1040
                                           	BANKSEL	r0x103F
0072b4   03cb     CLR	0xcb                 	CLR	r0x103F
                                           	BANKSEL	r0x103E
0072b5   03cc     CLR	0xcc                 	CLR	r0x103E
                                           	BANKSEL	r0x1042
0072b6   0ed0     MOVZ	R0, 0xd0            	MOVZ	R0, r0x1042
                                           	BANKSEL	r0x1041
0072b7   51c9     MOV	0xc9, R0             	MOV	r0x1041, R0
0072b8   e105     MOVB	#0x05               	BANKSEL	_CANMSK0
0072b9   514c     MOV	0x4c, R0             	MOV	_CANMSK0, R0
                                           ;	.line	74; "../BSP_can.c"	CANMSK1 = CAN_MASKID>>16;
0072ba   e100     MOVB	#0x00               	BANKSEL	r0x1042
0072bb   0ed0     MOVZ	R0, 0xd0            	MOVZ	R0, r0x1042
                                           	BANKSEL	r0x1040
0072bc   51ca     MOV	0xca, R0             	MOV	r0x1040, R0
                                           	BANKSEL	r0x103F
0072bd   03cb     CLR	0xcb                 	CLR	r0x103F
                                           	BANKSEL	r0x103E
0072be   03cc     CLR	0xcc                 	CLR	r0x103E
                                           	BANKSEL	r0x1043
0072bf   0ecf     MOVZ	R0, 0xcf            	MOVZ	R0, r0x1043
                                           	BANKSEL	r0x1041
0072c0   51c9     MOV	0xc9, R0             	MOV	r0x1041, R0
0072c1   e105     MOVB	#0x05               	BANKSEL	_CANMSK1
0072c2   514d     MOV	0x4d, R0             	MOV	_CANMSK1, R0
                                           ;	.line	75; "../BSP_can.c"	CANMSK2 = CAN_MASKID>>8;
0072c3   e100     MOVB	#0x00               	BANKSEL	r0x1043
0072c4   0ecf     MOVZ	R0, 0xcf            	MOVZ	R0, r0x1043
                                           	BANKSEL	r0x1040
0072c5   51ca     MOV	0xca, R0             	MOV	r0x1040, R0
                                           	BANKSEL	r0x1042
0072c6   0ed0     MOVZ	R0, 0xd0            	MOVZ	R0, r0x1042
                                           	BANKSEL	r0x103F
0072c7   51cb     MOV	0xcb, R0             	MOV	r0x103F, R0
                                           	BANKSEL	r0x103E
0072c8   03cc     CLR	0xcc                 	CLR	r0x103E
                                           	BANKSEL	r0x1044
0072c9   0ece     MOVZ	R0, 0xce            	MOVZ	R0, r0x1044
                                           	BANKSEL	r0x1041
0072ca   51c9     MOV	0xc9, R0             	MOV	r0x1041, R0
0072cb   e105     MOVB	#0x05               	BANKSEL	_CANMSK2
0072cc   514e     MOV	0x4e, R0             	MOV	_CANMSK2, R0
                                           ;	.line	76; "../BSP_can.c"	CANMSK3 = CAN_MASKID&0xF8;
0072cd   98f8     MOV	R0, #0xf8            	MOV	R0,# 0xf8
0072ce   e100     MOVB	#0x00               	BANKSEL	r0x1045
0072cf   29cd     AND	0xcd, R0             	AND	r0x1045, R0
                                           	BANKSEL	r0x1044
0072d0   03ce     CLR	0xce                 	CLR	r0x1044
                                           	BANKSEL	r0x1043
0072d1   03cf     CLR	0xcf                 	CLR	r0x1043
                                           	BANKSEL	r0x1042
0072d2   03d0     CLR	0xd0                 	CLR	r0x1042
                                           	BANKSEL	r0x1045
0072d3   0ecd     MOVZ	R0, 0xcd            	MOVZ	R0, r0x1045
0072d4   e105     MOVB	#0x05               	BANKSEL	_CANMSK3
0072d5   514f     MOV	0x4f, R0             	MOV	_CANMSK3, R0
                                           ;	.line	77; "../BSP_can.c"	CANMOD &= ~CAN_reset;
                                           	BANKSEL	_CANMOD
0072d6   0e3d     MOVZ	R0, 0x3d            	MOVZ	R0, _CANMOD
0072d7   e100     MOVB	#0x00               	BANKSEL	r0x1045
0072d8   51cd     MOV	0xcd, R0             	MOV	r0x1045, R0
                                           	BANKSEL	r0x1045
0072d9   60cd     CLR	0xcd, 0              	CLR	r0x1045, 0
                                           	BANKSEL	r0x1045
0072da   0ecd     MOVZ	R0, 0xcd            	MOVZ	R0, r0x1045
0072db   e105     MOVB	#0x05               	BANKSEL	_CANMOD
0072dc   513d     MOV	0x3d, R0             	MOV	_CANMOD, R0
                                           ;	.line	78; "../BSP_can.c"	return OK;
0072dd   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           _00024_DS_
0072de   0008     CRET                     	CRET	
                                           	.end
                                           	.radix dec
                                           	.include "KF8A100GQP.inc"
                                           func._PORT_Init	.code
                                           _PORT_Init	;Function start
                                           ;	.line	16; "../Clock.c"	P0LR = 0;	P1LR = 0;	P2LR = 0;	P3LR = 0;
00771d   e100     MOVB	#0x00               	BANKSEL	_P0LR
00771e   0345     CLR	0x45                 	CLR	_P0LR
                                           	BANKSEL	_P1LR
00771f   0347     CLR	0x47                 	CLR	_P1LR
                                           	BANKSEL	_P2LR
007720   0346     CLR	0x46                 	CLR	_P2LR
                                           	BANKSEL	_P3LR
007721   0348     CLR	0x48                 	CLR	_P3LR
                                           ;	.line	17; "../Clock.c"	P4LR = 0;	P5LR = 0;	P6LR = 0;	P7LR = 0;
                                           	BANKSEL	_P4LR
007722   0349     CLR	0x49                 	CLR	_P4LR
007723   e101     MOVB	#0x01               	BANKSEL	_P5LR
007724   0345     CLR	0x45                 	CLR	_P5LR
                                           	BANKSEL	_P6LR
007725   0346     CLR	0x46                 	CLR	_P6LR
                                           	BANKSEL	_P7LR
007726   0347     CLR	0x47                 	CLR	_P7LR
                                           ;	.line	18; "../Clock.c"	P9LR = 0;	PALR = 0;	PBLR = 0;
                                           	BANKSEL	_P9LR
007727   0349     CLR	0x49                 	CLR	_P9LR
007728   e104     MOVB	#0x04               	BANKSEL	_PALR
007729   0325     CLR	0x25                 	CLR	_PALR
                                           	BANKSEL	_PBLR
00772a   032a     CLR	0x2a                 	CLR	_PBLR
                                           ;	.line	19; "../Clock.c"	ANS0 =0;
00772b   e100     MOVB	#0x00               	BANKSEL	_ANS0
00772c   034a     CLR	0x4a                 	CLR	_ANS0
                                           ;	.line	20; "../Clock.c"	ANS1 =0;
                                           	BANKSEL	_ANS1
00772d   034b     CLR	0x4b                 	CLR	_ANS1
                                           ;	.line	21; "../Clock.c"	ANS2 =0;
                                           	BANKSEL	_ANS2
00772e   034c     CLR	0x4c                 	CLR	_ANS2
                                           ;	.line	22; "../Clock.c"	ANS3 =0;
                                           	BANKSEL	_ANS3
00772f   034d     CLR	0x4d                 	CLR	_ANS3
                                           ;	.line	23; "../Clock.c"	ANS4 =0;
                                           	BANKSEL	_ANS4
007730   034e     CLR	0x4e                 	CLR	_ANS4
                                           ;	.line	24; "../Clock.c"	ANS5 =0;
007731   e101     MOVB	#0x01               	BANKSEL	_ANS5
007732   034a     CLR	0x4a                 	CLR	_ANS5
                                           ;	.line	25; "../Clock.c"	ANS6 =0;
                                           	BANKSEL	_ANS6
007733   034b     CLR	0x4b                 	CLR	_ANS6
                                           ;	.line	26; "../Clock.c"	ANS7 =0;
                                           	BANKSEL	_ANS7
007734   034c     CLR	0x4c                 	CLR	_ANS7
                                           ;	.line	27; "../Clock.c"	ANS9 =0;
                                           	BANKSEL	_ANS9
007735   034e     CLR	0x4e                 	CLR	_ANS9
                                           ;	.line	28; "../Clock.c"	ANSA =0;
007736   e104     MOVB	#0x04               	BANKSEL	_ANSA
007737   0328     CLR	0x28                 	CLR	_ANSA
                                           ;	.line	29; "../Clock.c"	ANSB =0;
                                           	BANKSEL	_ANSB
007738   032d     CLR	0x2d                 	CLR	_ANSB
                                           ;	.line	30; "../Clock.c"	TR0 = 0xFF;	TR1	= 0;	TR2	= 0;	TR3 = 0;
007739   98ff     MOV	R0, #0xff            	MOV	R0,# 0xff
00773a   e100     MOVB	#0x00               	BANKSEL	_TR0
00773b   5125     MOV	0x25, R0             	MOV	_TR0, R0
                                           	BANKSEL	_TR1
00773c   0327     CLR	0x27                 	CLR	_TR1
                                           	BANKSEL	_TR2
00773d   0326     CLR	0x26                 	CLR	_TR2
                                           	BANKSEL	_TR3
00773e   0328     CLR	0x28                 	CLR	_TR3
                                           ;	.line	31; "../Clock.c"	TR4 = 0;	TR5 = 0;	TR6 = 0;	TR7 = 0;
                                           	BANKSEL	_TR4
00773f   0329     CLR	0x29                 	CLR	_TR4
007740   e101     MOVB	#0x01               	BANKSEL	_TR5
007741   0325     CLR	0x25                 	CLR	_TR5
                                           	BANKSEL	_TR6
007742   0326     CLR	0x26                 	CLR	_TR6
                                           	BANKSEL	_TR7
007743   0327     CLR	0x27                 	CLR	_TR7
                                           ;	.line	32; "../Clock.c"	TR9 = 0;	TRA = 0;	TRB = 0;
                                           	BANKSEL	_TR9
007744   0329     CLR	0x29                 	CLR	_TR9
007745   e104     MOVB	#0x04               	BANKSEL	_TRA
007746   0326     CLR	0x26                 	CLR	_TRA
                                           	BANKSEL	_TRB
007747   032b     CLR	0x2b                 	CLR	_TRB
007748   0008     CRET                     	CRET	
                                           func._delay_ms	.code
                                           _delay_ms	;Function start
                                           ;	.line	3; "../Clock.c"	void delay_ms(uint16 num)
007749   e100     MOVB	#0x00               	BANKSEL	r0x1000
00774a   51da     MOV	0xda, R0             	MOV	r0x1000, R0
                                           	BANKSEL	STK00
00774b   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1001
00774c   51d9     MOV	0xd9, R0             	MOV	r0x1001, R0
                                           ;	.line	6; "../Clock.c"	for(i=0;i<num;i++)
                                           	BANKSEL	r0x1002
00774d   03db     CLR	0xdb                 	CLR	r0x1002
                                           	BANKSEL	r0x1003
00774e   03dc     CLR	0xdc                 	CLR	r0x1003
                                           _00004_DS_
                                           	BANKSEL	r0x1000
00774f   0eda     MOVZ	R0, 0xda            	MOVZ	R0, r0x1000
                                           	BANKSEL	r0x1003
007750   38dc     SUB	R0, 0xdc             	SUB	R0, r0x1003
007751   7a03     JB	0x3, 2                	JB	PSW, 2
007752   c755     JMP	#0x755               	JMP	_00016_DS_
                                           	BANKSEL	r0x1001
007753   0ed9     MOVZ	R0, 0xd9            	MOVZ	R0, r0x1001
                                           	BANKSEL	r0x1002
007754   38db     SUB	R0, 0xdb             	SUB	R0, r0x1002
                                           _00016_DS_
007755   7003     JNB	0x3, 0               	JNB	PSW, 0
007756   c76e     JMP	#0x76e               	JMP	_00008_DS_
007757   0064     CWDT                     	CWDT 
                                           ;	.line	10; "../Clock.c"	while(j--);
007758   98e8     MOV	R0, #0xe8            	MOV	R0,# 0xe8
                                           	BANKSEL	r0x1004
007759   51dd     MOV	0xdd, R0             	MOV	r0x1004, R0
00775a   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	r0x1005
00775b   51de     MOV	0xde, R0             	MOV	r0x1005, R0
                                           _00001_DS_
                                           	BANKSEL	r0x1004
00775c   0edd     MOVZ	R0, 0xdd            	MOVZ	R0, r0x1004
                                           	BANKSEL	r0x1006
00775d   51df     MOV	0xdf, R0             	MOV	r0x1006, R0
                                           	BANKSEL	r0x1005
00775e   0ede     MOVZ	R0, 0xde            	MOVZ	R0, r0x1005
                                           	BANKSEL	r0x1007
00775f   51e0     MOV	0xe0, R0             	MOV	r0x1007, R0
007760   98ff     MOV	R0, #0xff            	MOV	R0,# 0xff
                                           	BANKSEL	r0x1004
007761   21dd     ADD	0xdd, R0             	ADD	r0x1004, R0
007762   7003     JNB	0x3, 0               	JNB	PSW, 0
007763   c765     JMP	#0x765               	JMP	_00019_DS_
                                           	BANKSEL	r0x1005
007764   07de     DEC	0xde                 	DEC	r0x1005
                                           _00019_DS_
                                           	BANKSEL	r0x1006
007765   0edf     MOVZ	R0, 0xdf            	MOVZ	R0, r0x1006
                                           	BANKSEL	r0x1007
007766   30e0     ORL	R0, 0xe0             	ORL	R0, r0x1007
007767   7a03     JB	0x3, 2                	JB	PSW, 2
007768   c75c     JMP	#0x75c               	JMP	_00001_DS_
                                           ;	.line	6; "../Clock.c"	for(i=0;i<num;i++)
                                           	BANKSEL	r0x1002
007769   0bdb     INC	0xdb                 	INC	r0x1002
00776a   7a03     JB	0x3, 2                	JB	PSW, 2
00776b   c76d     JMP	#0x76d               	JMP	_00020_DS_
                                           	BANKSEL	r0x1003
00776c   0bdc     INC	0xdc                 	INC	r0x1003
                                           _00020_DS_
00776d   c74f     JMP	#0x74f               	JMP	_00004_DS_
                                           _00008_DS_
00776e   0008     CRET                     	CRET	
                                           	.end
                                           	.radix dec
                                           	.include "KF8A100GQP.inc"
                                           ID_KEY_0	.code
                                           _dif
                                           	RRET R0, #0x01
                                           ID_KEY_1	.code
                                           _KeyAD
                                           	RRET R0, #0x39
                                           	RRET R0, #0x00
                                           	RRET R0, #0x83
                                           	RRET R0, #0x00
                                           	RRET R0, #0xea
                                           	RRET R0, #0x00
                                           	RRET R0, #0xe5
                                           	RRET R0, #0x00
                                           	RRET R0, #0x13
                                           	RRET R0, #0x00
                                           func._keyr_detection	.code
                                           _keyr_detection	;Function start
                                           ;	.line	263; "../KEY.c"	Right_Keyboader_value =currentkeyleft();
0075df   9f75     MOV	R7, #0x75            	TRAPPC1	_currentkeyleft
0075e0   5f73     MOV	0x73, R7             	TRAPPC2	_currentkeyleft
0075e1   e075     MOVP	#0x75               	PAGESEL	_currentkeyleft
0075e2   d521     CALL	#0x521              	CALL	_currentkeyleft
0075e3   9f75     MOV	R7, #0x75            	TRAPPC1	$+2
0075e4   5f73     MOV	0x73, R7             	TRAPPC2	$+1
0075e5   e075     MOVP	#0x75               	PAGESEL	$
0075e6   e101     MOVB	#0x01               	BANKSEL	r0x101B
0075e7   518d     MOV	0x8d, R0             	MOV	r0x101B, R0
                                           	BANKSEL	STK00
0075e8   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x101C
0075e9   518e     MOV	0x8e, R0             	MOV	r0x101C, R0
0075ea   e100     MOVB	#0x00               	BANKSEL	_Right_Keyboader_value
0075eb   51e2     MOV	0xe2, R0             	MOV	_Right_Keyboader_value, R0
                                           ;	.line	264; "../KEY.c"	if(Right_Keyboader_value != Right_Keyboader_value_o)
                                           	BANKSEL	_Right_Keyboader_value_o
0075ec   0ee4     MOVZ	R0, 0xe4            	MOVZ	R0, _Right_Keyboader_value_o
                                           ;	.line	265; "../KEY.c"	Right_key_count =0;
                                           	BANKSEL	_Right_Keyboader_value
0075ed   18e2     XOR	R0, 0xe2             	XOR	R0, _Right_Keyboader_value
0075ee   7203     JNB	0x3, 2               	JNB	PSW, 2
0075ef   c5f3     JMP	#0x5f3               	JMP	_00219_DS_
                                           	BANKSEL	_Right_key_count
0075f0   03ac     CLR	0xac                 	CLR	_Right_key_count
                                           	BANKSEL	_Right_key_count
0075f1   03ad     CLR	0xad                 	CLR	(_Right_key_count + 1)
0075f2   c611     JMP	#0x611               	JMP	_00227_DS_
                                           _00219_DS_
                                           ;	.line	268; "../KEY.c"	if(Right_key_count <65530) //键值长期不变的情况下，阻止计数值溢出
                                           	BANKSEL	_Right_key_count
0075f3   0eac     MOVZ	R0, 0xac            	MOVZ	R0, _Right_key_count
0075f4   e101     MOVB	#0x01               	BANKSEL	r0x101C
0075f5   518e     MOV	0x8e, R0             	MOV	r0x101C, R0
0075f6   e100     MOVB	#0x00               	BANKSEL	_Right_key_count
0075f7   0ead     MOVZ	R0, 0xad            	MOVZ	R0, (_Right_key_count + 1)
0075f8   e101     MOVB	#0x01               	BANKSEL	r0x101B
0075f9   518d     MOV	0x8d, R0             	MOV	r0x101B, R0
                                           	BANKSEL	r0x101D
0075fa   038c     CLR	0x8c                 	CLR	r0x101D
0075fb   9800     MOV	R0, #0               	MOV	R0,# 0x00
0075fc   8080     ADD	R0, #0x80            	ADD	R0,# 0x80
0075fd   8080     ADD	R0, #0x80            	ADD	R0,# 0x80
0075fe   7a03     JB	0x3, 2                	JB	PSW, 2
0075ff   c60a     JMP	#0x60a               	JMP	_00226_DS_
007600   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x101D
007601   388c     SUB	R0, 0x8c             	SUB	R0, r0x101D
007602   7a03     JB	0x3, 2                	JB	PSW, 2
007603   c60a     JMP	#0x60a               	JMP	_00226_DS_
007604   98ff     MOV	R0, #0xff            	MOV	R0,# 0xff
                                           	BANKSEL	r0x101B
007605   388d     SUB	R0, 0x8d             	SUB	R0, r0x101B
007606   7a03     JB	0x3, 2                	JB	PSW, 2
007607   c60a     JMP	#0x60a               	JMP	_00226_DS_
007608   98fa     MOV	R0, #0xfa            	MOV	R0,# 0xfa
                                           	BANKSEL	r0x101C
007609   388e     SUB	R0, 0x8e             	SUB	R0, r0x101C
                                           _00226_DS_
00760a   7003     JNB	0x3, 0               	JNB	PSW, 0
00760b   c611     JMP	#0x611               	JMP	_00227_DS_
                                           ;	.line	270; "../KEY.c"	Right_key_count ++;
00760c   e100     MOVB	#0x00               	BANKSEL	_Right_key_count
00760d   0bac     INC	0xac                 	INC	_Right_key_count
00760e   7a03     JB	0x3, 2                	JB	PSW, 2
00760f   c611     JMP	#0x611               	JMP	_00227_DS_
                                           	BANKSEL	_Right_key_count
007610   0bad     INC	0xad                 	INC	(_Right_key_count + 1)
                                           _00227_DS_
                                           ;	.line	272; "../KEY.c"	KeyToCanvalue1(Right_Keyboader_value,Right_key_count);
007611   e100     MOVB	#0x00               	BANKSEL	_Right_key_count
007612   0eac     MOVZ	R0, 0xac            	MOVZ	R0, _Right_key_count
                                           	BANKSEL	STK01
007613   517d     MOV	0x7d, R0             	MOV	STK01, R0
                                           	BANKSEL	_Right_key_count
007614   0ead     MOVZ	R0, 0xad            	MOVZ	R0, (_Right_key_count + 1)
                                           	BANKSEL	STK00
007615   517e     MOV	0x7e, R0             	MOV	STK00, R0
                                           	BANKSEL	_Right_Keyboader_value
007616   0ee2     MOVZ	R0, 0xe2            	MOVZ	R0, _Right_Keyboader_value
007617   9f72     MOV	R7, #0x72            	TRAPPC1	_KeyToCanvalue1
007618   5f73     MOV	0x73, R7             	TRAPPC2	_KeyToCanvalue1
007619   e072     MOVP	#0x72               	PAGESEL	_KeyToCanvalue1
00761a   d2df     CALL	#0x2df              	CALL	_KeyToCanvalue1
00761b   9f76     MOV	R7, #0x76            	TRAPPC1	$+2
00761c   5f73     MOV	0x73, R7             	TRAPPC2	$+1
00761d   e076     MOVP	#0x76               	PAGESEL	$
                                           ;	.line	273; "../KEY.c"	Right_key_count_o =Right_key_count;
00761e   e100     MOVB	#0x00               	BANKSEL	_Right_key_count
00761f   0eac     MOVZ	R0, 0xac            	MOVZ	R0, _Right_key_count
                                           	BANKSEL	_Right_key_count_o
007620   51b0     MOV	0xb0, R0             	MOV	_Right_key_count_o, R0
                                           	BANKSEL	_Right_key_count
007621   0ead     MOVZ	R0, 0xad            	MOVZ	R0, (_Right_key_count + 1)
                                           	BANKSEL	_Right_key_count_o
007622   51b1     MOV	0xb1, R0             	MOV	(_Right_key_count_o + 1), R0
                                           ;	.line	274; "../KEY.c"	Right_Keyboader_value_o =Right_Keyboader_value;;
                                           	BANKSEL	_Right_Keyboader_value
007623   0ee2     MOVZ	R0, 0xe2            	MOVZ	R0, _Right_Keyboader_value
                                           	BANKSEL	_Right_Keyboader_value_o
007624   51e4     MOV	0xe4, R0             	MOV	_Right_Keyboader_value_o, R0
007625   0008     CRET                     	CRET	
                                           func._keyl_detection	.code
                                           _keyl_detection	;Function start
                                           ;	.line	247; "../KEY.c"	Left_Keyboader_value =currentkey();
007626   9f74     MOV	R7, #0x74            	TRAPPC1	_currentkey
007627   5f73     MOV	0x73, R7             	TRAPPC2	_currentkey
007628   e074     MOVP	#0x74               	PAGESEL	_currentkey
007629   d4a7     CALL	#0x4a7              	CALL	_currentkey
00762a   9f76     MOV	R7, #0x76            	TRAPPC1	$+2
00762b   5f73     MOV	0x73, R7             	TRAPPC2	$+1
00762c   e076     MOVP	#0x76               	PAGESEL	$
00762d   e101     MOVB	#0x01               	BANKSEL	r0x1026
00762e   5190     MOV	0x90, R0             	MOV	r0x1026, R0
                                           	BANKSEL	STK00
00762f   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1027
007630   5191     MOV	0x91, R0             	MOV	r0x1027, R0
007631   e100     MOVB	#0x00               	BANKSEL	_Left_Keyboader_value
007632   51e1     MOV	0xe1, R0             	MOV	_Left_Keyboader_value, R0
                                           ;	.line	248; "../KEY.c"	if(Left_Keyboader_value != Left_Keyboader_value_o)
                                           	BANKSEL	_Left_Keyboader_value_o
007633   0ee3     MOVZ	R0, 0xe3            	MOVZ	R0, _Left_Keyboader_value_o
                                           ;	.line	249; "../KEY.c"	Left_key_count =0;
                                           	BANKSEL	_Left_Keyboader_value
007634   18e1     XOR	R0, 0xe1             	XOR	R0, _Left_Keyboader_value
007635   7203     JNB	0x3, 2               	JNB	PSW, 2
007636   c63a     JMP	#0x63a               	JMP	_00208_DS_
                                           	BANKSEL	_Left_key_count
007637   03aa     CLR	0xaa                 	CLR	_Left_key_count
                                           	BANKSEL	_Left_key_count
007638   03ab     CLR	0xab                 	CLR	(_Left_key_count + 1)
007639   c658     JMP	#0x658               	JMP	_00228_DS_
                                           _00208_DS_
                                           ;	.line	252; "../KEY.c"	if(Left_key_count <65530) //键值长期不变的情况下，阻止计数值溢出
                                           	BANKSEL	_Left_key_count
00763a   0eaa     MOVZ	R0, 0xaa            	MOVZ	R0, _Left_key_count
00763b   e101     MOVB	#0x01               	BANKSEL	r0x1027
00763c   5191     MOV	0x91, R0             	MOV	r0x1027, R0
00763d   e100     MOVB	#0x00               	BANKSEL	_Left_key_count
00763e   0eab     MOVZ	R0, 0xab            	MOVZ	R0, (_Left_key_count + 1)
00763f   e101     MOVB	#0x01               	BANKSEL	r0x1026
007640   5190     MOV	0x90, R0             	MOV	r0x1026, R0
                                           	BANKSEL	r0x1028
007641   038f     CLR	0x8f                 	CLR	r0x1028
007642   9800     MOV	R0, #0               	MOV	R0,# 0x00
007643   8080     ADD	R0, #0x80            	ADD	R0,# 0x80
007644   8080     ADD	R0, #0x80            	ADD	R0,# 0x80
007645   7a03     JB	0x3, 2                	JB	PSW, 2
007646   c651     JMP	#0x651               	JMP	_00215_DS_
007647   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1028
007648   388f     SUB	R0, 0x8f             	SUB	R0, r0x1028
007649   7a03     JB	0x3, 2                	JB	PSW, 2
00764a   c651     JMP	#0x651               	JMP	_00215_DS_
00764b   98ff     MOV	R0, #0xff            	MOV	R0,# 0xff
                                           	BANKSEL	r0x1026
00764c   3890     SUB	R0, 0x90             	SUB	R0, r0x1026
00764d   7a03     JB	0x3, 2                	JB	PSW, 2
00764e   c651     JMP	#0x651               	JMP	_00215_DS_
00764f   98fa     MOV	R0, #0xfa            	MOV	R0,# 0xfa
                                           	BANKSEL	r0x1027
007650   3891     SUB	R0, 0x91             	SUB	R0, r0x1027
                                           _00215_DS_
007651   7003     JNB	0x3, 0               	JNB	PSW, 0
007652   c658     JMP	#0x658               	JMP	_00228_DS_
                                           ;	.line	253; "../KEY.c"	Left_key_count ++;
007653   e100     MOVB	#0x00               	BANKSEL	_Left_key_count
007654   0baa     INC	0xaa                 	INC	_Left_key_count
007655   7a03     JB	0x3, 2                	JB	PSW, 2
007656   c658     JMP	#0x658               	JMP	_00228_DS_
                                           	BANKSEL	_Left_key_count
007657   0bab     INC	0xab                 	INC	(_Left_key_count + 1)
                                           _00228_DS_
                                           ;	.line	255; "../KEY.c"	KeyToCanvalue(Left_Keyboader_value,Left_key_count);
007658   e100     MOVB	#0x00               	BANKSEL	_Left_key_count
007659   0eaa     MOVZ	R0, 0xaa            	MOVZ	R0, _Left_key_count
                                           	BANKSEL	STK01
00765a   517d     MOV	0x7d, R0             	MOV	STK01, R0
                                           	BANKSEL	_Left_key_count
00765b   0eab     MOVZ	R0, 0xab            	MOVZ	R0, (_Left_key_count + 1)
                                           	BANKSEL	STK00
00765c   517e     MOV	0x7e, R0             	MOV	STK00, R0
                                           	BANKSEL	_Left_Keyboader_value
00765d   0ee1     MOVZ	R0, 0xe1            	MOVZ	R0, _Left_Keyboader_value
00765e   9f73     MOV	R7, #0x73            	TRAPPC1	_KeyToCanvalue
00765f   5f73     MOV	0x73, R7             	TRAPPC2	_KeyToCanvalue
007660   e073     MOVP	#0x73               	PAGESEL	_KeyToCanvalue
007661   d3c3     CALL	#0x3c3              	CALL	_KeyToCanvalue
007662   9f76     MOV	R7, #0x76            	TRAPPC1	$+2
007663   5f73     MOV	0x73, R7             	TRAPPC2	$+1
007664   e076     MOVP	#0x76               	PAGESEL	$
                                           ;	.line	256; "../KEY.c"	Left_key_count_o = Left_key_count;
007665   e100     MOVB	#0x00               	BANKSEL	_Left_key_count
007666   0eaa     MOVZ	R0, 0xaa            	MOVZ	R0, _Left_key_count
                                           	BANKSEL	_Left_key_count_o
007667   51ae     MOV	0xae, R0             	MOV	_Left_key_count_o, R0
                                           	BANKSEL	_Left_key_count
007668   0eab     MOVZ	R0, 0xab            	MOVZ	R0, (_Left_key_count + 1)
                                           	BANKSEL	_Left_key_count_o
007669   51af     MOV	0xaf, R0             	MOV	(_Left_key_count_o + 1), R0
                                           ;	.line	257; "../KEY.c"	Left_Keyboader_value_o =Left_Keyboader_value;
                                           	BANKSEL	_Left_Keyboader_value
00766a   0ee1     MOVZ	R0, 0xe1            	MOVZ	R0, _Left_Keyboader_value
                                           	BANKSEL	_Left_Keyboader_value_o
00766b   51e3     MOV	0xe3, R0             	MOV	_Left_Keyboader_value_o, R0
00766c   0008     CRET                     	CRET	
                                           func._KeyToCanvalue1	.code
                                           _KeyToCanvalue1	;Function start
                                           ;	.line	179; "../KEY.c"	void KeyToCanvalue1(unsigned char keyvalue1, unsigned int keycnt1)
0072df   e100     MOVB	#0x00               	BANKSEL	r0x1014
0072e0   51e9     MOV	0xe9, R0             	MOV	r0x1014, R0
                                           	BANKSEL	STK00
0072e1   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1015
0072e2   51e8     MOV	0xe8, R0             	MOV	r0x1015, R0
                                           	BANKSEL	STK01
0072e3   0e7d     MOVZ	R0, 0x7d            	MOVZ	R0, STK01
                                           	BANKSEL	r0x1016
0072e4   51ea     MOV	0xea, R0             	MOV	r0x1016, R0
                                           ;	.line	181; "../KEY.c"	switch(keyvalue1)
0072e5   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	r0x1014
0072e6   38e9     SUB	R0, 0xe9             	SUB	R0, r0x1014
0072e7   7803     JB	0x3, 0                	JB	PSW, 0
0072e8   c3af     JMP	#0x3af               	JMP	_00173_DS_
0072e9   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	r0x1014
0072ea   38e9     SUB	R0, 0xe9             	SUB	R0, r0x1014
0072eb   7003     JNB	0x3, 0               	JNB	PSW, 0
0072ec   c3af     JMP	#0x3af               	JMP	_00173_DS_
                                           	BANKSEL	r0x1014
0072ed   06e9     DECR	0xe9                	DECR	r0x1014
                                           	BANKSEL	r0x1017
0072ee   51ef     MOV	0xef, R0             	MOV	r0x1017, R0
0072ef   9972     MOV	R1, #0x72            	MOV	R1,#high _00194_DS_
0072f0   98f7     MOV	R0, #0xf7            	MOV	R0,#_00194_DS_
                                           	BANKSEL	r0x1017
0072f1   20ef     ADD	R0, 0xef             	ADD	R0, r0x1017
0072f2   7003     JNB	0x3, 0               	JNB	PSW, 0
0072f3   ff11     INC	R1                   	INC	R1
0072f4   5373     MOV	0x73, R1             	TRAPPC3	$
0072f5   530a     MOV	0xa, R1              	MOV	PCH, R1
0072f6   5102     MOV	0x2, R0              	MOV	PCL, R0
                                           _00194_DS_
0072f7   c2fc     JMP	#0x2fc               	JMP	_00143_DS_
0072f8   c320     JMP	#0x320               	JMP	_00149_DS_
0072f9   c344     JMP	#0x344               	JMP	_00155_DS_
0072fa   c368     JMP	#0x368               	JMP	_00161_DS_
0072fb   c38c     JMP	#0x38c               	JMP	_00167_DS_
                                           _00143_DS_
                                           ;	.line	184; "../KEY.c"	if(keycnt1>50000)//连续5次检测结果保持同一键值，确认按键为短按
                                           	BANKSEL	r0x1016
0072fc   0eea     MOVZ	R0, 0xea            	MOVZ	R0, r0x1016
                                           	BANKSEL	r0x1017
0072fd   51ef     MOV	0xef, R0             	MOV	r0x1017, R0
                                           	BANKSEL	r0x1015
0072fe   0ee8     MOVZ	R0, 0xe8            	MOVZ	R0, r0x1015
                                           	BANKSEL	r0x1018
0072ff   51f0     MOV	0xf0, R0             	MOV	r0x1018, R0
                                           	BANKSEL	r0x1019
007300   03f1     CLR	0xf1                 	CLR	r0x1019
                                           	BANKSEL	r0x101A
007301   03f2     CLR	0xf2                 	CLR	r0x101A
007302   9800     MOV	R0, #0               	MOV	R0,# 0x00
007303   8080     ADD	R0, #0x80            	ADD	R0,# 0x80
007304   8080     ADD	R0, #0x80            	ADD	R0,# 0x80
007305   7a03     JB	0x3, 2                	JB	PSW, 2
007306   c311     JMP	#0x311               	JMP	_00195_DS_
007307   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1019
007308   38f1     SUB	R0, 0xf1             	SUB	R0, r0x1019
007309   7a03     JB	0x3, 2                	JB	PSW, 2
00730a   c311     JMP	#0x311               	JMP	_00195_DS_
00730b   98c3     MOV	R0, #0xc3            	MOV	R0,# 0xc3
                                           	BANKSEL	r0x1018
00730c   38f0     SUB	R0, 0xf0             	SUB	R0, r0x1018
00730d   7a03     JB	0x3, 2                	JB	PSW, 2
00730e   c311     JMP	#0x311               	JMP	_00195_DS_
00730f   9851     MOV	R0, #0x51            	MOV	R0,# 0x51
                                           	BANKSEL	r0x1017
007310   38ef     SUB	R0, 0xef             	SUB	R0, r0x1017
                                           _00195_DS_
007311   7803     JB	0x3, 0                	JB	PSW, 0
007312   c315     JMP	#0x315               	JMP	_00147_DS_
                                           ;	.line	186; "../KEY.c"	TX_Data[0]=0x00;
                                           	BANKSEL	_TX_Data
007313   0395     CLR	0x95                 	CLR	 (_TX_Data + 0)
007314   c3af     JMP	#0x3af               	JMP	_00173_DS_
                                           _00147_DS_
                                           ;	.line	188; "../KEY.c"	else if(keycnt1>5)
007315   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1015
007316   38e8     SUB	R0, 0xe8             	SUB	R0, r0x1015
007317   7a03     JB	0x3, 2                	JB	PSW, 2
007318   c31b     JMP	#0x31b               	JMP	_00196_DS_
007319   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	r0x1016
00731a   38ea     SUB	R0, 0xea             	SUB	R0, r0x1016
                                           _00196_DS_
00731b   7803     JB	0x3, 0                	JB	PSW, 0
00731c   c3af     JMP	#0x3af               	JMP	_00173_DS_
                                           ;	.line	190; "../KEY.c"	TX_Data[0]=0x01;//接听
00731d   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	_TX_Data
00731e   5195     MOV	0x95, R0             	MOV	 (_TX_Data + 0), R0
                                           ;	.line	192; "../KEY.c"	break;
00731f   c3af     JMP	#0x3af               	JMP	_00173_DS_
                                           _00149_DS_
                                           ;	.line	194; "../KEY.c"	if(keycnt1>50000)
                                           	BANKSEL	r0x1016
007320   0eea     MOVZ	R0, 0xea            	MOVZ	R0, r0x1016
                                           	BANKSEL	r0x1017
007321   51ef     MOV	0xef, R0             	MOV	r0x1017, R0
                                           	BANKSEL	r0x1015
007322   0ee8     MOVZ	R0, 0xe8            	MOVZ	R0, r0x1015
                                           	BANKSEL	r0x1018
007323   51f0     MOV	0xf0, R0             	MOV	r0x1018, R0
                                           	BANKSEL	r0x1019
007324   03f1     CLR	0xf1                 	CLR	r0x1019
                                           	BANKSEL	r0x101A
007325   03f2     CLR	0xf2                 	CLR	r0x101A
007326   9800     MOV	R0, #0               	MOV	R0,# 0x00
007327   8080     ADD	R0, #0x80            	ADD	R0,# 0x80
007328   8080     ADD	R0, #0x80            	ADD	R0,# 0x80
007329   7a03     JB	0x3, 2                	JB	PSW, 2
00732a   c335     JMP	#0x335               	JMP	_00197_DS_
00732b   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1019
00732c   38f1     SUB	R0, 0xf1             	SUB	R0, r0x1019
00732d   7a03     JB	0x3, 2                	JB	PSW, 2
00732e   c335     JMP	#0x335               	JMP	_00197_DS_
00732f   98c3     MOV	R0, #0xc3            	MOV	R0,# 0xc3
                                           	BANKSEL	r0x1018
007330   38f0     SUB	R0, 0xf0             	SUB	R0, r0x1018
007331   7a03     JB	0x3, 2                	JB	PSW, 2
007332   c335     JMP	#0x335               	JMP	_00197_DS_
007333   9851     MOV	R0, #0x51            	MOV	R0,# 0x51
                                           	BANKSEL	r0x1017
007334   38ef     SUB	R0, 0xef             	SUB	R0, r0x1017
                                           _00197_DS_
007335   7803     JB	0x3, 0                	JB	PSW, 0
007336   c339     JMP	#0x339               	JMP	_00153_DS_
                                           ;	.line	196; "../KEY.c"	TX_Data[0]=0x00;
                                           	BANKSEL	_TX_Data
007337   0395     CLR	0x95                 	CLR	 (_TX_Data + 0)
007338   c3af     JMP	#0x3af               	JMP	_00173_DS_
                                           _00153_DS_
                                           ;	.line	198; "../KEY.c"	else if(keycnt1>5)
007339   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1015
00733a   38e8     SUB	R0, 0xe8             	SUB	R0, r0x1015
00733b   7a03     JB	0x3, 2                	JB	PSW, 2
00733c   c33f     JMP	#0x33f               	JMP	_00198_DS_
00733d   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	r0x1016
00733e   38ea     SUB	R0, 0xea             	SUB	R0, r0x1016
                                           _00198_DS_
00733f   7803     JB	0x3, 0                	JB	PSW, 0
007340   c3af     JMP	#0x3af               	JMP	_00173_DS_
                                           ;	.line	200; "../KEY.c"	TX_Data[0]=0x04;//音量+
007341   9804     MOV	R0, #0x4             	MOV	R0,# 0x04
                                           	BANKSEL	_TX_Data
007342   5195     MOV	0x95, R0             	MOV	 (_TX_Data + 0), R0
                                           ;	.line	202; "../KEY.c"	break;
007343   c3af     JMP	#0x3af               	JMP	_00173_DS_
                                           _00155_DS_
                                           ;	.line	204; "../KEY.c"	if(keycnt1>50000)
                                           	BANKSEL	r0x1016
007344   0eea     MOVZ	R0, 0xea            	MOVZ	R0, r0x1016
                                           	BANKSEL	r0x1017
007345   51ef     MOV	0xef, R0             	MOV	r0x1017, R0
                                           	BANKSEL	r0x1015
007346   0ee8     MOVZ	R0, 0xe8            	MOVZ	R0, r0x1015
                                           	BANKSEL	r0x1018
007347   51f0     MOV	0xf0, R0             	MOV	r0x1018, R0
                                           	BANKSEL	r0x1019
007348   03f1     CLR	0xf1                 	CLR	r0x1019
                                           	BANKSEL	r0x101A
007349   03f2     CLR	0xf2                 	CLR	r0x101A
00734a   9800     MOV	R0, #0               	MOV	R0,# 0x00
00734b   8080     ADD	R0, #0x80            	ADD	R0,# 0x80
00734c   8080     ADD	R0, #0x80            	ADD	R0,# 0x80
00734d   7a03     JB	0x3, 2                	JB	PSW, 2
00734e   c359     JMP	#0x359               	JMP	_00199_DS_
00734f   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1019
007350   38f1     SUB	R0, 0xf1             	SUB	R0, r0x1019
007351   7a03     JB	0x3, 2                	JB	PSW, 2
007352   c359     JMP	#0x359               	JMP	_00199_DS_
007353   98c3     MOV	R0, #0xc3            	MOV	R0,# 0xc3
                                           	BANKSEL	r0x1018
007354   38f0     SUB	R0, 0xf0             	SUB	R0, r0x1018
007355   7a03     JB	0x3, 2                	JB	PSW, 2
007356   c359     JMP	#0x359               	JMP	_00199_DS_
007357   9851     MOV	R0, #0x51            	MOV	R0,# 0x51
                                           	BANKSEL	r0x1017
007358   38ef     SUB	R0, 0xef             	SUB	R0, r0x1017
                                           _00199_DS_
007359   7803     JB	0x3, 0                	JB	PSW, 0
00735a   c35d     JMP	#0x35d               	JMP	_00159_DS_
                                           ;	.line	206; "../KEY.c"	TX_Data[1]=0x00;
                                           	BANKSEL	_TX_Data
00735b   0396     CLR	0x96                 	CLR	 (_TX_Data + 1)
00735c   c3af     JMP	#0x3af               	JMP	_00173_DS_
                                           _00159_DS_
                                           ;	.line	208; "../KEY.c"	else if(keycnt1>5)
00735d   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1015
00735e   38e8     SUB	R0, 0xe8             	SUB	R0, r0x1015
00735f   7a03     JB	0x3, 2                	JB	PSW, 2
007360   c363     JMP	#0x363               	JMP	_00200_DS_
007361   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	r0x1016
007362   38ea     SUB	R0, 0xea             	SUB	R0, r0x1016
                                           _00200_DS_
007363   7803     JB	0x3, 0                	JB	PSW, 0
007364   c3af     JMP	#0x3af               	JMP	_00173_DS_
                                           ;	.line	210; "../KEY.c"	TX_Data[0]=0x08;//静音
007365   9808     MOV	R0, #0x8             	MOV	R0,# 0x08
                                           	BANKSEL	_TX_Data
007366   5195     MOV	0x95, R0             	MOV	 (_TX_Data + 0), R0
                                           ;	.line	212; "../KEY.c"	break;
007367   c3af     JMP	#0x3af               	JMP	_00173_DS_
                                           _00161_DS_
                                           ;	.line	214; "../KEY.c"	if(keycnt1>50000)
                                           	BANKSEL	r0x1016
007368   0eea     MOVZ	R0, 0xea            	MOVZ	R0, r0x1016
                                           	BANKSEL	r0x1017
007369   51ef     MOV	0xef, R0             	MOV	r0x1017, R0
                                           	BANKSEL	r0x1015
00736a   0ee8     MOVZ	R0, 0xe8            	MOVZ	R0, r0x1015
                                           	BANKSEL	r0x1018
00736b   51f0     MOV	0xf0, R0             	MOV	r0x1018, R0
                                           	BANKSEL	r0x1019
00736c   03f1     CLR	0xf1                 	CLR	r0x1019
                                           	BANKSEL	r0x101A
00736d   03f2     CLR	0xf2                 	CLR	r0x101A
00736e   9800     MOV	R0, #0               	MOV	R0,# 0x00
00736f   8080     ADD	R0, #0x80            	ADD	R0,# 0x80
007370   8080     ADD	R0, #0x80            	ADD	R0,# 0x80
007371   7a03     JB	0x3, 2                	JB	PSW, 2
007372   c37d     JMP	#0x37d               	JMP	_00201_DS_
007373   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1019
007374   38f1     SUB	R0, 0xf1             	SUB	R0, r0x1019
007375   7a03     JB	0x3, 2                	JB	PSW, 2
007376   c37d     JMP	#0x37d               	JMP	_00201_DS_
007377   98c3     MOV	R0, #0xc3            	MOV	R0,# 0xc3
                                           	BANKSEL	r0x1018
007378   38f0     SUB	R0, 0xf0             	SUB	R0, r0x1018
007379   7a03     JB	0x3, 2                	JB	PSW, 2
00737a   c37d     JMP	#0x37d               	JMP	_00201_DS_
00737b   9851     MOV	R0, #0x51            	MOV	R0,# 0x51
                                           	BANKSEL	r0x1017
00737c   38ef     SUB	R0, 0xef             	SUB	R0, r0x1017
                                           _00201_DS_
00737d   7803     JB	0x3, 0                	JB	PSW, 0
00737e   c381     JMP	#0x381               	JMP	_00165_DS_
                                           ;	.line	216; "../KEY.c"	TX_Data[0]=0x00;
                                           	BANKSEL	_TX_Data
00737f   0395     CLR	0x95                 	CLR	 (_TX_Data + 0)
007380   c3af     JMP	#0x3af               	JMP	_00173_DS_
                                           _00165_DS_
                                           ;	.line	218; "../KEY.c"	else if(keycnt1>5)
007381   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1015
007382   38e8     SUB	R0, 0xe8             	SUB	R0, r0x1015
007383   7a03     JB	0x3, 2                	JB	PSW, 2
007384   c387     JMP	#0x387               	JMP	_00202_DS_
007385   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	r0x1016
007386   38ea     SUB	R0, 0xea             	SUB	R0, r0x1016
                                           _00202_DS_
007387   7803     JB	0x3, 0                	JB	PSW, 0
007388   c3af     JMP	#0x3af               	JMP	_00173_DS_
                                           ;	.line	220; "../KEY.c"	TX_Data[0]=0x10;   //音量-
007389   9810     MOV	R0, #0x10            	MOV	R0,# 0x10
                                           	BANKSEL	_TX_Data
00738a   5195     MOV	0x95, R0             	MOV	 (_TX_Data + 0), R0
                                           ;	.line	222; "../KEY.c"	break;
00738b   c3af     JMP	#0x3af               	JMP	_00173_DS_
                                           _00167_DS_
                                           ;	.line	224; "../KEY.c"	if(keycnt1>50000)
                                           	BANKSEL	r0x1016
00738c   0eea     MOVZ	R0, 0xea            	MOVZ	R0, r0x1016
                                           	BANKSEL	r0x1017
00738d   51ef     MOV	0xef, R0             	MOV	r0x1017, R0
                                           	BANKSEL	r0x1015
00738e   0ee8     MOVZ	R0, 0xe8            	MOVZ	R0, r0x1015
                                           	BANKSEL	r0x1018
00738f   51f0     MOV	0xf0, R0             	MOV	r0x1018, R0
                                           	BANKSEL	r0x1019
007390   03f1     CLR	0xf1                 	CLR	r0x1019
                                           	BANKSEL	r0x101A
007391   03f2     CLR	0xf2                 	CLR	r0x101A
007392   9800     MOV	R0, #0               	MOV	R0,# 0x00
007393   8080     ADD	R0, #0x80            	ADD	R0,# 0x80
007394   8080     ADD	R0, #0x80            	ADD	R0,# 0x80
007395   7a03     JB	0x3, 2                	JB	PSW, 2
007396   c3a1     JMP	#0x3a1               	JMP	_00203_DS_
007397   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1019
007398   38f1     SUB	R0, 0xf1             	SUB	R0, r0x1019
007399   7a03     JB	0x3, 2                	JB	PSW, 2
00739a   c3a1     JMP	#0x3a1               	JMP	_00203_DS_
00739b   98c3     MOV	R0, #0xc3            	MOV	R0,# 0xc3
                                           	BANKSEL	r0x1018
00739c   38f0     SUB	R0, 0xf0             	SUB	R0, r0x1018
00739d   7a03     JB	0x3, 2                	JB	PSW, 2
00739e   c3a1     JMP	#0x3a1               	JMP	_00203_DS_
00739f   9851     MOV	R0, #0x51            	MOV	R0,# 0x51
                                           	BANKSEL	r0x1017
0073a0   38ef     SUB	R0, 0xef             	SUB	R0, r0x1017
                                           _00203_DS_
0073a1   7803     JB	0x3, 0                	JB	PSW, 0
0073a2   c3a5     JMP	#0x3a5               	JMP	_00171_DS_
                                           ;	.line	226; "../KEY.c"	TX_Data[0]=0x00;
                                           	BANKSEL	_TX_Data
0073a3   0395     CLR	0x95                 	CLR	 (_TX_Data + 0)
0073a4   c3af     JMP	#0x3af               	JMP	_00173_DS_
                                           _00171_DS_
                                           ;	.line	228; "../KEY.c"	else if(keycnt1>5)
0073a5   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1015
0073a6   38e8     SUB	R0, 0xe8             	SUB	R0, r0x1015
0073a7   7a03     JB	0x3, 2                	JB	PSW, 2
0073a8   c3ab     JMP	#0x3ab               	JMP	_00204_DS_
0073a9   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	r0x1016
0073aa   38ea     SUB	R0, 0xea             	SUB	R0, r0x1016
                                           _00204_DS_
0073ab   7803     JB	0x3, 0                	JB	PSW, 0
0073ac   c3af     JMP	#0x3af               	JMP	_00173_DS_
                                           ;	.line	230; "../KEY.c"	TX_Data[0]=0x02;   //挂断
0073ad   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
                                           	BANKSEL	_TX_Data
0073ae   5195     MOV	0x95, R0             	MOV	 (_TX_Data + 0), R0
                                           _00173_DS_
                                           ;	.line	234; "../KEY.c"	if (keyvalue1 == 0U)
0073af   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1014
0073b0   30e9     ORL	R0, 0xe9             	ORL	R0, r0x1014
0073b1   7a03     JB	0x3, 2                	JB	PSW, 2
0073b2   c3bb     JMP	#0x3bb               	JMP	_00175_DS_
                                           ;	.line	236; "../KEY.c"	Main_DataClean();
0073b3   9f77     MOV	R7, #0x77            	TRAPPC1	_Main_DataClean
0073b4   5f73     MOV	0x73, R7             	TRAPPC2	_Main_DataClean
0073b5   e077     MOVP	#0x77               	PAGESEL	_Main_DataClean
0073b6   d7b3     CALL	#0x7b3              	CALL	_Main_DataClean
0073b7   9f73     MOV	R7, #0x73            	TRAPPC1	$+2
0073b8   5f73     MOV	0x73, R7             	TRAPPC2	$+1
0073b9   e073     MOVP	#0x73               	PAGESEL	$
0073ba   c3c2     JMP	#0x3c2               	JMP	_00177_DS_
                                           _00175_DS_
                                           ;	.line	240; "../KEY.c"	Main_CleanTimeSet();
0073bb   9f78     MOV	R7, #0x78            	TRAPPC1	_Main_CleanTimeSet
0073bc   5f73     MOV	0x73, R7             	TRAPPC2	_Main_CleanTimeSet
0073bd   e078     MOVP	#0x78               	PAGESEL	_Main_CleanTimeSet
0073be   d853     CALL	#0x853              	CALL	_Main_CleanTimeSet
0073bf   9f73     MOV	R7, #0x73            	TRAPPC1	$+2
0073c0   5f73     MOV	0x73, R7             	TRAPPC2	$+1
0073c1   e073     MOVP	#0x73               	PAGESEL	$
                                           _00177_DS_
0073c2   0008     CRET                     	CRET	
                                           func._KeyToCanvalue	.code
                                           _KeyToCanvalue	;Function start
                                           ;	.line	113; "../KEY.c"	void KeyToCanvalue(unsigned char keyvalue, unsigned int keycnt)
0073c3   e100     MOVB	#0x00               	BANKSEL	r0x101F
0073c4   51e6     MOV	0xe6, R0             	MOV	r0x101F, R0
                                           	BANKSEL	STK00
0073c5   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1020
0073c6   51e5     MOV	0xe5, R0             	MOV	r0x1020, R0
                                           	BANKSEL	STK01
0073c7   0e7d     MOVZ	R0, 0x7d            	MOVZ	R0, STK01
                                           	BANKSEL	r0x1021
0073c8   51e7     MOV	0xe7, R0             	MOV	r0x1021, R0
                                           ;	.line	115; "../KEY.c"	switch(keyvalue)
0073c9   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	r0x101F
0073ca   38e6     SUB	R0, 0xe6             	SUB	R0, r0x101F
0073cb   7803     JB	0x3, 0                	JB	PSW, 0
0073cc   c493     JMP	#0x493               	JMP	_00111_DS_
0073cd   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	r0x101F
0073ce   38e6     SUB	R0, 0xe6             	SUB	R0, r0x101F
0073cf   7003     JNB	0x3, 0               	JNB	PSW, 0
0073d0   c493     JMP	#0x493               	JMP	_00111_DS_
                                           	BANKSEL	r0x101F
0073d1   06e6     DECR	0xe6                	DECR	r0x101F
                                           	BANKSEL	r0x1022
0073d2   51eb     MOV	0xeb, R0             	MOV	r0x1022, R0
0073d3   9973     MOV	R1, #0x73            	MOV	R1,#high _00132_DS_
0073d4   98db     MOV	R0, #0xdb            	MOV	R0,#_00132_DS_
                                           	BANKSEL	r0x1022
0073d5   20eb     ADD	R0, 0xeb             	ADD	R0, r0x1022
0073d6   7003     JNB	0x3, 0               	JNB	PSW, 0
0073d7   ff11     INC	R1                   	INC	R1
0073d8   5373     MOV	0x73, R1             	TRAPPC3	$
0073d9   530a     MOV	0xa, R1              	MOV	PCH, R1
0073da   5102     MOV	0x2, R0              	MOV	PCL, R0
                                           _00132_DS_
0073db   c3e0     JMP	#0x3e0               	JMP	_00081_DS_
0073dc   c404     JMP	#0x404               	JMP	_00087_DS_
0073dd   c428     JMP	#0x428               	JMP	_00093_DS_
0073de   c44c     JMP	#0x44c               	JMP	_00099_DS_
0073df   c470     JMP	#0x470               	JMP	_00105_DS_
                                           _00081_DS_
                                           ;	.line	118; "../KEY.c"	if(keycnt>50000)//连续5次检测结果保持同一键值，确认按键为短按
                                           	BANKSEL	r0x1021
0073e0   0ee7     MOVZ	R0, 0xe7            	MOVZ	R0, r0x1021
                                           	BANKSEL	r0x1022
0073e1   51eb     MOV	0xeb, R0             	MOV	r0x1022, R0
                                           	BANKSEL	r0x1020
0073e2   0ee5     MOVZ	R0, 0xe5            	MOVZ	R0, r0x1020
                                           	BANKSEL	r0x1023
0073e3   51ec     MOV	0xec, R0             	MOV	r0x1023, R0
                                           	BANKSEL	r0x1024
0073e4   03ed     CLR	0xed                 	CLR	r0x1024
                                           	BANKSEL	r0x1025
0073e5   03ee     CLR	0xee                 	CLR	r0x1025
0073e6   9800     MOV	R0, #0               	MOV	R0,# 0x00
0073e7   8080     ADD	R0, #0x80            	ADD	R0,# 0x80
0073e8   8080     ADD	R0, #0x80            	ADD	R0,# 0x80
0073e9   7a03     JB	0x3, 2                	JB	PSW, 2
0073ea   c3f5     JMP	#0x3f5               	JMP	_00133_DS_
0073eb   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1024
0073ec   38ed     SUB	R0, 0xed             	SUB	R0, r0x1024
0073ed   7a03     JB	0x3, 2                	JB	PSW, 2
0073ee   c3f5     JMP	#0x3f5               	JMP	_00133_DS_
0073ef   98c3     MOV	R0, #0xc3            	MOV	R0,# 0xc3
                                           	BANKSEL	r0x1023
0073f0   38ec     SUB	R0, 0xec             	SUB	R0, r0x1023
0073f1   7a03     JB	0x3, 2                	JB	PSW, 2
0073f2   c3f5     JMP	#0x3f5               	JMP	_00133_DS_
0073f3   9851     MOV	R0, #0x51            	MOV	R0,# 0x51
                                           	BANKSEL	r0x1022
0073f4   38eb     SUB	R0, 0xeb             	SUB	R0, r0x1022
                                           _00133_DS_
0073f5   7803     JB	0x3, 0                	JB	PSW, 0
0073f6   c3f9     JMP	#0x3f9               	JMP	_00085_DS_
                                           ;	.line	120; "../KEY.c"	TX_Data[0]=0x00;
                                           	BANKSEL	_TX_Data
0073f7   0395     CLR	0x95                 	CLR	 (_TX_Data + 0)
0073f8   c493     JMP	#0x493               	JMP	_00111_DS_
                                           _00085_DS_
                                           ;	.line	122; "../KEY.c"	else if(keycnt>5)
0073f9   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1020
0073fa   38e5     SUB	R0, 0xe5             	SUB	R0, r0x1020
0073fb   7a03     JB	0x3, 2                	JB	PSW, 2
0073fc   c3ff     JMP	#0x3ff               	JMP	_00134_DS_
0073fd   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	r0x1021
0073fe   38e7     SUB	R0, 0xe7             	SUB	R0, r0x1021
                                           _00134_DS_
0073ff   7803     JB	0x3, 0                	JB	PSW, 0
007400   c493     JMP	#0x493               	JMP	_00111_DS_
                                           ;	.line	124; "../KEY.c"	TX_Data[0]=0x20;	//返回
007401   9820     MOV	R0, #0x20            	MOV	R0,# 0x20
                                           	BANKSEL	_TX_Data
007402   5195     MOV	0x95, R0             	MOV	 (_TX_Data + 0), R0
                                           ;	.line	126; "../KEY.c"	break;
007403   c493     JMP	#0x493               	JMP	_00111_DS_
                                           _00087_DS_
                                           ;	.line	128; "../KEY.c"	if(keycnt >50000)
                                           	BANKSEL	r0x1021
007404   0ee7     MOVZ	R0, 0xe7            	MOVZ	R0, r0x1021
                                           	BANKSEL	r0x1022
007405   51eb     MOV	0xeb, R0             	MOV	r0x1022, R0
                                           	BANKSEL	r0x1020
007406   0ee5     MOVZ	R0, 0xe5            	MOVZ	R0, r0x1020
                                           	BANKSEL	r0x1023
007407   51ec     MOV	0xec, R0             	MOV	r0x1023, R0
                                           	BANKSEL	r0x1024
007408   03ed     CLR	0xed                 	CLR	r0x1024
                                           	BANKSEL	r0x1025
007409   03ee     CLR	0xee                 	CLR	r0x1025
00740a   9800     MOV	R0, #0               	MOV	R0,# 0x00
00740b   8080     ADD	R0, #0x80            	ADD	R0,# 0x80
00740c   8080     ADD	R0, #0x80            	ADD	R0,# 0x80
00740d   7a03     JB	0x3, 2                	JB	PSW, 2
00740e   c419     JMP	#0x419               	JMP	_00135_DS_
00740f   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1024
007410   38ed     SUB	R0, 0xed             	SUB	R0, r0x1024
007411   7a03     JB	0x3, 2                	JB	PSW, 2
007412   c419     JMP	#0x419               	JMP	_00135_DS_
007413   98c3     MOV	R0, #0xc3            	MOV	R0,# 0xc3
                                           	BANKSEL	r0x1023
007414   38ec     SUB	R0, 0xec             	SUB	R0, r0x1023
007415   7a03     JB	0x3, 2                	JB	PSW, 2
007416   c419     JMP	#0x419               	JMP	_00135_DS_
007417   9851     MOV	R0, #0x51            	MOV	R0,# 0x51
                                           	BANKSEL	r0x1022
007418   38eb     SUB	R0, 0xeb             	SUB	R0, r0x1022
                                           _00135_DS_
007419   7803     JB	0x3, 0                	JB	PSW, 0
00741a   c41d     JMP	#0x41d               	JMP	_00091_DS_
                                           ;	.line	130; "../KEY.c"	TX_Data[0]=0x00;
                                           	BANKSEL	_TX_Data
00741b   0395     CLR	0x95                 	CLR	 (_TX_Data + 0)
00741c   c493     JMP	#0x493               	JMP	_00111_DS_
                                           _00091_DS_
                                           ;	.line	132; "../KEY.c"	else if(keycnt>5)
00741d   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1020
00741e   38e5     SUB	R0, 0xe5             	SUB	R0, r0x1020
00741f   7a03     JB	0x3, 2                	JB	PSW, 2
007420   c423     JMP	#0x423               	JMP	_00136_DS_
007421   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	r0x1021
007422   38e7     SUB	R0, 0xe7             	SUB	R0, r0x1021
                                           _00136_DS_
007423   7803     JB	0x3, 0                	JB	PSW, 0
007424   c493     JMP	#0x493               	JMP	_00111_DS_
                                           ;	.line	134; "../KEY.c"	TX_Data[0]=0x40;	//上翻
007425   9840     MOV	R0, #0x40            	MOV	R0,# 0x40
                                           	BANKSEL	_TX_Data
007426   5195     MOV	0x95, R0             	MOV	 (_TX_Data + 0), R0
                                           ;	.line	136; "../KEY.c"	break;
007427   c493     JMP	#0x493               	JMP	_00111_DS_
                                           _00093_DS_
                                           ;	.line	138; "../KEY.c"	if(keycnt >50000)
                                           	BANKSEL	r0x1021
007428   0ee7     MOVZ	R0, 0xe7            	MOVZ	R0, r0x1021
                                           	BANKSEL	r0x1022
007429   51eb     MOV	0xeb, R0             	MOV	r0x1022, R0
                                           	BANKSEL	r0x1020
00742a   0ee5     MOVZ	R0, 0xe5            	MOVZ	R0, r0x1020
                                           	BANKSEL	r0x1023
00742b   51ec     MOV	0xec, R0             	MOV	r0x1023, R0
                                           	BANKSEL	r0x1024
00742c   03ed     CLR	0xed                 	CLR	r0x1024
                                           	BANKSEL	r0x1025
00742d   03ee     CLR	0xee                 	CLR	r0x1025
00742e   9800     MOV	R0, #0               	MOV	R0,# 0x00
00742f   8080     ADD	R0, #0x80            	ADD	R0,# 0x80
007430   8080     ADD	R0, #0x80            	ADD	R0,# 0x80
007431   7a03     JB	0x3, 2                	JB	PSW, 2
007432   c43d     JMP	#0x43d               	JMP	_00137_DS_
007433   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1024
007434   38ed     SUB	R0, 0xed             	SUB	R0, r0x1024
007435   7a03     JB	0x3, 2                	JB	PSW, 2
007436   c43d     JMP	#0x43d               	JMP	_00137_DS_
007437   98c3     MOV	R0, #0xc3            	MOV	R0,# 0xc3
                                           	BANKSEL	r0x1023
007438   38ec     SUB	R0, 0xec             	SUB	R0, r0x1023
007439   7a03     JB	0x3, 2                	JB	PSW, 2
00743a   c43d     JMP	#0x43d               	JMP	_00137_DS_
00743b   9851     MOV	R0, #0x51            	MOV	R0,# 0x51
                                           	BANKSEL	r0x1022
00743c   38eb     SUB	R0, 0xeb             	SUB	R0, r0x1022
                                           _00137_DS_
00743d   7803     JB	0x3, 0                	JB	PSW, 0
00743e   c441     JMP	#0x441               	JMP	_00097_DS_
                                           ;	.line	140; "../KEY.c"	TX_Data[0]=0x00;
                                           	BANKSEL	_TX_Data
00743f   0395     CLR	0x95                 	CLR	 (_TX_Data + 0)
007440   c493     JMP	#0x493               	JMP	_00111_DS_
                                           _00097_DS_
                                           ;	.line	142; "../KEY.c"	else if(keycnt>5)
007441   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1020
007442   38e5     SUB	R0, 0xe5             	SUB	R0, r0x1020
007443   7a03     JB	0x3, 2                	JB	PSW, 2
007444   c447     JMP	#0x447               	JMP	_00138_DS_
007445   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	r0x1021
007446   38e7     SUB	R0, 0xe7             	SUB	R0, r0x1021
                                           _00138_DS_
007447   7803     JB	0x3, 0                	JB	PSW, 0
007448   c493     JMP	#0x493               	JMP	_00111_DS_
                                           ;	.line	144; "../KEY.c"	TX_Data[0]=0x80;	//确认
007449   9880     MOV	R0, #0x80            	MOV	R0,# 0x80
                                           	BANKSEL	_TX_Data
00744a   5195     MOV	0x95, R0             	MOV	 (_TX_Data + 0), R0
                                           ;	.line	146; "../KEY.c"	break;
00744b   c493     JMP	#0x493               	JMP	_00111_DS_
                                           _00099_DS_
                                           ;	.line	148; "../KEY.c"	if(keycnt >50000)
                                           	BANKSEL	r0x1021
00744c   0ee7     MOVZ	R0, 0xe7            	MOVZ	R0, r0x1021
                                           	BANKSEL	r0x1022
00744d   51eb     MOV	0xeb, R0             	MOV	r0x1022, R0
                                           	BANKSEL	r0x1020
00744e   0ee5     MOVZ	R0, 0xe5            	MOVZ	R0, r0x1020
                                           	BANKSEL	r0x1023
00744f   51ec     MOV	0xec, R0             	MOV	r0x1023, R0
                                           	BANKSEL	r0x1024
007450   03ed     CLR	0xed                 	CLR	r0x1024
                                           	BANKSEL	r0x1025
007451   03ee     CLR	0xee                 	CLR	r0x1025
007452   9800     MOV	R0, #0               	MOV	R0,# 0x00
007453   8080     ADD	R0, #0x80            	ADD	R0,# 0x80
007454   8080     ADD	R0, #0x80            	ADD	R0,# 0x80
007455   7a03     JB	0x3, 2                	JB	PSW, 2
007456   c461     JMP	#0x461               	JMP	_00139_DS_
007457   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1024
007458   38ed     SUB	R0, 0xed             	SUB	R0, r0x1024
007459   7a03     JB	0x3, 2                	JB	PSW, 2
00745a   c461     JMP	#0x461               	JMP	_00139_DS_
00745b   98c3     MOV	R0, #0xc3            	MOV	R0,# 0xc3
                                           	BANKSEL	r0x1023
00745c   38ec     SUB	R0, 0xec             	SUB	R0, r0x1023
00745d   7a03     JB	0x3, 2                	JB	PSW, 2
00745e   c461     JMP	#0x461               	JMP	_00139_DS_
00745f   9851     MOV	R0, #0x51            	MOV	R0,# 0x51
                                           	BANKSEL	r0x1022
007460   38eb     SUB	R0, 0xeb             	SUB	R0, r0x1022
                                           _00139_DS_
007461   7803     JB	0x3, 0                	JB	PSW, 0
007462   c465     JMP	#0x465               	JMP	_00103_DS_
                                           ;	.line	150; "../KEY.c"	TX_Data[1]=0x00;
                                           	BANKSEL	_TX_Data
007463   0396     CLR	0x96                 	CLR	 (_TX_Data + 1)
007464   c493     JMP	#0x493               	JMP	_00111_DS_
                                           _00103_DS_
                                           ;	.line	152; "../KEY.c"	else if(keycnt>5)
007465   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1020
007466   38e5     SUB	R0, 0xe5             	SUB	R0, r0x1020
007467   7a03     JB	0x3, 2                	JB	PSW, 2
007468   c46b     JMP	#0x46b               	JMP	_00140_DS_
007469   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	r0x1021
00746a   38e7     SUB	R0, 0xe7             	SUB	R0, r0x1021
                                           _00140_DS_
00746b   7803     JB	0x3, 0                	JB	PSW, 0
00746c   c493     JMP	#0x493               	JMP	_00111_DS_
                                           ;	.line	154; "../KEY.c"	TX_Data[1]=0x01;   //下翻
00746d   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	_TX_Data
00746e   5196     MOV	0x96, R0             	MOV	 (_TX_Data + 1), R0
                                           ;	.line	156; "../KEY.c"	break;
00746f   c493     JMP	#0x493               	JMP	_00111_DS_
                                           _00105_DS_
                                           ;	.line	158; "../KEY.c"	if(keycnt >50000)
                                           	BANKSEL	r0x1021
007470   0ee7     MOVZ	R0, 0xe7            	MOVZ	R0, r0x1021
                                           	BANKSEL	r0x1022
007471   51eb     MOV	0xeb, R0             	MOV	r0x1022, R0
                                           	BANKSEL	r0x1020
007472   0ee5     MOVZ	R0, 0xe5            	MOVZ	R0, r0x1020
                                           	BANKSEL	r0x1023
007473   51ec     MOV	0xec, R0             	MOV	r0x1023, R0
                                           	BANKSEL	r0x1024
007474   03ed     CLR	0xed                 	CLR	r0x1024
                                           	BANKSEL	r0x1025
007475   03ee     CLR	0xee                 	CLR	r0x1025
007476   9800     MOV	R0, #0               	MOV	R0,# 0x00
007477   8080     ADD	R0, #0x80            	ADD	R0,# 0x80
007478   8080     ADD	R0, #0x80            	ADD	R0,# 0x80
007479   7a03     JB	0x3, 2                	JB	PSW, 2
00747a   c485     JMP	#0x485               	JMP	_00141_DS_
00747b   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1024
00747c   38ed     SUB	R0, 0xed             	SUB	R0, r0x1024
00747d   7a03     JB	0x3, 2                	JB	PSW, 2
00747e   c485     JMP	#0x485               	JMP	_00141_DS_
00747f   98c3     MOV	R0, #0xc3            	MOV	R0,# 0xc3
                                           	BANKSEL	r0x1023
007480   38ec     SUB	R0, 0xec             	SUB	R0, r0x1023
007481   7a03     JB	0x3, 2                	JB	PSW, 2
007482   c485     JMP	#0x485               	JMP	_00141_DS_
007483   9851     MOV	R0, #0x51            	MOV	R0,# 0x51
                                           	BANKSEL	r0x1022
007484   38eb     SUB	R0, 0xeb             	SUB	R0, r0x1022
                                           _00141_DS_
007485   7803     JB	0x3, 0                	JB	PSW, 0
007486   c489     JMP	#0x489               	JMP	_00109_DS_
                                           ;	.line	160; "../KEY.c"	TX_Data[1]=0x00;
                                           	BANKSEL	_TX_Data
007487   0396     CLR	0x96                 	CLR	 (_TX_Data + 1)
007488   c493     JMP	#0x493               	JMP	_00111_DS_
                                           _00109_DS_
                                           ;	.line	162; "../KEY.c"	else if(keycnt>5)
007489   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1020
00748a   38e5     SUB	R0, 0xe5             	SUB	R0, r0x1020
00748b   7a03     JB	0x3, 2                	JB	PSW, 2
00748c   c48f     JMP	#0x48f               	JMP	_00142_DS_
00748d   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	r0x1021
00748e   38e7     SUB	R0, 0xe7             	SUB	R0, r0x1021
                                           _00142_DS_
00748f   7803     JB	0x3, 0                	JB	PSW, 0
007490   c493     JMP	#0x493               	JMP	_00111_DS_
                                           ;	.line	164; "../KEY.c"	TX_Data[1]=0x02;   //语音
007491   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
                                           	BANKSEL	_TX_Data
007492   5196     MOV	0x96, R0             	MOV	 (_TX_Data + 1), R0
                                           _00111_DS_
                                           ;	.line	168; "../KEY.c"	if (keyvalue == 0U)
007493   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x101F
007494   30e6     ORL	R0, 0xe6             	ORL	R0, r0x101F
007495   7a03     JB	0x3, 2                	JB	PSW, 2
007496   c49f     JMP	#0x49f               	JMP	_00113_DS_
                                           ;	.line	170; "../KEY.c"	Main_DataClean();
007497   9f77     MOV	R7, #0x77            	TRAPPC1	_Main_DataClean
007498   5f73     MOV	0x73, R7             	TRAPPC2	_Main_DataClean
007499   e077     MOVP	#0x77               	PAGESEL	_Main_DataClean
00749a   d7b3     CALL	#0x7b3              	CALL	_Main_DataClean
00749b   9f74     MOV	R7, #0x74            	TRAPPC1	$+2
00749c   5f73     MOV	0x73, R7             	TRAPPC2	$+1
00749d   e074     MOVP	#0x74               	PAGESEL	$
00749e   c4a6     JMP	#0x4a6               	JMP	_00115_DS_
                                           _00113_DS_
                                           ;	.line	174; "../KEY.c"	Main_CleanTimeSet();
00749f   9f78     MOV	R7, #0x78            	TRAPPC1	_Main_CleanTimeSet
0074a0   5f73     MOV	0x73, R7             	TRAPPC2	_Main_CleanTimeSet
0074a1   e078     MOVP	#0x78               	PAGESEL	_Main_CleanTimeSet
0074a2   d853     CALL	#0x853              	CALL	_Main_CleanTimeSet
0074a3   9f74     MOV	R7, #0x74            	TRAPPC1	$+2
0074a4   5f73     MOV	0x73, R7             	TRAPPC2	$+1
0074a5   e074     MOVP	#0x74               	PAGESEL	$
                                           _00115_DS_
0074a6   0008     CRET                     	CRET	
                                           func._currentkeyleft	.code
                                           _currentkeyleft	;Function start
                                           ;	.line	77; "../KEY.c"	Init_ADC(0x01);
007521   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	STK00
007522   517e     MOV	0x7e, R0             	MOV	STK00, R0
007523   9800     MOV	R0, #0               	MOV	R0,# 0x00
007524   9f76     MOV	R7, #0x76            	TRAPPC1	_Init_ADC
007525   5f73     MOV	0x73, R7             	TRAPPC2	_Init_ADC
007526   e076     MOVP	#0x76               	PAGESEL	_Init_ADC
007527   d66d     CALL	#0x66d              	CALL	_Init_ADC
007528   9f75     MOV	R7, #0x75            	TRAPPC1	$+2
007529   5f73     MOV	0x73, R7             	TRAPPC2	$+1
00752a   e075     MOVP	#0x75               	PAGESEL	$
                                           ;	.line	78; "../KEY.c"	ADCCTL2 = 0x25;                 //左路AD按键数据采集
00752b   9825     MOV	R0, #0x25            	MOV	R0,# 0x25
00752c   e100     MOVB	#0x00               	BANKSEL	_ADCCTL2
00752d   5150     MOV	0x50, R0             	MOV	_ADCCTL2, R0
                                           ;	.line	79; "../KEY.c"	ADC_data1 = Adc_read();
00752e   9f76     MOV	R7, #0x76            	TRAPPC1	_Adc_read
00752f   5f73     MOV	0x73, R7             	TRAPPC2	_Adc_read
007530   e076     MOVP	#0x76               	PAGESEL	_Adc_read
007531   d6ef     CALL	#0x6ef              	CALL	_Adc_read
007532   9f75     MOV	R7, #0x75            	TRAPPC1	$+2
007533   5f73     MOV	0x73, R7             	TRAPPC2	$+1
007534   e075     MOVP	#0x75               	PAGESEL	$
007535   e100     MOVB	#0x00               	BANKSEL	r0x1014
007536   51e9     MOV	0xe9, R0             	MOV	r0x1014, R0
                                           	BANKSEL	STK00
007537   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1015
007538   51e8     MOV	0xe8, R0             	MOV	r0x1015, R0
                                           ;	.line	80; "../KEY.c"	if(ADC_data1<=100)//电话接听
007539   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1014
00753a   38e9     SUB	R0, 0xe9             	SUB	R0, r0x1014
00753b   7a03     JB	0x3, 2                	JB	PSW, 2
00753c   c53f     JMP	#0x53f               	JMP	_00072_DS_
00753d   9865     MOV	R0, #0x65            	MOV	R0,# 0x65
                                           	BANKSEL	r0x1015
00753e   38e8     SUB	R0, 0xe8             	SUB	R0, r0x1015
                                           _00072_DS_
00753f   7003     JNB	0x3, 0               	JNB	PSW, 0
007540   c544     JMP	#0x544               	JMP	_00059_DS_
                                           ;	.line	82; "../KEY.c"	Key_Number1=1;
007541   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	r0x1016
007542   51ea     MOV	0xea, R0             	MOV	r0x1016, R0
007543   c591     JMP	#0x591               	JMP	_00060_DS_
                                           _00059_DS_
                                           ;	.line	85; "../KEY.c"	else if(ADC_data1>=800&&ADC_data1<=1000)//vol+
007544   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	r0x1014
007545   38e9     SUB	R0, 0xe9             	SUB	R0, r0x1014
007546   7a03     JB	0x3, 2                	JB	PSW, 2
007547   c54a     JMP	#0x54a               	JMP	_00073_DS_
007548   9820     MOV	R0, #0x20            	MOV	R0,# 0x20
                                           	BANKSEL	r0x1015
007549   38e8     SUB	R0, 0xe8             	SUB	R0, r0x1015
                                           _00073_DS_
00754a   7803     JB	0x3, 0                	JB	PSW, 0
00754b   c557     JMP	#0x557               	JMP	_00055_DS_
00754c   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	r0x1014
00754d   38e9     SUB	R0, 0xe9             	SUB	R0, r0x1014
00754e   7a03     JB	0x3, 2                	JB	PSW, 2
00754f   c552     JMP	#0x552               	JMP	_00074_DS_
007550   98e9     MOV	R0, #0xe9            	MOV	R0,# 0xe9
                                           	BANKSEL	r0x1015
007551   38e8     SUB	R0, 0xe8             	SUB	R0, r0x1015
                                           _00074_DS_
007552   7003     JNB	0x3, 0               	JNB	PSW, 0
007553   c557     JMP	#0x557               	JMP	_00055_DS_
                                           ;	.line	87; "../KEY.c"	Key_Number1=2;
007554   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
                                           	BANKSEL	r0x1016
007555   51ea     MOV	0xea, R0             	MOV	r0x1016, R0
007556   c591     JMP	#0x591               	JMP	_00060_DS_
                                           _00055_DS_
                                           ;	.line	90; "../KEY.c"	else if(ADC_data1>=1450&&ADC_data1<=1600)//vol x
007557   9805     MOV	R0, #0x5             	MOV	R0,# 0x05
                                           	BANKSEL	r0x1014
007558   38e9     SUB	R0, 0xe9             	SUB	R0, r0x1014
007559   7a03     JB	0x3, 2                	JB	PSW, 2
00755a   c55d     JMP	#0x55d               	JMP	_00075_DS_
00755b   98aa     MOV	R0, #0xaa            	MOV	R0,# 0xaa
                                           	BANKSEL	r0x1015
00755c   38e8     SUB	R0, 0xe8             	SUB	R0, r0x1015
                                           _00075_DS_
00755d   7803     JB	0x3, 0                	JB	PSW, 0
00755e   c56a     JMP	#0x56a               	JMP	_00051_DS_
00755f   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	r0x1014
007560   38e9     SUB	R0, 0xe9             	SUB	R0, r0x1014
007561   7a03     JB	0x3, 2                	JB	PSW, 2
007562   c565     JMP	#0x565               	JMP	_00076_DS_
007563   9841     MOV	R0, #0x41            	MOV	R0,# 0x41
                                           	BANKSEL	r0x1015
007564   38e8     SUB	R0, 0xe8             	SUB	R0, r0x1015
                                           _00076_DS_
007565   7003     JNB	0x3, 0               	JNB	PSW, 0
007566   c56a     JMP	#0x56a               	JMP	_00051_DS_
                                           ;	.line	92; "../KEY.c"	Key_Number1=3;
007567   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	r0x1016
007568   51ea     MOV	0xea, R0             	MOV	r0x1016, R0
007569   c591     JMP	#0x591               	JMP	_00060_DS_
                                           _00051_DS_
                                           ;	.line	95; "../KEY.c"	else if(ADC_data1>1750&&ADC_data1<=1850)//vol-
00756a   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	r0x1014
00756b   38e9     SUB	R0, 0xe9             	SUB	R0, r0x1014
00756c   7a03     JB	0x3, 2                	JB	PSW, 2
00756d   c570     JMP	#0x570               	JMP	_00077_DS_
00756e   98d7     MOV	R0, #0xd7            	MOV	R0,# 0xd7
                                           	BANKSEL	r0x1015
00756f   38e8     SUB	R0, 0xe8             	SUB	R0, r0x1015
                                           _00077_DS_
007570   7803     JB	0x3, 0                	JB	PSW, 0
007571   c57d     JMP	#0x57d               	JMP	_00047_DS_
007572   9807     MOV	R0, #0x7             	MOV	R0,# 0x07
                                           	BANKSEL	r0x1014
007573   38e9     SUB	R0, 0xe9             	SUB	R0, r0x1014
007574   7a03     JB	0x3, 2                	JB	PSW, 2
007575   c578     JMP	#0x578               	JMP	_00078_DS_
007576   983b     MOV	R0, #0x3b            	MOV	R0,# 0x3b
                                           	BANKSEL	r0x1015
007577   38e8     SUB	R0, 0xe8             	SUB	R0, r0x1015
                                           _00078_DS_
007578   7003     JNB	0x3, 0               	JNB	PSW, 0
007579   c57d     JMP	#0x57d               	JMP	_00047_DS_
                                           ;	.line	97; "../KEY.c"	Key_Number1=4;
00757a   9804     MOV	R0, #0x4             	MOV	R0,# 0x04
                                           	BANKSEL	r0x1016
00757b   51ea     MOV	0xea, R0             	MOV	r0x1016, R0
00757c   c591     JMP	#0x591               	JMP	_00060_DS_
                                           _00047_DS_
                                           ;	.line	100; "../KEY.c"	else if(ADC_data1>=1950&&ADC_data1<=2100)//电话挂断
00757d   9807     MOV	R0, #0x7             	MOV	R0,# 0x07
                                           	BANKSEL	r0x1014
00757e   38e9     SUB	R0, 0xe9             	SUB	R0, r0x1014
00757f   7a03     JB	0x3, 2                	JB	PSW, 2
007580   c583     JMP	#0x583               	JMP	_00079_DS_
007581   989e     MOV	R0, #0x9e            	MOV	R0,# 0x9e
                                           	BANKSEL	r0x1015
007582   38e8     SUB	R0, 0xe8             	SUB	R0, r0x1015
                                           _00079_DS_
007583   7803     JB	0x3, 0                	JB	PSW, 0
007584   c590     JMP	#0x590               	JMP	_00043_DS_
007585   9808     MOV	R0, #0x8             	MOV	R0,# 0x08
                                           	BANKSEL	r0x1014
007586   38e9     SUB	R0, 0xe9             	SUB	R0, r0x1014
007587   7a03     JB	0x3, 2                	JB	PSW, 2
007588   c58b     JMP	#0x58b               	JMP	_00080_DS_
007589   9835     MOV	R0, #0x35            	MOV	R0,# 0x35
                                           	BANKSEL	r0x1015
00758a   38e8     SUB	R0, 0xe8             	SUB	R0, r0x1015
                                           _00080_DS_
00758b   7003     JNB	0x3, 0               	JNB	PSW, 0
00758c   c590     JMP	#0x590               	JMP	_00043_DS_
                                           ;	.line	102; "../KEY.c"	Key_Number1=5;
00758d   9805     MOV	R0, #0x5             	MOV	R0,# 0x05
                                           	BANKSEL	r0x1016
00758e   51ea     MOV	0xea, R0             	MOV	r0x1016, R0
00758f   c591     JMP	#0x591               	JMP	_00060_DS_
                                           _00043_DS_
                                           ;	.line	106; "../KEY.c"	Key_Number1=0;
                                           	BANKSEL	r0x1016
007590   03ea     CLR	0xea                 	CLR	r0x1016
                                           _00060_DS_
                                           ;	.line	108; "../KEY.c"	return Key_Number1;
                                           	BANKSEL	r0x1014
007591   03e9     CLR	0xe9                 	CLR	r0x1014
                                           	BANKSEL	r0x1016
007592   0eea     MOVZ	R0, 0xea            	MOVZ	R0, r0x1016
                                           	BANKSEL	r0x1015
007593   51e8     MOV	0xe8, R0             	MOV	r0x1015, R0
                                           	BANKSEL	STK00
007594   517e     MOV	0x7e, R0             	MOV	STK00, R0
007595   9800     MOV	R0, #0               	MOV	R0,# 0x00
007596   0008     CRET                     	CRET	
                                           func._currentkey	.code
                                           _currentkey	;Function start
                                           ;	.line	36; "../KEY.c"	Init_ADC2(0x01);
0074a7   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	STK00
0074a8   517e     MOV	0x7e, R0             	MOV	STK00, R0
0074a9   9800     MOV	R0, #0               	MOV	R0,# 0x00
0074aa   9f75     MOV	R7, #0x75            	TRAPPC1	_Init_ADC2
0074ab   5f73     MOV	0x73, R7             	TRAPPC2	_Init_ADC2
0074ac   e075     MOVP	#0x75               	PAGESEL	_Init_ADC2
0074ad   d597     CALL	#0x597              	CALL	_Init_ADC2
0074ae   9f74     MOV	R7, #0x74            	TRAPPC1	$+2
0074af   5f73     MOV	0x73, R7             	TRAPPC2	$+1
0074b0   e074     MOVP	#0x74               	PAGESEL	$
                                           ;	.line	37; "../KEY.c"	ADCCTL2 = 0x0c;                 //右路AD按键数据采集
0074b1   980c     MOV	R0, #0xc             	MOV	R0,# 0x0c
0074b2   e100     MOVB	#0x00               	BANKSEL	_ADCCTL2
0074b3   5150     MOV	0x50, R0             	MOV	_ADCCTL2, R0
                                           ;	.line	38; "../KEY.c"	ADC_data = Adc_read();
0074b4   9f76     MOV	R7, #0x76            	TRAPPC1	_Adc_read
0074b5   5f73     MOV	0x73, R7             	TRAPPC2	_Adc_read
0074b6   e076     MOVP	#0x76               	PAGESEL	_Adc_read
0074b7   d6ef     CALL	#0x6ef              	CALL	_Adc_read
0074b8   9f74     MOV	R7, #0x74            	TRAPPC1	$+2
0074b9   5f73     MOV	0x73, R7             	TRAPPC2	$+1
0074ba   e074     MOVP	#0x74               	PAGESEL	$
0074bb   e100     MOVB	#0x00               	BANKSEL	r0x101F
0074bc   51e6     MOV	0xe6, R0             	MOV	r0x101F, R0
                                           	BANKSEL	STK00
0074bd   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1020
0074be   51e5     MOV	0xe5, R0             	MOV	r0x1020, R0
                                           ;	.line	39; "../KEY.c"	if(ADC_data>0&&ADC_data<=65)//返回
                                           	BANKSEL	r0x1020
0074bf   0ee5     MOVZ	R0, 0xe5            	MOVZ	R0, r0x1020
                                           	BANKSEL	r0x101F
0074c0   30e6     ORL	R0, 0xe6             	ORL	R0, r0x101F
0074c1   7203     JNB	0x3, 2               	JNB	PSW, 2
0074c2   c4ce     JMP	#0x4ce               	JMP	_00018_DS_
0074c3   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x101F
0074c4   38e6     SUB	R0, 0xe6             	SUB	R0, r0x101F
0074c5   7a03     JB	0x3, 2                	JB	PSW, 2
0074c6   c4c9     JMP	#0x4c9               	JMP	_00033_DS_
0074c7   9842     MOV	R0, #0x42            	MOV	R0,# 0x42
                                           	BANKSEL	r0x1020
0074c8   38e5     SUB	R0, 0xe5             	SUB	R0, r0x1020
                                           _00033_DS_
0074c9   7003     JNB	0x3, 0               	JNB	PSW, 0
0074ca   c4ce     JMP	#0x4ce               	JMP	_00018_DS_
                                           ;	.line	41; "../KEY.c"	Key_Number=1;
0074cb   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	r0x1021
0074cc   51e7     MOV	0xe7, R0             	MOV	r0x1021, R0
0074cd   c51b     JMP	#0x51b               	JMP	_00019_DS_
                                           _00018_DS_
                                           ;	.line	44; "../KEY.c"	else if(ADC_data>=600&&ADC_data<0x700)//选择上
0074ce   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
                                           	BANKSEL	r0x101F
0074cf   38e6     SUB	R0, 0xe6             	SUB	R0, r0x101F
0074d0   7a03     JB	0x3, 2                	JB	PSW, 2
0074d1   c4d4     JMP	#0x4d4               	JMP	_00034_DS_
0074d2   9858     MOV	R0, #0x58            	MOV	R0,# 0x58
                                           	BANKSEL	r0x1020
0074d3   38e5     SUB	R0, 0xe5             	SUB	R0, r0x1020
                                           _00034_DS_
0074d4   7803     JB	0x3, 0                	JB	PSW, 0
0074d5   c4e1     JMP	#0x4e1               	JMP	_00014_DS_
0074d6   9807     MOV	R0, #0x7             	MOV	R0,# 0x07
                                           	BANKSEL	r0x101F
0074d7   38e6     SUB	R0, 0xe6             	SUB	R0, r0x101F
0074d8   7a03     JB	0x3, 2                	JB	PSW, 2
0074d9   c4dc     JMP	#0x4dc               	JMP	_00035_DS_
0074da   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x1020
0074db   38e5     SUB	R0, 0xe5             	SUB	R0, r0x1020
                                           _00035_DS_
0074dc   7003     JNB	0x3, 0               	JNB	PSW, 0
0074dd   c4e1     JMP	#0x4e1               	JMP	_00014_DS_
                                           ;	.line	46; "../KEY.c"	Key_Number=2;
0074de   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
                                           	BANKSEL	r0x1021
0074df   51e7     MOV	0xe7, R0             	MOV	r0x1021, R0
0074e0   c51b     JMP	#0x51b               	JMP	_00019_DS_
                                           _00014_DS_
                                           ;	.line	49; "../KEY.c"	else if(ADC_data>=1200&&ADC_data<=1450)//ok
0074e1   9804     MOV	R0, #0x4             	MOV	R0,# 0x04
                                           	BANKSEL	r0x101F
0074e2   38e6     SUB	R0, 0xe6             	SUB	R0, r0x101F
0074e3   7a03     JB	0x3, 2                	JB	PSW, 2
0074e4   c4e7     JMP	#0x4e7               	JMP	_00036_DS_
0074e5   98b0     MOV	R0, #0xb0            	MOV	R0,# 0xb0
                                           	BANKSEL	r0x1020
0074e6   38e5     SUB	R0, 0xe5             	SUB	R0, r0x1020
                                           _00036_DS_
0074e7   7803     JB	0x3, 0                	JB	PSW, 0
0074e8   c4f4     JMP	#0x4f4               	JMP	_00010_DS_
0074e9   9805     MOV	R0, #0x5             	MOV	R0,# 0x05
                                           	BANKSEL	r0x101F
0074ea   38e6     SUB	R0, 0xe6             	SUB	R0, r0x101F
0074eb   7a03     JB	0x3, 2                	JB	PSW, 2
0074ec   c4ef     JMP	#0x4ef               	JMP	_00037_DS_
0074ed   98ab     MOV	R0, #0xab            	MOV	R0,# 0xab
                                           	BANKSEL	r0x1020
0074ee   38e5     SUB	R0, 0xe5             	SUB	R0, r0x1020
                                           _00037_DS_
0074ef   7003     JNB	0x3, 0               	JNB	PSW, 0
0074f0   c4f4     JMP	#0x4f4               	JMP	_00010_DS_
                                           ;	.line	51; "../KEY.c"	Key_Number=3;
0074f1   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	r0x1021
0074f2   51e7     MOV	0xe7, R0             	MOV	r0x1021, R0
0074f3   c51b     JMP	#0x51b               	JMP	_00019_DS_
                                           _00010_DS_
                                           ;	.line	54; "../KEY.c"	else if(ADC_data>=1900&&ADC_data<=2000)//选择下
0074f4   9807     MOV	R0, #0x7             	MOV	R0,# 0x07
                                           	BANKSEL	r0x101F
0074f5   38e6     SUB	R0, 0xe6             	SUB	R0, r0x101F
0074f6   7a03     JB	0x3, 2                	JB	PSW, 2
0074f7   c4fa     JMP	#0x4fa               	JMP	_00038_DS_
0074f8   986c     MOV	R0, #0x6c            	MOV	R0,# 0x6c
                                           	BANKSEL	r0x1020
0074f9   38e5     SUB	R0, 0xe5             	SUB	R0, r0x1020
                                           _00038_DS_
0074fa   7803     JB	0x3, 0                	JB	PSW, 0
0074fb   c507     JMP	#0x507               	JMP	_00006_DS_
0074fc   9807     MOV	R0, #0x7             	MOV	R0,# 0x07
                                           	BANKSEL	r0x101F
0074fd   38e6     SUB	R0, 0xe6             	SUB	R0, r0x101F
0074fe   7a03     JB	0x3, 2                	JB	PSW, 2
0074ff   c502     JMP	#0x502               	JMP	_00039_DS_
007500   98d1     MOV	R0, #0xd1            	MOV	R0,# 0xd1
                                           	BANKSEL	r0x1020
007501   38e5     SUB	R0, 0xe5             	SUB	R0, r0x1020
                                           _00039_DS_
007502   7003     JNB	0x3, 0               	JNB	PSW, 0
007503   c507     JMP	#0x507               	JMP	_00006_DS_
                                           ;	.line	56; "../KEY.c"	Key_Number=4;
007504   9804     MOV	R0, #0x4             	MOV	R0,# 0x04
                                           	BANKSEL	r0x1021
007505   51e7     MOV	0xe7, R0             	MOV	r0x1021, R0
007506   c51b     JMP	#0x51b               	JMP	_00019_DS_
                                           _00006_DS_
                                           ;	.line	59; "../KEY.c"	else if(ADC_data>=2400&&ADC_data<=2600)//语音按键
007507   9809     MOV	R0, #0x9             	MOV	R0,# 0x09
                                           	BANKSEL	r0x101F
007508   38e6     SUB	R0, 0xe6             	SUB	R0, r0x101F
007509   7a03     JB	0x3, 2                	JB	PSW, 2
00750a   c50d     JMP	#0x50d               	JMP	_00040_DS_
00750b   9860     MOV	R0, #0x60            	MOV	R0,# 0x60
                                           	BANKSEL	r0x1020
00750c   38e5     SUB	R0, 0xe5             	SUB	R0, r0x1020
                                           _00040_DS_
00750d   7803     JB	0x3, 0                	JB	PSW, 0
00750e   c51a     JMP	#0x51a               	JMP	_00002_DS_
00750f   980a     MOV	R0, #0xa             	MOV	R0,# 0x0a
                                           	BANKSEL	r0x101F
007510   38e6     SUB	R0, 0xe6             	SUB	R0, r0x101F
007511   7a03     JB	0x3, 2                	JB	PSW, 2
007512   c515     JMP	#0x515               	JMP	_00041_DS_
007513   9829     MOV	R0, #0x29            	MOV	R0,# 0x29
                                           	BANKSEL	r0x1020
007514   38e5     SUB	R0, 0xe5             	SUB	R0, r0x1020
                                           _00041_DS_
007515   7003     JNB	0x3, 0               	JNB	PSW, 0
007516   c51a     JMP	#0x51a               	JMP	_00002_DS_
                                           ;	.line	61; "../KEY.c"	Key_Number=5;
007517   9805     MOV	R0, #0x5             	MOV	R0,# 0x05
                                           	BANKSEL	r0x1021
007518   51e7     MOV	0xe7, R0             	MOV	r0x1021, R0
007519   c51b     JMP	#0x51b               	JMP	_00019_DS_
                                           _00002_DS_
                                           ;	.line	65; "../KEY.c"	Key_Number=0;
                                           	BANKSEL	r0x1021
00751a   03e7     CLR	0xe7                 	CLR	r0x1021
                                           _00019_DS_
                                           ;	.line	67; "../KEY.c"	return Key_Number;
                                           	BANKSEL	r0x101F
00751b   03e6     CLR	0xe6                 	CLR	r0x101F
                                           	BANKSEL	r0x1021
00751c   0ee7     MOVZ	R0, 0xe7            	MOVZ	R0, r0x1021
                                           	BANKSEL	r0x1020
00751d   51e5     MOV	0xe5, R0             	MOV	r0x1020, R0
                                           	BANKSEL	STK00
00751e   517e     MOV	0x7e, R0             	MOV	STK00, R0
00751f   9800     MOV	R0, #0               	MOV	R0,# 0x00
007520   0008     CRET                     	CRET	
                                           	.end
                                           	.radix dec
                                           	.include "KF8A100GQP.inc"
                                           func._Timer1_Init	.code
                                           _Timer1_Init	;Function start
                                           ;	.line	11; "../Timer.c"	T1CTL2 = T1CLK_SEL_SCLK|T1CLK_Prescale_DIV_8;	//	32m/4 /8
007823   980c     MOV	R0, #0xc             	MOV	R0,# 0x0c
007824   e101     MOVB	#0x01               	BANKSEL	_T1CTL2
007825   5118     MOV	0x18, R0             	MOV	_T1CTL2, R0
                                           ;	.line	12; "../Timer.c"	T1H=0;
007826   e100     MOVB	#0x00               	BANKSEL	_T1H
007827   030f     CLR	0xf                  	CLR	_T1H
                                           ;	.line	13; "../Timer.c"	T1L=0;
                                           	BANKSEL	_T1L
007828   030e     CLR	0xe                  	CLR	_T1L
                                           ;	.line	14; "../Timer.c"	PP2=0x01;		//5000
007829   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	_PP2
00782a   5132     MOV	0x32, R0             	MOV	_PP2, R0
                                           ;	.line	15; "../Timer.c"	PP1=0xf4-1;
00782b   98f3     MOV	R0, #0xf3            	MOV	R0,# 0xf3
                                           	BANKSEL	_PP1
00782c   5116     MOV	0x16, R0             	MOV	_PP1, R0
                                           ;	.line	16; "../Timer.c"	PWMMODE = 1;	//使能重载
                                           	BANKSEL	_PWMCTL_bits
00782d   6b15     SET	0x15, 3              	SET	_PWMCTL_bits, 3
00782e   0000     NOP                      	NOP 
                                           ;	.line	21; "../Timer.c"	T1ON = 1;		//T1定时器启动
                                           	BANKSEL	_T1CTL_bits
00782f   6810     SET	0x10, 0              	SET	_T1CTL_bits, 0
                                           ;	.line	22; "../Timer.c"	T1IF = 0;
                                           	BANKSEL	_EIF1_bits
007830   600c     CLR	0xc, 0               	CLR	_EIF1_bits, 0
                                           ;	.line	23; "../Timer.c"	T1IE = 1;
                                           	BANKSEL	_EIE1_bits
007831   682c     SET	0x2c, 0              	SET	_EIE1_bits, 0
007832   0008     CRET                     	CRET	
                                           	.end
                                           	.radix dec
                                           	.include "KF8A100GQP.inc"
                                           func._UART2_SendBuf	.code
                                           _UART2_SendBuf	;Function start
                                           ;	.line	58; "../UART.c"	void UART2_SendBuf(uint8 head, uint8 lenth, uint8 *SendTemp)
                                           	BANKSEL	r0x1000
                                           	MOV	r0x1000, R0
                                           	BANKSEL	STK00
                                           	MOVZ	R0, STK00
                                           	BANKSEL	r0x1001
                                           	MOV	r0x1001, R0
                                           	BANKSEL	STK01
                                           	MOVZ	R0, STK01
                                           	BANKSEL	r0x1002
                                           	MOV	r0x1002, R0
                                           	BANKSEL	STK02
                                           	MOVZ	R0, STK02
                                           	BANKSEL	r0x1003
                                           	MOV	r0x1003, R0
                                           	BANKSEL	STK03
                                           	MOVZ	R0, STK03
                                           	BANKSEL	r0x1004
                                           	MOV	r0x1004, R0
                                           ;	.line	61; "../UART.c"	temp = head+lenth;
                                           	BANKSEL	r0x1000
                                           	MOV	R0, r0x1000
                                           	BANKSEL	r0x1001
                                           	ADD	r0x1001, R0
                                           _00009_DS_
                                           ;	.line	62; "../UART.c"	for(;head<temp;head++)
                                           	BANKSEL	r0x1001
                                           	MOVZ	R0, r0x1001
                                           	BANKSEL	r0x1000
                                           	SUB	R0, r0x1000
                                           	JNB	PSW, 0
                                           	JMP	_00013_DS_
                                           ;	.line	64; "../UART.c"	UART2_SendOneByte(*(SendTemp+head));
                                           	BANKSEL	r0x1004
                                           	MOV	R0, r0x1004
                                           	BANKSEL	r0x1000
                                           	ADD	R0, r0x1000
                                           	BANKSEL	r0x1005
                                           	MOV	r0x1005, R0
                                           	BANKSEL	r0x1003
                                           	MOVZ	R0, r0x1003
                                           	JNB	PSW, 0
                                           	ADD	R0,# 0x01
                                           	BANKSEL	r0x1006
                                           	MOV	r0x1006, R0
                                           	BANKSEL	r0x1002
                                           	MOVZ	R0, r0x1002
                                           	JNB	PSW, 0
                                           	ADD	R0,# 0x01
                                           	BANKSEL	r0x1007
                                           	MOV	r0x1007, R0
                                           	BANKSEL	r0x1005
                                           	MOVZ	R0, r0x1005
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1006
                                           	MOVZ	R0, r0x1006
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1007
                                           	MOVZ	R0, r0x1007
                                           	TRAPPC1	__gptrget1
                                           	TRAPPC2	__gptrget1
                                           	PAGESEL	__gptrget1
                                           	CALL	__gptrget1
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           	BANKSEL	r0x1008
                                           	MOV	r0x1008, R0
                                           	BANKSEL	r0x1008
                                           	MOVZ	R0, r0x1008
                                           	TRAPPC1	_UART2_SendOneByte
                                           	TRAPPC2	_UART2_SendOneByte
                                           	PAGESEL	_UART2_SendOneByte
                                           	CALL	_UART2_SendOneByte
                                           	TRAPPC1	$+2
                                           	TRAPPC2	$+1
                                           	PAGESEL	$
                                           ;	.line	62; "../UART.c"	for(;head<temp;head++)
                                           	BANKSEL	r0x1000
                                           	INC	r0x1000
                                           	JMP	_00009_DS_
                                           _00013_DS_
                                           	CRET	
                                           func._UART2_SendOneByte	.code
                                           _UART2_SendOneByte	;Function start
                                           ;	.line	46; "../UART.c"	void UART2_SendOneByte(unsigned char SendTemp)
                                           	BANKSEL	_TXSDR3
                                           	MOV	_TXSDR3, R0
                                           _00003_DS_
                                           ;	.line	49; "../UART.c"	while(TXSRS3==0);
                                           	BANKSEL	_TSCTL3_bits
                                           	JB	_TSCTL3_bits, 1
                                           	JMP	_00003_DS_
                                           	CRET	
                                           func._UART2_Init	.code
                                           _UART2_Init	;Function start
                                           ;	.line	14; "../UART.c"	BRCTL2=0x40|USART_SourceClk_SCLK|USART_BRG16;	// 	接收空闲  使用8位计数器，不考虑唤醒是使能和自动波特率检测
007833   9850     MOV	R0, #0x50            	MOV	R0,# 0x50
007834   e101     MOVB	#0x01               	BANKSEL	_BRCTL2
007835   516b     MOV	0x6b, R0             	MOV	_BRCTL2, R0
                                           ;	.line	22; "../UART.c"	EUBRGH2=0x00;
                                           	BANKSEL	_EUBRGH2
007836   0359     CLR	0x59                 	CLR	_EUBRGH2
                                           ;	.line	23; "../UART.c"	EUBRGL2=68;
007837   9844     MOV	R0, #0x44            	MOV	R0,# 0x44
                                           	BANKSEL	_EUBRGL2
007838   516d     MOV	0x6d, R0             	MOV	_EUBRGL2, R0
                                           ;	.line	24; "../UART.c"	TSCTL2=0x26;
007839   9826     MOV	R0, #0x26            	MOV	R0,# 0x26
                                           	BANKSEL	_TSCTL2
00783a   516c     MOV	0x6c, R0             	MOV	_TSCTL2, R0
                                           ;	.line	25; "../UART.c"	RSCTL2=0x90;
00783b   9890     MOV	R0, #0x90            	MOV	R0,# 0x90
                                           	BANKSEL	_RSCTL2
00783c   5168     MOV	0x68, R0             	MOV	_RSCTL2, R0
                                           ;	.line	34; "../UART.c"	TX2IF=0;
00783d   e100     MOVB	#0x00               	BANKSEL	_EIF2_bits
00783e   640d     CLR	0xd, 4               	CLR	_EIF2_bits, 4
                                           ;	.line	35; "../UART.c"	TX2IE=0;
                                           	BANKSEL	_EIE2_bits
00783f   642d     CLR	0x2d, 4              	CLR	_EIE2_bits, 4
                                           ;	.line	36; "../UART.c"	RC2IF=0;
                                           	BANKSEL	_EIF2_bits
007840   650d     CLR	0xd, 5               	CLR	_EIF2_bits, 5
                                           ;	.line	37; "../UART.c"	RC2IE=0;
                                           	BANKSEL	_EIE2_bits
007841   652d     CLR	0x2d, 5              	CLR	_EIE2_bits, 5
007842   0008     CRET                     	CRET	
                                           	.end
                                           	.radix dec
                                           	.include "KF8A100GQP.inc"
                                           	__config 0x8007, 0x6d4
                                           	.end
                                           	.radix dec
                                           	.include "KF8A100GQP.inc"
                                           	.type STK11, 108
                                           	.type STK10, 108
                                           	.type STK09, 108
                                           	.type STK08, 108
                                           	.type STK07, 108
                                           	.type STK06, 108
                                           	.type STK05, 108
                                           	.type STK04, 108
                                           	.type STK03, 108
                                           	.type STK02, 108
                                           	.type STK01, 108
                                           	.type STK00, 108
                                           sharebankTRAP .idata 0x73
                                           TRAPRx73
                                             .db 0x00
                                           TRAPRx74
                                             .db 0x00
                                           TRAPRx75
                                             .db 0x00
                                           TRAPRx76
                                             .db 0x00
                                           TRAPRx77
                                             .db 0x00
                                           ID_main_0	.idata
                                           _can_data_hand
                                           	.db	0x00
                                           ID_main_1	.idata
                                           _length
                                           	.db	0x00
                                           ID_main_2	.idata
                                           _Status_fram
                                           	.db	0x00
                                           ID_main_3	.idata
                                           _ID_fram
                                           	.db	0x00, 0x00
                                           ID_main_4	.idata
                                           _Data
                                           	.db	0x00
                                           	.db	0x00
                                           	.db	0x00
                                           	.db	0x00
                                           	.db	0x00
                                           	.db	0x00
                                           	.db	0x00
                                           	.db	0x00
                                           ID_main_5	.idata
                                           _cleantime
                                           	.db	0x00, 0x00
                                           LDS_00000	.idata
                                           _Main_DataClean_old_data0_1_1
                                           	.db 0, 0
                                           LDS_00001	.idata
                                           _Main_DataClean_old_data1_1_1
                                           	.db 0, 0
                                           STARTUP	.code 0x0000
000000   0376     CLR	0x76                 	CLR 0x76
000001   0373     CLR	0x73                 	CLR 0x73
000002   e078     MOVP	#0x78               	PAGESEL	init_imp
000003   c843     JMP	#0x843               	JMP		init_imp
                                           INIT_IMP	.code
                                           init_imp
007843   e077     MOVP	#0x77               	PAGESEL	_startup
007844   d76f     CALL	#0x76f              	CALL	_startup
007845   e078     MOVP	#0x78               	PAGESEL	__gsinit_startup
007846   d84b     CALL	#0x84b              	CALL	__gsinit_startup
007847   9f70     MOV	R7, #0x70            	TRAPPC1	_main
007848   5f73     MOV	0x73, R7             	TRAPPC2	_main
007849   e070     MOVP	#0x70               	PAGESEL	_main
00784a   c000     JMP	#0                   	JMP		_main
                                           interrupt_0x04	.code	0x4
000004   f8c2     MOV	R2, R0               	MOV		R2,R0
000005   5617     MOV	R3, 0x17             	MOV		R3,BANK
000006   5003     MOV	R0, 0x3              	MOV		R0,PSW
000007   e100     MOVB	#0x00               	BANKSEL	I0PSW
000008   518f     MOV	0x8f, R0             	MOV		I0PSW,R0
000009   538d     MOV	0x8d, R1             	MOV		I0R1,R1
00000a   5f8e     MOV	0x8e, R7             	MOV		I0R7,R7
00000b   6a76     SET	0x76, 2              	SET		TRAPRx76,2
00000c   9f77     MOV	R7, #0x77            	TRAPPC1	interrupt_service_routine_0x04
00000d   5f75     MOV	0x75, R7             	TRAPPC2	interrupt_service_routine_0x04
00000e   e077     MOVP	#0x77               	PAGESEL	interrupt_service_routine_0x04
00000f   c794     JMP	#0x794               	JMP		interrupt_service_routine_0x04
                                           func._int_fun0	.code
                                           _int_fun0	;Function start
                                           interrupt_service_routine_0x04
                                           ;	.line	180; "../main.c"	if(T1IE && T1IF)			//T1定时中断		500us gptrget1
007794   e100     MOVB	#0x00               	BANKSEL	_EIE1_bits
007795   782c     JB	0x2c, 0               	JB	_EIE1_bits, 0
007796   c7a7     JMP	#0x7a7               	JMP	_00104_DS_
                                           	BANKSEL	_EIF1_bits
007797   780c     JB	0xc, 0                	JB	_EIF1_bits, 0
007798   c7a7     JMP	#0x7a7               	JMP	_00104_DS_
                                           ;	.line	182; "../main.c"	T1IF=0;
                                           	BANKSEL	_EIF1_bits
007799   600c     CLR	0xc, 0               	CLR	_EIF1_bits, 0
00779a   0064     CWDT                     	CWDT 
                                           ;	.line	184; "../main.c"	Time_count++;
                                           	BANKSEL	_Time_count
00779b   0bb2     INC	0xb2                 	INC	_Time_count
00779c   7a03     JB	0x3, 2                	JB	PSW, 2
00779d   c79f     JMP	#0x79f               	JMP	_00102_DS_
                                           	BANKSEL	_Time_count
00779e   0bb3     INC	0xb3                 	INC	(_Time_count + 1)
                                           _00102_DS_
                                           ;	.line	185; "../main.c"	key_count++;
                                           	BANKSEL	_key_count
00779f   0bb4     INC	0xb4                 	INC	_key_count
0077a0   7a03     JB	0x3, 2                	JB	PSW, 2
0077a1   c7a3     JMP	#0x7a3               	JMP	_00103_DS_
                                           	BANKSEL	_key_count
0077a2   0bb5     INC	0xb5                 	INC	(_key_count + 1)
                                           _00103_DS_
                                           ;	.line	186; "../main.c"	cleantime ++;
                                           	BANKSEL	_cleantime
0077a3   0bb8     INC	0xb8                 	INC	_cleantime
0077a4   7a03     JB	0x3, 2                	JB	PSW, 2
0077a5   c7a7     JMP	#0x7a7               	JMP	_00104_DS_
                                           	BANKSEL	_cleantime
0077a6   0bb9     INC	0xb9                 	INC	(_cleantime + 1)
                                           _00104_DS_
                                           	BANKSEL	I0R1
0077a7   528d     MOV	R1, 0x8d             	MOV	R1, I0R1
                                           	BANKSEL	I0R7
0077a8   5e8e     MOV	R7, 0x8e             	MOV	R7, I0R7
                                           	BANKSEL	I0PSW
0077a9   508f     MOV	R0, 0x8f             	MOV	R0, I0PSW
0077aa   5103     MOV	0x3, R0              	MOV	PSW, R0
0077ab   5073     MOV	R0, 0x73             	MOV	R0, TRAPRx73
0077ac   7176     JNB	0x76, 1              	JNB	TRAPRx76, 1
0077ad   5074     MOV	R0, 0x74             	MOV	R0, TRAPRx74
0077ae   6276     CLR	0x76, 2              	CLR	TRAPRx76, 2
0077af   510a     MOV	0xa, R0              	MOV	PCH, R0
0077b0   5717     MOV	0x17, R3             	MOV	BANK, R3
0077b1   f8d0     MOV	R0, R2               	MOV	R0, R2
0077b2   0009     IRET                     	IRET	
                                           func._int_fun1	.code
                                           _int_fun1	;Function start
                                           interrupt_service_routine_0x14
                                           _00093_DS_
                                           ;	.line	195; "../main.c"	}
                                           	IRET	
                                           func._main	.code
                                           _main	;Function start
                                           ;	.line	27; "../main.c"	SCLKCTL =0X78;//禁止输出时钟，选择内部高频作为时钟源，分频器1:1分频
007000   9878     MOV	R0, #0x78            	MOV	R0,# 0x78
007001   e100     MOVB	#0x00               	BANKSEL	_SCLKCTL
007002   5169     MOV	0x69, R0             	MOV	_SCLKCTL, R0
                                           ;	.line	28; "../main.c"	HFCKCTL =0x8E;//使能高频外设时钟，INTHF,16M
007003   988e     MOV	R0, #0x8e            	MOV	R0,# 0x8e
                                           	BANKSEL	_HFCKCTL
007004   516a     MOV	0x6a, R0             	MOV	_HFCKCTL, R0
                                           ;	.line	37; "../main.c"	PORT_Init();
007005   9f77     MOV	R7, #0x77            	TRAPPC1	_PORT_Init
007006   5f73     MOV	0x73, R7             	TRAPPC2	_PORT_Init
007007   e077     MOVP	#0x77               	PAGESEL	_PORT_Init
007008   d71d     CALL	#0x71d              	CALL	_PORT_Init
007009   9f70     MOV	R7, #0x70            	TRAPPC1	$+2
00700a   5f73     MOV	0x73, R7             	TRAPPC2	$+1
00700b   e070     MOVP	#0x70               	PAGESEL	$
                                           ;	.line	38; "../main.c"	Timer1_Init();
00700c   9f78     MOV	R7, #0x78            	TRAPPC1	_Timer1_Init
00700d   5f73     MOV	0x73, R7             	TRAPPC2	_Timer1_Init
00700e   e078     MOVP	#0x78               	PAGESEL	_Timer1_Init
00700f   d823     CALL	#0x823              	CALL	_Timer1_Init
007010   9f70     MOV	R7, #0x70            	TRAPPC1	$+2
007011   5f73     MOV	0x73, R7             	TRAPPC2	$+1
007012   e070     MOVP	#0x70               	PAGESEL	$
                                           ;	.line	39; "../main.c"	UART2_Init();
007013   9f78     MOV	R7, #0x78            	TRAPPC1	_UART2_Init
007014   5f73     MOV	0x73, R7             	TRAPPC2	_UART2_Init
007015   e078     MOVP	#0x78               	PAGESEL	_UART2_Init
007016   d833     CALL	#0x833              	CALL	_UART2_Init
007017   9f70     MOV	R7, #0x70            	TRAPPC1	$+2
007018   5f73     MOV	0x73, R7             	TRAPPC2	$+1
007019   e070     MOVP	#0x70               	PAGESEL	$
                                           ;	.line	40; "../main.c"	Init_ADC(0x01);
00701a   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	STK00
00701b   517e     MOV	0x7e, R0             	MOV	STK00, R0
00701c   9800     MOV	R0, #0               	MOV	R0,# 0x00
00701d   9f76     MOV	R7, #0x76            	TRAPPC1	_Init_ADC
00701e   5f73     MOV	0x73, R7             	TRAPPC2	_Init_ADC
00701f   e076     MOVP	#0x76               	PAGESEL	_Init_ADC
007020   d66d     CALL	#0x66d              	CALL	_Init_ADC
007021   9f70     MOV	R7, #0x70            	TRAPPC1	$+2
007022   5f73     MOV	0x73, R7             	TRAPPC2	$+1
007023   e070     MOVP	#0x70               	PAGESEL	$
                                           ;	.line	43; "../main.c"	if(CAN_IDFilterConfig(0,1,0x24C0,0x0600) == OK) //配置CAN的识别的数据帧是，标准帧ID 为0x116 ，0x126 ，0x136
007024   9800     MOV	R0, #0               	MOV	R0,# 0x00
007025   e100     MOVB	#0x00               	BANKSEL	STK08
007026   51a8     MOV	0xa8, R0             	MOV	STK08, R0
007027   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	STK07
007028   51a9     MOV	0xa9, R0             	MOV	STK07, R0
007029   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	STK06
00702a   5178     MOV	0x78, R0             	MOV	STK06, R0
00702b   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	STK05
00702c   5179     MOV	0x79, R0             	MOV	STK05, R0
00702d   98c0     MOV	R0, #0xc0            	MOV	R0,# 0xc0
                                           	BANKSEL	STK04
00702e   517a     MOV	0x7a, R0             	MOV	STK04, R0
00702f   9824     MOV	R0, #0x24            	MOV	R0,# 0x24
                                           	BANKSEL	STK03
007030   517b     MOV	0x7b, R0             	MOV	STK03, R0
007031   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	STK02
007032   517c     MOV	0x7c, R0             	MOV	STK02, R0
007033   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	STK01
007034   517d     MOV	0x7d, R0             	MOV	STK01, R0
007035   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	STK00
007036   517e     MOV	0x7e, R0             	MOV	STK00, R0
007037   9800     MOV	R0, #0               	MOV	R0,# 0x00
007038   9f71     MOV	R7, #0x71            	TRAPPC1	_CAN_IDFilterConfig
007039   5f73     MOV	0x73, R7             	TRAPPC2	_CAN_IDFilterConfig
00703a   e071     MOVP	#0x71               	PAGESEL	_CAN_IDFilterConfig
00703b   d1c5     CALL	#0x1c5              	CALL	_CAN_IDFilterConfig
00703c   9f70     MOV	R7, #0x70            	TRAPPC1	$+2
00703d   5f73     MOV	0x73, R7             	TRAPPC2	$+1
00703e   e070     MOVP	#0x70               	PAGESEL	$
00703f   e101     MOVB	#0x01               	BANKSEL	r0x102E
007040   5189     MOV	0x89, R0             	MOV	r0x102E, R0
                                           	BANKSEL	r0x102E
007041   0e89     MOVZ	R0, 0x89            	MOVZ	R0, r0x102E
007042   a801     XOR	R0, #0x1             	XOR	R0,# 0x01
007043   7a03     JB	0x3, 2                	JB	PSW, 2
007044   c055     JMP	#0x55                	JMP	_00002_DS_
                                           ;	.line	44; "../main.c"	CAN_Init(2,5,2,0,2);		//500K
007045   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
                                           	BANKSEL	STK03
007046   517b     MOV	0x7b, R0             	MOV	STK03, R0
007047   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	STK02
007048   517c     MOV	0x7c, R0             	MOV	STK02, R0
007049   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
                                           	BANKSEL	STK01
00704a   517d     MOV	0x7d, R0             	MOV	STK01, R0
00704b   9805     MOV	R0, #0x5             	MOV	R0,# 0x05
                                           	BANKSEL	STK00
00704c   517e     MOV	0x7e, R0             	MOV	STK00, R0
00704d   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
00704e   9f76     MOV	R7, #0x76            	TRAPPC1	_CAN_Init
00704f   5f73     MOV	0x73, R7             	TRAPPC2	_CAN_Init
007050   e076     MOVP	#0x76               	PAGESEL	_CAN_Init
007051   d6b3     CALL	#0x6b3              	CALL	_CAN_Init
007052   9f70     MOV	R7, #0x70            	TRAPPC1	$+2
007053   5f73     MOV	0x73, R7             	TRAPPC2	$+1
007054   e070     MOVP	#0x70               	PAGESEL	$
                                           _00002_DS_
                                           ;	.line	48; "../main.c"	PUIE = 1;
007055   e100     MOVB	#0x00               	BANKSEL	_INTCTL_bits
007056   6e0b     SET	0xb, 6               	SET	_INTCTL_bits, 6
                                           ;	.line	49; "../main.c"	AIE = 1;
                                           	BANKSEL	_INTCTL_bits
007057   6f0b     SET	0xb, 7               	SET	_INTCTL_bits, 7
                                           ;	.line	50; "../main.c"	delay_ms(300);
007058   982c     MOV	R0, #0x2c            	MOV	R0,# 0x2c
                                           	BANKSEL	STK00
007059   517e     MOV	0x7e, R0             	MOV	STK00, R0
00705a   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
00705b   9f77     MOV	R7, #0x77            	TRAPPC1	_delay_ms
00705c   5f73     MOV	0x73, R7             	TRAPPC2	_delay_ms
00705d   e077     MOVP	#0x77               	PAGESEL	_delay_ms
00705e   d749     CALL	#0x749              	CALL	_delay_ms
00705f   9f70     MOV	R7, #0x70            	TRAPPC1	$+2
007060   5f73     MOV	0x73, R7             	TRAPPC2	$+1
007061   e070     MOVP	#0x70               	PAGESEL	$
                                           _00027_DS_
                                           ;	.line	53; "../main.c"	keyl_detection();
007062   9f76     MOV	R7, #0x76            	TRAPPC1	_keyl_detection
007063   5f73     MOV	0x73, R7             	TRAPPC2	_keyl_detection
007064   e076     MOVP	#0x76               	PAGESEL	_keyl_detection
007065   d626     CALL	#0x626              	CALL	_keyl_detection
007066   9f70     MOV	R7, #0x70            	TRAPPC1	$+2
007067   5f73     MOV	0x73, R7             	TRAPPC2	$+1
007068   e070     MOVP	#0x70               	PAGESEL	$
007069   0000     NOP                      	NOP 
00706a   0000     NOP                      	NOP 
00706b   0000     NOP                      	NOP 
00706c   0000     NOP                      	NOP 
                                           ;	.line	58; "../main.c"	keyr_detection();
00706d   9f75     MOV	R7, #0x75            	TRAPPC1	_keyr_detection
00706e   5f73     MOV	0x73, R7             	TRAPPC2	_keyr_detection
00706f   e075     MOVP	#0x75               	PAGESEL	_keyr_detection
007070   d5df     CALL	#0x5df              	CALL	_keyr_detection
007071   9f70     MOV	R7, #0x70            	TRAPPC1	$+2
007072   5f73     MOV	0x73, R7             	TRAPPC2	$+1
007073   e070     MOVP	#0x70               	PAGESEL	$
                                           ;	.line	62; "../main.c"	if(Time_count>=100)			//500ms
007074   9800     MOV	R0, #0               	MOV	R0,# 0x00
007075   e100     MOVB	#0x00               	BANKSEL	_Time_count
007076   38b3     SUB	R0, 0xb3             	SUB	R0, (_Time_count + 1)
007077   7a03     JB	0x3, 2                	JB	PSW, 2
007078   c07b     JMP	#0x7b                	JMP	_00059_DS_
007079   9864     MOV	R0, #0x64            	MOV	R0,# 0x64
                                           	BANKSEL	_Time_count
00707a   38b2     SUB	R0, 0xb2             	SUB	R0, _Time_count
                                           _00059_DS_
00707b   7803     JB	0x3, 0                	JB	PSW, 0
00707c   c0ef     JMP	#0xef                	JMP	_00018_DS_
                                           ;	.line	64; "../main.c"	Time_count=0;
                                           	BANKSEL	_Time_count
00707d   03b2     CLR	0xb2                 	CLR	_Time_count
                                           	BANKSEL	_Time_count
00707e   03b3     CLR	0xb3                 	CLR	(_Time_count + 1)
                                           ;	.line	67; "../main.c"	Status_fram =0;
00707f   e101     MOVB	#0x01               	BANKSEL	_Status_fram
007080   0380     CLR	0x80                 	CLR	_Status_fram
                                           ;	.line	68; "../main.c"	Data_fram =0;
                                           	BANKSEL	_Data_fram
007081   038b     CLR	0x8b                 	CLR	_Data_fram
                                           ;	.line	69; "../main.c"	Fram_lenth =8;
007082   9808     MOV	R0, #0x8             	MOV	R0,# 0x08
                                           	BANKSEL	_Fram_lenth
007083   518a     MOV	0x8a, R0             	MOV	_Fram_lenth, R0
                                           ;	.line	70; "../main.c"	ID_fram =0x243;
007084   9843     MOV	R0, #0x43            	MOV	R0,# 0x43
007085   e100     MOVB	#0x00               	BANKSEL	_ID_fram
007086   51b6     MOV	0xb6, R0             	MOV	_ID_fram, R0
007087   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
                                           	BANKSEL	_ID_fram
007088   51b7     MOV	0xb7, R0             	MOV	(_ID_fram + 1), R0
                                           ;	.line	73; "../main.c"	while(!TXBSTA)//等待CPU可以访问发送缓冲器
007089   e101     MOVB	#0x01               	BANKSEL	r0x102E
00708a   0389     CLR	0x89                 	CLR	r0x102E
                                           	BANKSEL	r0x102F
00708b   0388     CLR	0x88                 	CLR	r0x102F
                                           _00005_DS_
00708c   e105     MOVB	#0x05               	BANKSEL	_CANSTA_bits
00708d   723f     JNB	0x3f, 2              	JNB	_CANSTA_bits, 2
00708e   c0a2     JMP	#0xa2                	JMP	_00007_DS_
                                           ;	.line	75; "../main.c"	P3LR0 =!P3LR0;
00708f   e100     MOVB	#0x00               	BANKSEL	_P3LR_bits
007090   7848     JB	0x48, 0               	JB	_P3LR_bits, 0
007091   c094     JMP	#0x94                	JMP	_00060_DS_
                                           	BANKSEL	_P3LR_bits
007092   6048     CLR	0x48, 0              	CLR	_P3LR_bits, 0
007093   c095     JMP	#0x95                	JMP	_00061_DS_
                                           _00060_DS_
                                           	BANKSEL	_P3LR_bits
007094   6848     SET	0x48, 0              	SET	_P3LR_bits, 0
                                           _00061_DS_
                                           ;	.line	76; "../main.c"	if(++Delay_Count>0xFE0)
007095   e101     MOVB	#0x01               	BANKSEL	r0x102E
007096   0b89     INC	0x89                 	INC	r0x102E
007097   7a03     JB	0x3, 2                	JB	PSW, 2
007098   c09a     JMP	#0x9a                	JMP	_00095_DS_
                                           	BANKSEL	r0x102F
007099   0b88     INC	0x88                 	INC	r0x102F
                                           _00095_DS_
00709a   980f     MOV	R0, #0xf             	MOV	R0,# 0x0f
                                           	BANKSEL	r0x102F
00709b   3888     SUB	R0, 0x88             	SUB	R0, r0x102F
00709c   7a03     JB	0x3, 2                	JB	PSW, 2
00709d   c0a0     JMP	#0xa0                	JMP	_00062_DS_
00709e   98e1     MOV	R0, #0xe1            	MOV	R0,# 0xe1
                                           	BANKSEL	r0x102E
00709f   3889     SUB	R0, 0x89             	SUB	R0, r0x102E
                                           _00062_DS_
0070a0   7803     JB	0x3, 0                	JB	PSW, 0
0070a1   c08c     JMP	#0x8c                	JMP	_00005_DS_
                                           _00007_DS_
                                           ;	.line	80; "../main.c"	CANTXINF = (Status_fram<<7)|(Data_fram<<6)|Fram_lenth;
0070a2   9808     MOV	R0, #0x8             	MOV	R0,# 0x08
0070a3   e105     MOVB	#0x05               	BANKSEL	_CANTXINF
0070a4   5130     MOV	0x30, R0             	MOV	_CANTXINF, R0
                                           ;	.line	83; "../main.c"	ID_fram <<=5;
0070a5   9805     MOV	R0, #0x5             	MOV	R0,# 0x05
0070a6   ff10     INC	R0                   	INC	R0
0070a7   c0ac     JMP	#0xac                	JMP	_00064_DS_
                                           _00063_DS_
0070a8   6003     CLR	0x3, 0               	CLR	PSW, 0
0070a9   e100     MOVB	#0x00               	BANKSEL	_ID_fram
0070aa   13b6     RLC	0xb6                 	RLC	_ID_fram
                                           	BANKSEL	_ID_fram
0070ab   13b7     RLC	0xb7                 	RLC	(_ID_fram + 1)
                                           _00064_DS_
0070ac   ff58     DECJZ	R0                 	DECJZ	R0
0070ad   c0a8     JMP	#0xa8                	JMP	_00063_DS_
                                           ;	.line	84; "../main.c"	CANTXID0=ID_fram >> 8;
0070ae   e100     MOVB	#0x00               	BANKSEL	_ID_fram
0070af   0eb7     MOVZ	R0, 0xb7            	MOVZ	R0, (_ID_fram + 1)
0070b0   e101     MOVB	#0x01               	BANKSEL	r0x102E
0070b1   5189     MOV	0x89, R0             	MOV	r0x102E, R0
                                           	BANKSEL	r0x102F
0070b2   0388     CLR	0x88                 	CLR	r0x102F
                                           	BANKSEL	r0x102E
0070b3   0e89     MOVZ	R0, 0x89            	MOVZ	R0, r0x102E
0070b4   e105     MOVB	#0x05               	BANKSEL	_CANTXID0
0070b5   5131     MOV	0x31, R0             	MOV	_CANTXID0, R0
                                           ;	.line	85; "../main.c"	CANTXID1=(unsigned char)ID_fram;
0070b6   e100     MOVB	#0x00               	BANKSEL	_ID_fram
0070b7   0eb6     MOVZ	R0, 0xb6            	MOVZ	R0, _ID_fram
0070b8   e105     MOVB	#0x05               	BANKSEL	_CANTXID1
0070b9   5132     MOV	0x32, R0             	MOV	_CANTXID1, R0
                                           ;	.line	88; "../main.c"	CANTXID2=TX_Data[0];//adc_read
0070ba   e100     MOVB	#0x00               	BANKSEL	_TX_Data
0070bb   0e95     MOVZ	R0, 0x95            	MOVZ	R0,  (_TX_Data + 0)
0070bc   e105     MOVB	#0x05               	BANKSEL	_CANTXID2
0070bd   5133     MOV	0x33, R0             	MOV	_CANTXID2, R0
                                           ;	.line	89; "../main.c"	CANTXID3=TX_Data[1];
0070be   e100     MOVB	#0x00               	BANKSEL	_TX_Data
0070bf   0e96     MOVZ	R0, 0x96            	MOVZ	R0,  (_TX_Data + 1)
0070c0   e105     MOVB	#0x05               	BANKSEL	_CANTXID3
0070c1   5134     MOV	0x34, R0             	MOV	_CANTXID3, R0
                                           ;	.line	90; "../main.c"	CANTXDT0=TX_Data[2];
0070c2   e100     MOVB	#0x00               	BANKSEL	_TX_Data
0070c3   0e97     MOVZ	R0, 0x97            	MOVZ	R0,  (_TX_Data + 2)
0070c4   e105     MOVB	#0x05               	BANKSEL	_CANTXDT0
0070c5   5135     MOV	0x35, R0             	MOV	_CANTXDT0, R0
                                           ;	.line	91; "../main.c"	CANTXDT1=TX_Data[3];//Adc_read() TX_Data[3]
0070c6   e100     MOVB	#0x00               	BANKSEL	_TX_Data
0070c7   0e98     MOVZ	R0, 0x98            	MOVZ	R0,  (_TX_Data + 3)
0070c8   e105     MOVB	#0x05               	BANKSEL	_CANTXDT1
0070c9   5136     MOV	0x36, R0             	MOV	_CANTXDT1, R0
                                           ;	.line	92; "../main.c"	CANTXDT2=TX_Data[4];
0070ca   e100     MOVB	#0x00               	BANKSEL	_TX_Data
0070cb   0e99     MOVZ	R0, 0x99            	MOVZ	R0,  (_TX_Data + 4)
0070cc   e105     MOVB	#0x05               	BANKSEL	_CANTXDT2
0070cd   5137     MOV	0x37, R0             	MOV	_CANTXDT2, R0
                                           ;	.line	93; "../main.c"	CANTXDT3=TX_Data[5];
0070ce   e100     MOVB	#0x00               	BANKSEL	_TX_Data
0070cf   0e9a     MOVZ	R0, 0x9a            	MOVZ	R0,  (_TX_Data + 5)
0070d0   e105     MOVB	#0x05               	BANKSEL	_CANTXDT3
0070d1   5138     MOV	0x38, R0             	MOV	_CANTXDT3, R0
                                           ;	.line	94; "../main.c"	CANTXDT4=TX_Data[6];
0070d2   e100     MOVB	#0x00               	BANKSEL	_TX_Data
0070d3   0e9b     MOVZ	R0, 0x9b            	MOVZ	R0,  (_TX_Data + 6)
0070d4   e105     MOVB	#0x05               	BANKSEL	_CANTXDT4
0070d5   5139     MOV	0x39, R0             	MOV	_CANTXDT4, R0
                                           ;	.line	95; "../main.c"	CANTXDT5=TX_Data[7];
0070d6   e100     MOVB	#0x00               	BANKSEL	_TX_Data
0070d7   0e9c     MOVZ	R0, 0x9c            	MOVZ	R0,  (_TX_Data + 7)
0070d8   e105     MOVB	#0x05               	BANKSEL	_CANTXDT5
0070d9   513a     MOV	0x3a, R0             	MOV	_CANTXDT5, R0
                                           ;	.line	100; "../main.c"	CANCMR = 0x03;
0070da   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	_CANCMR
0070db   513e     MOV	0x3e, R0             	MOV	_CANCMR, R0
                                           ;	.line	103; "../main.c"	while(!TCSTA)
0070dc   e101     MOVB	#0x01               	BANKSEL	r0x102E
0070dd   0389     CLR	0x89                 	CLR	r0x102E
                                           	BANKSEL	r0x102F
0070de   0388     CLR	0x88                 	CLR	r0x102F
                                           _00014_DS_
0070df   e105     MOVB	#0x05               	BANKSEL	_CANSTA_bits
0070e0   733f     JNB	0x3f, 3              	JNB	_CANSTA_bits, 3
0070e1   c0ef     JMP	#0xef                	JMP	_00018_DS_
                                           ;	.line	105; "../main.c"	if(++Delay_Count>0xFE0)
0070e2   e101     MOVB	#0x01               	BANKSEL	r0x102E
0070e3   0b89     INC	0x89                 	INC	r0x102E
0070e4   7a03     JB	0x3, 2                	JB	PSW, 2
0070e5   c0e7     JMP	#0xe7                	JMP	_00096_DS_
                                           	BANKSEL	r0x102F
0070e6   0b88     INC	0x88                 	INC	r0x102F
                                           _00096_DS_
0070e7   980f     MOV	R0, #0xf             	MOV	R0,# 0x0f
                                           	BANKSEL	r0x102F
0070e8   3888     SUB	R0, 0x88             	SUB	R0, r0x102F
0070e9   7a03     JB	0x3, 2                	JB	PSW, 2
0070ea   c0ed     JMP	#0xed                	JMP	_00065_DS_
0070eb   98e1     MOV	R0, #0xe1            	MOV	R0,# 0xe1
                                           	BANKSEL	r0x102E
0070ec   3889     SUB	R0, 0x89             	SUB	R0, r0x102E
                                           _00065_DS_
0070ed   7803     JB	0x3, 0                	JB	PSW, 0
0070ee   c0df     JMP	#0xdf                	JMP	_00014_DS_
                                           _00018_DS_
                                           ;	.line	113; "../main.c"	if(CANRXIF)
0070ef   e105     MOVB	#0x05               	BANKSEL	_CANIF_bits
0070f0   7819     JB	0x19, 0               	JB	_CANIF_bits, 0
0070f1   c062     JMP	#0x62                	JMP	_00027_DS_
                                           ;	.line	116; "../main.c"	if(can_data_hand<8)
0070f2   9808     MOV	R0, #0x8             	MOV	R0,# 0x08
0070f3   e101     MOVB	#0x01               	BANKSEL	_can_data_hand
0070f4   3881     SUB	R0, 0x81             	SUB	R0, _can_data_hand
0070f5   7003     JNB	0x3, 0               	JNB	PSW, 0
0070f6   c114     JMP	#0x114               	JMP	_00020_DS_
                                           ;	.line	118; "../main.c"	can_point =0x1C80 + can_data_hand * 0x10;
0070f7   9810     MOV	R0, #0x10            	MOV	R0,# 0x10
                                           	BANKSEL	STK02
0070f8   517c     MOV	0x7c, R0             	MOV	STK02, R0
0070f9   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	STK01
0070fa   517d     MOV	0x7d, R0             	MOV	STK01, R0
                                           	BANKSEL	_can_data_hand
0070fb   0e81     MOVZ	R0, 0x81            	MOVZ	R0, _can_data_hand
                                           	BANKSEL	STK00
0070fc   517e     MOV	0x7e, R0             	MOV	STK00, R0
0070fd   9800     MOV	R0, #0               	MOV	R0,# 0x00
0070fe   9f78     MOV	R7, #0x78            	TRAPPC1	__hmulint
0070ff   5f73     MOV	0x73, R7             	TRAPPC2	__hmulint
007100   e078     MOVP	#0x78               	PAGESEL	__hmulint
007101   d811     CALL	#0x811              	CALL	__hmulint
007102   9f71     MOV	R7, #0x71            	TRAPPC1	$+2
007103   5f73     MOV	0x73, R7             	TRAPPC2	$+1
007104   e071     MOVP	#0x71               	PAGESEL	$
007105   e101     MOVB	#0x01               	BANKSEL	r0x102F
007106   5188     MOV	0x88, R0             	MOV	r0x102F, R0
                                           	BANKSEL	STK00
007107   507e     MOV	R0, 0x7e             	MOV	R0, STK00
                                           	BANKSEL	r0x102E
007108   5189     MOV	0x89, R0             	MOV	r0x102E, R0
007109   9880     MOV	R0, #0x80            	MOV	R0,# 0x80
                                           	BANKSEL	r0x102E
00710a   2189     ADD	0x89, R0             	ADD	r0x102E, R0
00710b   981c     MOV	R0, #0x1c            	MOV	R0,# 0x1c
00710c   7003     JNB	0x3, 0               	JNB	PSW, 0
00710d   981d     MOV	R0, #0x1d            	MOV	R0,# 0x1d
                                           	BANKSEL	r0x102F
00710e   2188     ADD	0x88, R0             	ADD	r0x102F, R0
                                           	BANKSEL	r0x102E
00710f   0e89     MOVZ	R0, 0x89            	MOVZ	R0, r0x102E
                                           	BANKSEL	r0x1030
007110   5187     MOV	0x87, R0             	MOV	r0x1030, R0
                                           	BANKSEL	r0x102F
007111   0e88     MOVZ	R0, 0x88            	MOVZ	R0, r0x102F
                                           	BANKSEL	r0x1031
007112   5186     MOV	0x86, R0             	MOV	r0x1031, R0
007113   c138     JMP	#0x138               	JMP	_00021_DS_
                                           _00020_DS_
                                           ;	.line	122; "../main.c"	can_point =0x1D80+(can_data_hand-8)*0x10;
                                           	BANKSEL	_can_data_hand
007114   0e81     MOVZ	R0, 0x81            	MOVZ	R0, _can_data_hand
                                           	BANKSEL	r0x102E
007115   5189     MOV	0x89, R0             	MOV	r0x102E, R0
                                           	BANKSEL	r0x102F
007116   0388     CLR	0x88                 	CLR	r0x102F
007117   98f8     MOV	R0, #0xf8            	MOV	R0,# 0xf8
                                           	BANKSEL	r0x102E
007118   2189     ADD	0x89, R0             	ADD	r0x102E, R0
007119   7003     JNB	0x3, 0               	JNB	PSW, 0
00711a   c11c     JMP	#0x11c               	JMP	_00097_DS_
                                           	BANKSEL	r0x102F
00711b   0788     DEC	0x88                 	DEC	r0x102F
                                           _00097_DS_
                                           	BANKSEL	r0x102E
00711c   0e89     MOVZ	R0, 0x89            	MOVZ	R0, r0x102E
                                           	BANKSEL	r0x1032
00711d   5185     MOV	0x85, R0             	MOV	r0x1032, R0
                                           	BANKSEL	r0x102F
00711e   0e88     MOVZ	R0, 0x88            	MOVZ	R0, r0x102F
                                           	BANKSEL	r0x1033
00711f   5184     MOV	0x84, R0             	MOV	r0x1033, R0
007120   9804     MOV	R0, #0x4             	MOV	R0,# 0x04
007121   ff10     INC	R0                   	INC	R0
007122   c127     JMP	#0x127               	JMP	_00068_DS_
                                           _00067_DS_
007123   6003     CLR	0x3, 0               	CLR	PSW, 0
007124   e101     MOVB	#0x01               	BANKSEL	r0x1032
007125   1385     RLC	0x85                 	RLC	r0x1032
                                           	BANKSEL	r0x1033
007126   1384     RLC	0x84                 	RLC	r0x1033
                                           _00068_DS_
007127   ff58     DECJZ	R0                 	DECJZ	R0
007128   c123     JMP	#0x123               	JMP	_00067_DS_
007129   9880     MOV	R0, #0x80            	MOV	R0,# 0x80
                                           	BANKSEL	r0x1032
00712a   2085     ADD	R0, 0x85             	ADD	R0, r0x1032
                                           	BANKSEL	r0x102E
00712b   5189     MOV	0x89, R0             	MOV	r0x102E, R0
00712c   981d     MOV	R0, #0x1d            	MOV	R0,# 0x1d
                                           	BANKSEL	r0x102F
00712d   5188     MOV	0x88, R0             	MOV	r0x102F, R0
                                           	BANKSEL	r0x1033
00712e   0e84     MOVZ	R0, 0x84            	MOVZ	R0, r0x1033
00712f   7003     JNB	0x3, 0               	JNB	PSW, 0
007130   ff10     INC	R0                   	INC	R0
007131   7203     JNB	0x3, 2               	JNB	PSW, 2
007132   c134     JMP	#0x134               	JMP	_00098_DS_
                                           	BANKSEL	r0x102F
007133   2188     ADD	0x88, R0             	ADD	r0x102F, R0
                                           _00098_DS_
                                           	BANKSEL	r0x102E
007134   0e89     MOVZ	R0, 0x89            	MOVZ	R0, r0x102E
                                           	BANKSEL	r0x1030
007135   5187     MOV	0x87, R0             	MOV	r0x1030, R0
                                           	BANKSEL	r0x102F
007136   0e88     MOVZ	R0, 0x88            	MOVZ	R0, r0x102F
                                           	BANKSEL	r0x1031
007137   5186     MOV	0x86, R0             	MOV	r0x1031, R0
                                           _00021_DS_
                                           ;	.line	124; "../main.c"	can_data_hand++;//指针+1
                                           	BANKSEL	_can_data_hand
007138   0b81     INC	0x81                 	INC	_can_data_hand
                                           ;	.line	125; "../main.c"	if(can_data_hand==16)//若指针指向15以上，返回0
                                           	BANKSEL	_can_data_hand
007139   0e81     MOVZ	R0, 0x81            	MOVZ	R0, _can_data_hand
                                           ;	.line	127; "../main.c"	can_data_hand=0;
00713a   a810     XOR	R0, #0x10            	XOR	R0,# 0x10
                                           ;	.line	130; "../main.c"	for(i=0;i<13;i++)
00713b   7a03     JB	0x3, 2                	JB	PSW, 2
00713c   c13e     JMP	#0x13e               	JMP	_00099_DS_
                                           	BANKSEL	_can_data_hand
00713d   0381     CLR	0x81                 	CLR	_can_data_hand
                                           _00099_DS_
                                           	BANKSEL	r0x102E
00713e   0389     CLR	0x89                 	CLR	r0x102E
                                           _00029_DS_
00713f   980d     MOV	R0, #0xd             	MOV	R0,# 0x0d
                                           	BANKSEL	r0x102E
007140   3889     SUB	R0, 0x89             	SUB	R0, r0x102E
007141   7003     JNB	0x3, 0               	JNB	PSW, 0
007142   c166     JMP	#0x166               	JMP	_00032_DS_
                                           ;	.line	132; "../main.c"	CAN_Rev_BUF[i]=*((unsigned char *)(can_point+i));
                                           	BANKSEL	r0x102E
007143   5089     MOV	R0, 0x89             	MOV	R0, r0x102E
007144   8080     ADD	R0, #0x80            	ADD	R0,# (_CAN_Rev_BUF + 0)
                                           	BANKSEL	r0x102F
007145   5188     MOV	0x88, R0             	MOV	r0x102F, R0
                                           	BANKSEL	r0x102E
007146   0e89     MOVZ	R0, 0x89            	MOVZ	R0, r0x102E
                                           	BANKSEL	r0x1033
007147   5184     MOV	0x84, R0             	MOV	r0x1033, R0
                                           	BANKSEL	r0x1034
007148   0383     CLR	0x83                 	CLR	r0x1034
                                           	BANKSEL	r0x1030
007149   5087     MOV	R0, 0x87             	MOV	R0, r0x1030
                                           	BANKSEL	r0x1033
00714a   2184     ADD	0x84, R0             	ADD	r0x1033, R0
                                           	BANKSEL	r0x1031
00714b   0e86     MOVZ	R0, 0x86            	MOVZ	R0, r0x1031
00714c   7003     JNB	0x3, 0               	JNB	PSW, 0
00714d   ff10     INC	R0                   	INC	R0
00714e   7203     JNB	0x3, 2               	JNB	PSW, 2
00714f   c151     JMP	#0x151               	JMP	_00100_DS_
                                           	BANKSEL	r0x1034
007150   2183     ADD	0x83, R0             	ADD	r0x1034, R0
                                           _00100_DS_
                                           	BANKSEL	r0x1033
007151   0e84     MOVZ	R0, 0x84            	MOVZ	R0, r0x1033
                                           	BANKSEL	STK01
007152   517d     MOV	0x7d, R0             	MOV	STK01, R0
                                           	BANKSEL	r0x1034
007153   0e83     MOVZ	R0, 0x83            	MOVZ	R0, r0x1034
                                           	BANKSEL	STK00
007154   517e     MOV	0x7e, R0             	MOV	STK00, R0
007155   9800     MOV	R0, #0               	MOV	R0,# 0x00
007156   9f77     MOV	R7, #0x77            	TRAPPC1	__gptrget1
007157   5f73     MOV	0x73, R7             	TRAPPC2	__gptrget1
007158   e077     MOVP	#0x77               	PAGESEL	__gptrget1
007159   d7eb     CALL	#0x7eb              	CALL	__gptrget1
00715a   9f71     MOV	R7, #0x71            	TRAPPC1	$+2
00715b   5f73     MOV	0x73, R7             	TRAPPC2	$+1
00715c   e071     MOVP	#0x71               	PAGESEL	$
00715d   e101     MOVB	#0x01               	BANKSEL	r0x1033
00715e   5184     MOV	0x84, R0             	MOV	r0x1033, R0
                                           	BANKSEL	r0x1033
00715f   0e84     MOVZ	R0, 0x84            	MOVZ	R0, r0x1033
                                           	BANKSEL	r0x102F
007160   5288     MOV	R1, 0x88             	MOV	R1, r0x102F
007161   e100     MOVB	#0x00               	BANKSEL	_CAN_Rev_BUF
007162   f741     ST	[R1], R0              	ST	[R1], R0
                                           ;	.line	130; "../main.c"	for(i=0;i<13;i++)
007163   e101     MOVB	#0x01               	BANKSEL	r0x102E
007164   0b89     INC	0x89                 	INC	r0x102E
007165   c13f     JMP	#0x13f               	JMP	_00029_DS_
                                           _00032_DS_
                                           ;	.line	135; "../main.c"	Status_fram =(CAN_Rev_BUF[0]&0x80) >>7; //0是标准帧
007166   e100     MOVB	#0x00               	BANKSEL	_CAN_Rev_BUF
007167   0e80     MOVZ	R0, 0x80            	MOVZ	R0,  (_CAN_Rev_BUF + 0)
007168   e101     MOVB	#0x01               	BANKSEL	r0x102E
007169   5189     MOV	0x89, R0             	MOV	r0x102E, R0
00716a   9880     MOV	R0, #0x80            	MOV	R0,# 0x80
                                           	BANKSEL	r0x102E
00716b   2989     AND	0x89, R0             	AND	r0x102E, R0
                                           	BANKSEL	r0x102E
00716c   1289     RLCR	0x89                	RLCR	r0x102E
                                           	BANKSEL	_Status_fram
00716d   0380     CLR	0x80                 	CLR	_Status_fram
                                           	BANKSEL	_Status_fram
00716e   1380     RLC	0x80                 	RLC	_Status_fram
                                           ;	.line	136; "../main.c"	Data_fram =(CAN_Rev_BUF[0]&0x40) >>6; //0是数据帧
00716f   e100     MOVB	#0x00               	BANKSEL	_CAN_Rev_BUF
007170   0e80     MOVZ	R0, 0x80            	MOVZ	R0,  (_CAN_Rev_BUF + 0)
007171   e101     MOVB	#0x01               	BANKSEL	r0x102E
007172   5189     MOV	0x89, R0             	MOV	r0x102E, R0
007173   9840     MOV	R0, #0x40            	MOV	R0,# 0x40
                                           	BANKSEL	r0x102E
007174   2989     AND	0x89, R0             	AND	r0x102E, R0
                                           	BANKSEL	r0x102E
007175   4089     SWAPR	R0, 0x89           	SWAPR	R0, r0x102E
007176   880f     AND	R0, #0xf             	AND	R0,# 0x0f
                                           	BANKSEL	_Data_fram
007177   518b     MOV	0x8b, R0             	MOV	_Data_fram, R0
007178   6003     CLR	0x3, 0               	CLR	PSW, 0
                                           	BANKSEL	_Data_fram
007179   118b     RRC	0x8b                 	RRC	_Data_fram
00717a   6003     CLR	0x3, 0               	CLR	PSW, 0
                                           	BANKSEL	_Data_fram
00717b   118b     RRC	0x8b                 	RRC	_Data_fram
                                           ;	.line	137; "../main.c"	Fram_lenth =CAN_Rev_BUF[0]&0x0F; //数据长度
00717c   e100     MOVB	#0x00               	BANKSEL	_CAN_Rev_BUF
00717d   0e80     MOVZ	R0, 0x80            	MOVZ	R0,  (_CAN_Rev_BUF + 0)
00717e   e101     MOVB	#0x01               	BANKSEL	r0x102E
00717f   5189     MOV	0x89, R0             	MOV	r0x102E, R0
007180   980f     MOV	R0, #0xf             	MOV	R0,# 0x0f
                                           	BANKSEL	r0x102E
007181   2889     AND	R0, 0x89             	AND	R0, r0x102E
                                           	BANKSEL	_Fram_lenth
007182   518a     MOV	0x8a, R0             	MOV	_Fram_lenth, R0
                                           ;	.line	139; "../main.c"	ID_fram =CAN_Rev_BUF[1];
007183   e100     MOVB	#0x00               	BANKSEL	_CAN_Rev_BUF
007184   0e81     MOVZ	R0, 0x81            	MOVZ	R0,  (_CAN_Rev_BUF + 1)
007185   e101     MOVB	#0x01               	BANKSEL	r0x102E
007186   5189     MOV	0x89, R0             	MOV	r0x102E, R0
007187   e100     MOVB	#0x00               	BANKSEL	_ID_fram
007188   51b6     MOV	0xb6, R0             	MOV	_ID_fram, R0
                                           	BANKSEL	_ID_fram
007189   03b7     CLR	0xb7                 	CLR	(_ID_fram + 1)
                                           ;	.line	140; "../main.c"	ID_fram <<=8;
                                           	BANKSEL	_ID_fram
00718a   0eb6     MOVZ	R0, 0xb6            	MOVZ	R0, _ID_fram
                                           	BANKSEL	_ID_fram
00718b   51b7     MOV	0xb7, R0             	MOV	(_ID_fram + 1), R0
                                           	BANKSEL	_ID_fram
00718c   03b6     CLR	0xb6                 	CLR	_ID_fram
                                           ;	.line	141; "../main.c"	ID_fram += CAN_Rev_BUF[2];
                                           	BANKSEL	_CAN_Rev_BUF
00718d   0e82     MOVZ	R0, 0x82            	MOVZ	R0,  (_CAN_Rev_BUF + 2)
00718e   e101     MOVB	#0x01               	BANKSEL	r0x102E
00718f   5189     MOV	0x89, R0             	MOV	r0x102E, R0
                                           	BANKSEL	r0x102E
007190   0e89     MOVZ	R0, 0x89            	MOVZ	R0, r0x102E
                                           	BANKSEL	r0x102F
007191   5188     MOV	0x88, R0             	MOV	r0x102F, R0
                                           	BANKSEL	r0x1030
007192   0387     CLR	0x87                 	CLR	r0x1030
                                           	BANKSEL	r0x102F
007193   5088     MOV	R0, 0x88             	MOV	R0, r0x102F
007194   e100     MOVB	#0x00               	BANKSEL	_ID_fram
007195   21b6     ADD	0xb6, R0             	ADD	_ID_fram, R0
007196   9800     MOV	R0, #0               	MOV	R0,# 0x00
007197   7003     JNB	0x3, 0               	JNB	PSW, 0
007198   ff10     INC	R0                   	INC	R0
007199   7203     JNB	0x3, 2               	JNB	PSW, 2
00719a   c19c     JMP	#0x19c               	JMP	_00101_DS_
                                           	BANKSEL	_ID_fram
00719b   21b7     ADD	0xb7, R0             	ADD	(_ID_fram + 1), R0
                                           _00101_DS_
                                           ;	.line	142; "../main.c"	ID_fram >>=5; //数据长度
00719c   9805     MOV	R0, #0x5             	MOV	R0,# 0x05
00719d   ff10     INC	R0                   	INC	R0
00719e   c1a3     JMP	#0x1a3               	JMP	_00071_DS_
                                           _00070_DS_
00719f   6003     CLR	0x3, 0               	CLR	PSW, 0
0071a0   e100     MOVB	#0x00               	BANKSEL	_ID_fram
0071a1   11b7     RRC	0xb7                 	RRC	(_ID_fram + 1)
                                           	BANKSEL	_ID_fram
0071a2   11b6     RRC	0xb6                 	RRC	_ID_fram
                                           _00071_DS_
0071a3   ff58     DECJZ	R0                 	DECJZ	R0
0071a4   c19f     JMP	#0x19f               	JMP	_00070_DS_
                                           ;	.line	143; "../main.c"	for (i =0;i<8;i++)
0071a5   e101     MOVB	#0x01               	BANKSEL	r0x102E
0071a6   0389     CLR	0x89                 	CLR	r0x102E
                                           _00033_DS_
0071a7   9808     MOV	R0, #0x8             	MOV	R0,# 0x08
                                           	BANKSEL	r0x102E
0071a8   3889     SUB	R0, 0x89             	SUB	R0, r0x102E
0071a9   7003     JNB	0x3, 0               	JNB	PSW, 0
0071aa   c1bf     JMP	#0x1bf               	JMP	_00036_DS_
                                           ;	.line	145; "../main.c"	Data[i]=CAN_Rev_BUF[i+3];
                                           	BANKSEL	r0x102E
0071ab   5089     MOV	R0, 0x89             	MOV	R0, r0x102E
0071ac   809d     ADD	R0, #0x9d            	ADD	R0,# (_Data + 0)
                                           	BANKSEL	r0x102F
0071ad   5188     MOV	0x88, R0             	MOV	r0x102F, R0
0071ae   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	r0x102E
0071af   2089     ADD	R0, 0x89             	ADD	R0, r0x102E
                                           	BANKSEL	r0x1031
0071b0   5186     MOV	0x86, R0             	MOV	r0x1031, R0
0071b1   9880     MOV	R0, #0x80            	MOV	R0,# (_CAN_Rev_BUF + 0)
                                           	BANKSEL	r0x1031
0071b2   2186     ADD	0x86, R0             	ADD	r0x1031, R0
                                           	BANKSEL	r0x1031
0071b3   5286     MOV	R1, 0x86             	MOV	R1, r0x1031
0071b4   e100     MOVB	#0x00               	BANKSEL	_CAN_Rev_BUF
0071b5   f708     LD	R0, [R1]              	LD	R0, [R1]
0071b6   e101     MOVB	#0x01               	BANKSEL	r0x1033
0071b7   5184     MOV	0x84, R0             	MOV	r0x1033, R0
                                           	BANKSEL	r0x1033
0071b8   0e84     MOVZ	R0, 0x84            	MOVZ	R0, r0x1033
                                           	BANKSEL	r0x102F
0071b9   5288     MOV	R1, 0x88             	MOV	R1, r0x102F
0071ba   e100     MOVB	#0x00               	BANKSEL	_Data
0071bb   f741     ST	[R1], R0              	ST	[R1], R0
                                           ;	.line	143; "../main.c"	for (i =0;i<8;i++)
0071bc   e101     MOVB	#0x01               	BANKSEL	r0x102E
0071bd   0b89     INC	0x89                 	INC	r0x102E
0071be   c1a7     JMP	#0x1a7               	JMP	_00033_DS_
                                           _00036_DS_
                                           ;	.line	148; "../main.c"	CANCMR = 0x04;//促使信息计数器减1
0071bf   9804     MOV	R0, #0x4             	MOV	R0,# 0x04
0071c0   e105     MOVB	#0x05               	BANKSEL	_CANCMR
0071c1   513e     MOV	0x3e, R0             	MOV	_CANCMR, R0
                                           ;	.line	149; "../main.c"	CANRXIF =0;
                                           	BANKSEL	_CANIF_bits
0071c2   6019     CLR	0x19, 0              	CLR	_CANIF_bits, 0
0071c3   c062     JMP	#0x62                	JMP	_00027_DS_
0071c4   0008     CRET                     	CRET	
                                           func._Main_CleanTimeSet	.code
                                           _Main_CleanTimeSet	;Function start
                                           ;	.line	175; "../main.c"	cleantime = 0U;
007853   e100     MOVB	#0x00               	BANKSEL	_cleantime
007854   03b8     CLR	0xb8                 	CLR	_cleantime
                                           	BANKSEL	_cleantime
007855   03b9     CLR	0xb9                 	CLR	(_cleantime + 1)
007856   0008     CRET                     	CRET	
                                           func._Main_DataClean	.code
                                           _Main_DataClean	;Function start
                                           ;	.line	161; "../main.c"	if (TX_Data[0]!= 0U || TX_Data[1]!= 0U)
0077b3   e100     MOVB	#0x00               	BANKSEL	_TX_Data
0077b4   0e95     MOVZ	R0, 0x95            	MOVZ	R0,  (_TX_Data + 0)
0077b5   e101     MOVB	#0x01               	BANKSEL	r0x102D
0077b6   5182     MOV	0x82, R0             	MOV	r0x102D, R0
0077b7   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x102D
0077b8   3082     ORL	R0, 0x82             	ORL	R0, r0x102D
0077b9   7a03     JB	0x3, 2                	JB	PSW, 2
0077ba   c7c3     JMP	#0x7c3               	JMP	_00075_DS_
0077bb   e100     MOVB	#0x00               	BANKSEL	_TX_Data
0077bc   0e96     MOVZ	R0, 0x96            	MOVZ	R0,  (_TX_Data + 1)
0077bd   e101     MOVB	#0x01               	BANKSEL	r0x102D
0077be   5182     MOV	0x82, R0             	MOV	r0x102D, R0
0077bf   9800     MOV	R0, #0               	MOV	R0,# 0x00
                                           	BANKSEL	r0x102D
0077c0   3082     ORL	R0, 0x82             	ORL	R0, r0x102D
0077c1   7203     JNB	0x3, 2               	JNB	PSW, 2
0077c2   c7d0     JMP	#0x7d0               	JMP	_00078_DS_
                                           _00075_DS_
                                           ;	.line	163; "../main.c"	if (cleantime >= 100)
0077c3   9800     MOV	R0, #0               	MOV	R0,# 0x00
0077c4   e100     MOVB	#0x00               	BANKSEL	_cleantime
0077c5   38b9     SUB	R0, 0xb9             	SUB	R0, (_cleantime + 1)
0077c6   7a03     JB	0x3, 2                	JB	PSW, 2
0077c7   c7ca     JMP	#0x7ca               	JMP	_00082_DS_
0077c8   9864     MOV	R0, #0x64            	MOV	R0,# 0x64
                                           	BANKSEL	_cleantime
0077c9   38b8     SUB	R0, 0xb8             	SUB	R0, _cleantime
                                           _00082_DS_
0077ca   7803     JB	0x3, 0                	JB	PSW, 0
0077cb   c7d0     JMP	#0x7d0               	JMP	_00078_DS_
                                           ;	.line	165; "../main.c"	cleantime = 0;
                                           	BANKSEL	_cleantime
0077cc   03b8     CLR	0xb8                 	CLR	_cleantime
                                           	BANKSEL	_cleantime
0077cd   03b9     CLR	0xb9                 	CLR	(_cleantime + 1)
                                           ;	.line	166; "../main.c"	TX_Data[0] = 0U;
                                           	BANKSEL	_TX_Data
0077ce   0395     CLR	0x95                 	CLR	 (_TX_Data + 0)
                                           ;	.line	167; "../main.c"	TX_Data[1] = 0U;
                                           	BANKSEL	_TX_Data
0077cf   0396     CLR	0x96                 	CLR	 (_TX_Data + 1)
                                           _00078_DS_
0077d0   0008     CRET                     	CRET	
                                           	.end
                                           .org_7ef0
007ef0   5170     MOV	0x70, R0            
007ef1   5017     MOV	R0, 0x17            
007ef2   e100     MOVB	#0x00              
007ef3   624a     CLR	0x4a, 2             
007ef4   614a     CLR	0x4a, 1             
007ef5   51f5     MOV	0xf5, R0            
007ef6   500b     MOV	R0, 0xb             
007ef7   5172     MOV	0x72, R0            
007ef8   502e     MOV	R0, 0x2e            
007ef9   5171     MOV	0x71, R0            
007efa   7371     JNB	0x71, 3             
007efb   660b     CLR	0xb, 6              
007efc   53f4     MOV	0xf4, R1            
007efd   5003     MOV	R0, 0x3             
007efe   51f6     MOV	0xf6, R0            
007eff   e07f     MOVP	#0x7F              
007f00   506e     MOV	R0, 0x6e            
007f01   fe38     CLR	R0, 7               
007f02   517f     MOV	0x7f, R0            
007f03   506f     MOV	R0, 0x6f            
007f04   fe00     CLR	R0, 0               
007f05   307f     ORL	R0, 0x7f            
007f06   7a03     JB	0x3, 2               
007f07   cf0a     JMP	#0xf0a              
007f08   03f7     CLR	0xf7                
007f09   cf16     JMP	#0xf16              
007f0a   7a76     JB	0x76, 2              
007f0b   cf0e     JMP	#0xf0e              
007f0c   9875     MOV	R0, #0x75           
007f0d   cf13     JMP	#0xf13              
007f0e   7976     JB	0x76, 1              
007f0f   cf12     JMP	#0xf12              
007f10   9874     MOV	R0, #0x74           
007f11   cf13     JMP	#0xf13              
007f12   9873     MOV	R0, #0x73           
007f13   5104     MOV	0x4, R0             
007f14   5000     MOV	R0, 0               
007f15   51f7     MOV	0xf7, R0            
007f16   503b     MOV	R0, 0x3b            
007f17   51f8     MOV	0xf8, R0            
007f18   5039     MOV	R0, 0x39            
007f19   51f9     MOV	0xf9, R0            
007f1a   503c     MOV	R0, 0x3c            
007f1b   51fa     MOV	0xfa, R0            
007f1c   68f3     SET	0xf3, 0             
007f1d   5002     MOV	R0, 0x2             
007f1e   51fd     MOV	0xfd, R0            
007f1f   98c8     MOV	R0, #0xc8           
007f20   5102     MOV	0x2, R0             
007f21   60f3     CLR	0xf3, 0             
007f22   5002     MOV	R0, 0x2             
007f23   51fd     MOV	0xfd, R0            
007f24   98c8     MOV	R0, #0xc8           
007f25   5102     MOV	0x2, R0             
007f26   9806     MOV	R0, #0x6            
007f27   38fb     SUB	R0, 0xfb            
007f28   7003     JNB	0x3, 0              
007f29   cf1c     JMP	#0xf1c              
007f2a   50fb     MOV	R0, 0xfb            
007f2b   2102     ADD	0x2, R0             
007f2c   cf32     JMP	#0xf32              
007f2d   cf34     JMP	#0xf34              
007f2e   cf64     JMP	#0xf64              
007f2f   cf88     JMP	#0xf88              
007f30   cfb3     JMP	#0xfb3              
007f31   cfb5     JMP	#0xfb5              
007f32   69f3     SET	0xf3, 1             
007f33   cf35     JMP	#0xf35              
007f34   61f3     CLR	0xf3, 1             
007f35   68f3     SET	0xf3, 0             
007f36   5002     MOV	R0, 0x2             
007f37   51fd     MOV	0xfd, R0            
007f38   98c8     MOV	R0, #0xc8           
007f39   5102     MOV	0x2, R0             
007f3a   50fb     MOV	R0, 0xfb            
007f3b   5104     MOV	0x4, R0             
007f3c   5002     MOV	R0, 0x2             
007f3d   51fd     MOV	0xfd, R0            
007f3e   98c8     MOV	R0, #0xc8           
007f3f   5102     MOV	0x2, R0             
007f40   50fb     MOV	R0, 0xfb            
007f41   51fe     MOV	0xfe, R0            
007f42   5002     MOV	R0, 0x2             
007f43   51fd     MOV	0xfd, R0            
007f44   98c8     MOV	R0, #0xc8           
007f45   5102     MOV	0x2, R0             
007f46   50fb     MOV	R0, 0xfb            
007f47   51ff     MOV	0xff, R0            
007f48   79f3     JB	0xf3, 1              
007f49   cf56     JMP	#0xf56              
007f4a   50fe     MOV	R0, 0xfe            
007f4b   5117     MOV	0x17, R0            
007f4c   ffff     NOPZ                    
007f4d   5000     MOV	R0, 0               
007f4e   e100     MOVB	#0x00              
007f4f   51fb     MOV	0xfb, R0            
007f50   60f3     CLR	0xf3, 0             
007f51   5002     MOV	R0, 0x2             
007f52   51fd     MOV	0xfd, R0            
007f53   98c8     MOV	R0, #0xc8           
007f54   5102     MOV	0x2, R0             
007f55   cf60     JMP	#0xf60              
007f56   5002     MOV	R0, 0x2             
007f57   51fd     MOV	0xfd, R0            
007f58   98c8     MOV	R0, #0xc8           
007f59   5102     MOV	0x2, R0             
007f5a   50fb     MOV	R0, 0xfb            
007f5b   52fe     MOV	R1, 0xfe            
007f5c   5317     MOV	0x17, R1            
007f5d   ffff     NOPZ                    
007f5e   5100     MOV	0, R0               
007f5f   e100     MOVB	#0x00              
007f60   0b04     INC	0x4                 
007f61   09ff     DECJZ	0xff              
007f62   cf48     JMP	#0xf48              
007f63   cf1c     JMP	#0xf1c              
007f64   68f3     SET	0xf3, 0             
007f65   5002     MOV	R0, 0x2             
007f66   51fd     MOV	0xfd, R0            
007f67   98c8     MOV	R0, #0xc8           
007f68   5102     MOV	0x2, R0             
007f69   50fb     MOV	R0, 0xfb            
007f6a   513b     MOV	0x3b, R0            
007f6b   5002     MOV	R0, 0x2             
007f6c   51fd     MOV	0xfd, R0            
007f6d   98c8     MOV	R0, #0xc8           
007f6e   5102     MOV	0x2, R0             
007f6f   5002     MOV	R0, 0x2             
007f70   51fd     MOV	0xfd, R0            
007f71   98c8     MOV	R0, #0xc8           
007f72   5102     MOV	0x2, R0             
007f73   52fb     MOV	R1, 0xfb            
007f74   9801     MOV	R0, #0x1            
007f75   513c     MOV	0x3c, R0            
007f76   ffff     NOPZ                    
007f77   60f3     CLR	0xf3, 0             
007f78   5039     MOV	R0, 0x39            
007f79   51fb     MOV	0xfb, R0            
007f7a   5002     MOV	R0, 0x2             
007f7b   51fd     MOV	0xfd, R0            
007f7c   98c8     MOV	R0, #0xc8           
007f7d   5102     MOV	0x2, R0             
007f7e   9800     MOV	R0, #0              
007f7f   51fb     MOV	0xfb, R0            
007f80   5002     MOV	R0, 0x2             
007f81   51fd     MOV	0xfd, R0            
007f82   98c8     MOV	R0, #0xc8           
007f83   5102     MOV	0x2, R0             
007f84   0b3b     INC	0x3b                
007f85   ff59     DECJZ	R1                
007f86   cf74     JMP	#0xf74              
007f87   cf1c     JMP	#0xf1c              
007f88   68f3     SET	0xf3, 0             
007f89   5002     MOV	R0, 0x2             
007f8a   51fd     MOV	0xfd, R0            
007f8b   98c8     MOV	R0, #0xc8           
007f8c   5102     MOV	0x2, R0             
007f8d   980c     MOV	R0, #0xc            
007f8e   38fb     SUB	R0, 0xfb            
007f8f   7003     JNB	0x3, 0              
007f90   cf1c     JMP	#0xf1c              
007f91   50fb     MOV	R0, 0xfb            
007f92   f800     ADD	R0, R0              
007f93   2102     ADD	0x2, R0             
007f94   5070     MOV	R0, 0x70            
007f95   cfac     JMP	#0xfac              
007f96   50f4     MOV	R0, 0xf4            
007f97   cfac     JMP	#0xfac              
007f98   f8d0     MOV	R0, R2              
007f99   cfac     JMP	#0xfac              
007f9a   f8d8     MOV	R0, R3              
007f9b   cfac     JMP	#0xfac              
007f9c   f8e0     MOV	R0, R4              
007f9d   cfac     JMP	#0xfac              
007f9e   f8e8     MOV	R0, R5              
007f9f   cfac     JMP	#0xfac              
007fa0   f8f0     MOV	R0, R6              
007fa1   cfac     JMP	#0xfac              
007fa2   f8f8     MOV	R0, R7              
007fa3   cfac     JMP	#0xfac              
007fa4   50f6     MOV	R0, 0xf6            
007fa5   cfac     JMP	#0xfac              
007fa6   50f7     MOV	R0, 0xf7            
007fa7   cfac     JMP	#0xfac              
007fa8   506e     MOV	R0, 0x6e            
007fa9   cfac     JMP	#0xfac              
007faa   506f     MOV	R0, 0x6f            
007fab   cfac     JMP	#0xfac              
007fac   51fb     MOV	0xfb, R0            
007fad   60f3     CLR	0xf3, 0             
007fae   5002     MOV	R0, 0x2             
007faf   51fd     MOV	0xfd, R0            
007fb0   98c8     MOV	R0, #0xc8           
007fb1   5102     MOV	0x2, R0             
007fb2   cf1c     JMP	#0xf1c              
007fb3   6f6e     SET	0x6e, 7             
007fb4   cfb6     JMP	#0xfb6              
007fb5   676e     CLR	0x6e, 7             
007fb6   6a25     SET	0x25, 2             
007fb7   50f9     MOV	R0, 0xf9            
007fb8   5139     MOV	0x39, R0            
007fb9   50f8     MOV	R0, 0xf8            
007fba   513b     MOV	0x3b, R0            
007fbb   50f6     MOV	R0, 0xf6            
007fbc   5103     MOV	0x3, R0             
007fbd   52f4     MOV	R1, 0xf4            
007fbe   7b71     JB	0x71, 3              
007fbf   cfc2     JMP	#0xfc2              
007fc0   7672     JNB	0x72, 6             
007fc1   6e0b     SET	0xb, 6              
007fc2   50f7     MOV	R0, 0xf7            
007fc3   510a     MOV	0xa, R0             
007fc4   50f5     MOV	R0, 0xf5            
007fc5   5117     MOV	0x17, R0            
007fc6   5070     MOV	R0, 0x70            
007fc7   0008     CRET                    
007fc8   e100     MOVB	#0x00              
007fc9   6a25     SET	0x25, 2             
007fca   6925     SET	0x25, 1             
007fcb   7105     JNB	0x5, 1              
007fcc   cfcb     JMP	#0xfcb              
007fcd   7905     JB	0x5, 1               
007fce   cfcd     JMP	#0xfcd              
007fcf   6225     CLR	0x25, 2             
007fd0   6245     CLR	0x45, 2             
007fd1   9808     MOV	R0, #0x8            
007fd2   51fc     MOV	0xfc, R0            
007fd3   50fb     MOV	R0, 0xfb            
007fd4   78f3     JB	0xf3, 0              
007fd5   cfe3     JMP	#0xfe3              
007fd6   6a45     SET	0x45, 2             
007fd7   cfd8     JMP	#0xfd8              
007fd8   cfd9     JMP	#0xfd9              
007fd9   cfda     JMP	#0xfda              
007fda   0000     NOP                     
007fdb   6245     CLR	0x45, 2             
007fdc   6003     CLR	0x3, 0              
007fdd   7105     JNB	0x5, 1              
007fde   6803     SET	0x3, 0              
007fdf   13fb     RLC	0xfb                
007fe0   09fc     DECJZ	0xfc              
007fe1   cfd6     JMP	#0xfd6              
007fe2   cff0     JMP	#0xff0              
007fe3   6125     CLR	0x25, 1             
007fe4   cfe5     JMP	#0xfe5              
007fe5   0000     NOP                     
007fe6   6a45     SET	0x45, 2             
007fe7   ff18     RLC	R0                  
007fe8   7803     JB	0x3, 0               
007fe9   6145     CLR	0x45, 1             
007fea   7003     JNB	0x3, 0              
007feb   6945     SET	0x45, 1             
007fec   cfed     JMP	#0xfed              
007fed   6245     CLR	0x45, 2             
007fee   09fc     DECJZ	0xfc              
007fef   cfe4     JMP	#0xfe4              
007ff0   50fd     MOV	R0, 0xfd            
007ff1   8003     ADD	R0, #0x3            
007ff2   5102     MOV	0x2, R0             
                                           .org_8004
008004   cef0     JMP	#0xef0              
                                           .config
008007   06d4     DECR	0xd4               
008008   ffff     NOPZ                    
                                           fun.__gptrget1
0077eb   a800     XOR	R0, #0              
0077ec   7203     JNB	0x3, 2              
0077ed   c7f2     JMP	#0x7f2              
0077ee   a880     XOR	R0, #0x80           
0077ef   7203     JNB	0x3, 2              
0077f0   c7f7     JMP	#0x7f7              
0077f1   c7fd     JMP	#0x7fd              
0077f2   527d     MOV	R1, 0x7d            
0077f3   5e7e     MOV	R7, 0x7e            
0077f4   5f17     MOV	0x17, R7            
0077f5   f708     LD	R0, [R1]             
0077f6   c7fd     JMP	#0x7fd              
0077f7   527e     MOV	R1, 0x7e            
0077f8   507d     MOV	R0, 0x7d            
0077f9   9f7f     MOV	R7, #0x7f           
0077fa   5f73     MOV	0x73, R7            
0077fb   e07f     MOVP	#0x7F              
0077fc   dff3     CALL	#0xff3             
0077fd   0008     CRET                    
                                           fun.__R2PCL
007ff3   5373     MOV	0x73, R1            
007ff4   530a     MOV	0xa, R1             
007ff5   5102     MOV	0x2, R0             
                                           func.__gsinit_startup
00784b   9f77     MOV	R7, #0x77           
00784c   5f73     MOV	0x73, R7            
00784d   e077     MOVP	#0x77              
00784e   d7fe     CALL	#0x7fe             
00784f   9f78     MOV	R7, #0x78           
007850   5f73     MOV	0x73, R7            
007851   e078     MOVP	#0x78              
007852   0008     CRET                    
                                           func.__hmulint
007811   e102     MOVB	#0x02              
007812   034f     CLR	0x4f                
007813   5150     MOV	0x50, R0            
007814   507e     MOV	R0, 0x7e            
007815   5148     MOV	0x48, R0            
007816   507d     MOV	R0, 0x7d            
007817   5149     MOV	0x49, R0            
007818   507c     MOV	R0, 0x7c            
007819   514e     MOV	0x4e, R0            
00781a   694f     SET	0x4f, 1             
00781b   784f     JB	0x4f, 0              
00781c   c81b     JMP	#0x81b              
00781d   034f     CLR	0x4f                
00781e   504d     MOV	R0, 0x4d            
00781f   517e     MOV	0x7e, R0            
007820   504c     MOV	R0, 0x4c            
007821   0008     CRET                    
007822   0008     CRET                    
                                           _sartup_A100GQP
00776f   e100     MOVB	#0x00              
007770   6f53     SET	0x53, 7             
007771   6853     SET	0x53, 0             
007772   e070     MOVP	#0x70              
007773   dffb     CALL	#0xffb             
007774   e103     MOVB	#0x03              
007775   5161     MOV	0x61, R0            
007776   ffff     NOPZ                    
007777   ffff     NOPZ                    
007778   dff8     CALL	#0xff8             
007779   5165     MOV	0x65, R0            
00777a   ffff     NOPZ                    
00777b   ffff     NOPZ                    
00777c   e100     MOVB	#0x00              
00777d   6753     CLR	0x53, 7             
00777e   dffe     CALL	#0xffe             
00777f   e100     MOVB	#0x00              
007780   5137     MOV	0x37, R0            
007781   ffff     NOPZ                    
007782   ffff     NOPZ                    
007783   dffd     CALL	#0xffd             
007784   5130     MOV	0x30, R0            
007785   ffff     NOPZ                    
007786   ffff     NOPZ                    
007787   dffc     CALL	#0xffc             
007788   e101     MOVB	#0x01              
007789   5132     MOV	0x32, R0            
00778a   ffff     NOPZ                    
00778b   ffff     NOPZ                    
00778c   dffa     CALL	#0xffa             
00778d   e102     MOVB	#0x02              
00778e   513b     MOV	0x3b, R0            
00778f   ffff     NOPZ                    
007790   dff9     CALL	#0xff9             
007791   513c     MOV	0x3c, R0            
007792   ffff     NOPZ                    
007793   0008     CRET                    
                                           .cinit
0077fe   e100     MOVB	#0x00              
0077ff   9870     MOV	R0, #0x70           
007800   9910     MOV	R1, #0x10           
007801   d80b     CALL	#0x80b             
007802   e100     MOVB	#0x00              
007803   9880     MOV	R0, #0x80           
007804   9980     MOV	R1, #0x80           
007805   d80b     CALL	#0x80b             
007806   e101     MOVB	#0x01              
007807   9880     MOV	R0, #0x80           
007808   9912     MOV	R1, #0x12           
007809   d80b     CALL	#0x80b             
00780a   0008     CRET                    
00780b   020a     CLR	R2                  
00780c   f750     ST	[R0], R2             
00780d   ff10     INC	R0                  
00780e   ff59     DECJZ	R1                
00780f   c80c     JMP	#0x80c              
007810   0008     CRET                    
